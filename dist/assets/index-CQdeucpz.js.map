{"version":3,"file":"index-CQdeucpz.js","sources":["../../src/entities/AlienBall.ts","../../src/entities/BossBall.ts","../../src/entities/BossProjectile.ts","../../src/entities/Ship.ts","../../src/entities/PlayerShip.ts","../../src/render/Canvas.ts","../../src/render/Draw.ts","../../src/core/Loop.ts","../../src/core/Input.ts","../../src/core/Store.ts","../../src/math/rng.ts","../../src/core/Save.ts","../../src/entities/Laser.ts","../../src/systems/LaserSystem.ts","../../src/entities/Ripple.ts","../../src/systems/RippleSystem.ts","../../src/systems/UpgradeSystem.ts","../../src/systems/AutoFireSystem.ts","../../src/ui/Hud.ts","../../src/ui/Button.ts","../../src/ui/Shop.ts","../../src/ui/UpgradesDisplay.ts","../../src/ui/Layout.ts","../../src/math/ColorManager.ts","../../src/Game.ts","../../src/main.ts"],"sourcesContent":["import type { Draw } from '../render/Draw';\r\nimport type { Vec2, BallColor } from '../types';\r\n\r\nexport class AlienBall {\r\n  private flashTime = 0;\r\n  private flashDuration = 0.15;\r\n  public currentHp: number;\r\n  public maxHp: number;\r\n  private breakAnimTime = 0;\r\n  private breakAnimDuration = 0.4;\r\n\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public radius: number,\r\n    public color: BallColor,\r\n  ) {\r\n    // Randomize HP between base value and 150% of base value\r\n    const baseHp = color.hp;\r\n    this.maxHp = Math.floor(baseHp + Math.random() * baseHp * 0.5);\r\n    this.currentHp = this.maxHp;\r\n  }\r\n\r\n  private static getRandomColor(): BallColor {\r\n    const colors = [\r\n      { fill: '#ff4444', stroke: '#cc0000', hp: 100 },   // Red\r\n      { fill: '#ff8800', stroke: '#cc6600', hp: 100 },   // Orange\r\n      { fill: '#ffdd00', stroke: '#ccaa00', hp: 100 },   // Yellow\r\n      { fill: '#88ff00', stroke: '#66cc00', hp: 100 },   // Lime\r\n      { fill: '#00ff88', stroke: '#00cc66', hp: 100 },   // Green\r\n      { fill: '#0088ff', stroke: '#0066cc', hp: 100 },   // Blue\r\n      { fill: '#8800ff', stroke: '#6600cc', hp: 100 },   // Purple\r\n      { fill: '#ff0088', stroke: '#cc0066', hp: 100 },   // Pink\r\n      { fill: '#ff6600', stroke: '#cc4400', hp: 100 },   // Deep Orange\r\n      { fill: '#ffaa00', stroke: '#cc8800', hp: 100 },   // Gold\r\n      { fill: '#00ffff', stroke: '#00cccc', hp: 100 },   // Cyan\r\n      { fill: '#ff00ff', stroke: '#cc00cc', hp: 100 },   // Magenta\r\n      { fill: '#66ff66', stroke: '#44cc44', hp: 100 },   // Light Green\r\n      { fill: '#ff6666', stroke: '#cc4444', hp: 100 },   // Light Red\r\n      { fill: '#6666ff', stroke: '#4444cc', hp: 100 },   // Light Blue\r\n    ];\r\n    return colors[Math.floor(Math.random() * colors.length)]!;\r\n  }\r\n\r\n  static createRandom(x: number, y: number, radius: number, level: number): AlienBall {\r\n    const color = AlienBall.getRandomColor();\r\n    // HP scales with level\r\n    const levelScaledColor = {\r\n      ...color,\r\n      hp: Math.floor(color.hp * (1 + level * 0.3))\r\n    };\r\n    return new AlienBall(x, y, radius, levelScaledColor);\r\n  }\r\n\r\n  isPointInside(point: Vec2): boolean {\r\n    const dx = point.x - this.x;\r\n    const dy = point.y - this.y;\r\n    return Math.sqrt(dx * dx + dy * dy) <= this.radius;\r\n  }\r\n\r\n  takeDamage(amount: number): boolean {\r\n    this.currentHp = Math.max(0, this.currentHp - amount);\r\n    this.triggerFlash();\r\n    if (this.currentHp <= 0) {\r\n      this.breakAnimTime = this.breakAnimDuration;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  triggerFlash(): void {\r\n    this.flashTime = this.flashDuration;\r\n  }\r\n\r\n  isBreaking(): boolean {\r\n    return this.breakAnimTime > 0;\r\n  }\r\n\r\n  update(dt: number): void {\r\n    if (this.flashTime > 0) {\r\n      this.flashTime = Math.max(0, this.flashTime - dt);\r\n    }\r\n    if (this.breakAnimTime > 0) {\r\n      this.breakAnimTime = Math.max(0, this.breakAnimTime - dt);\r\n    }\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    if (this.breakAnimTime > 0) {\r\n      const progress = 1 - this.breakAnimTime / this.breakAnimDuration;\r\n      const alpha = 1 - progress;\r\n      const scale = 1 + progress * 0.5;\r\n      \r\n      drawer.setAlpha(alpha);\r\n      drawer.setFill(this.color.fill);\r\n      drawer.circle(this.x, this.y, this.radius * scale);\r\n      drawer.setStroke(this.color.stroke, 3);\r\n      drawer.circle(this.x, this.y, this.radius * scale, false);\r\n      drawer.resetAlpha();\r\n      return;\r\n    }\r\n\r\n    drawer.setFill(this.color.fill);\r\n    drawer.circle(this.x, this.y, this.radius);\r\n    drawer.setStroke(this.color.stroke, 2);\r\n    drawer.circle(this.x, this.y, this.radius, false);\r\n\r\n    const hpBarWidth = this.radius * 1.5;\r\n    const hpBarHeight = 6;\r\n    const hpBarY = this.y - this.radius - 15;\r\n    const hpPercent = this.currentHp / this.maxHp;\r\n\r\n    drawer.setStroke('#fff', 1);\r\n    drawer.setFill('#000');\r\n    drawer.getContext().fillRect(\r\n      this.x - hpBarWidth / 2,\r\n      hpBarY,\r\n      hpBarWidth,\r\n      hpBarHeight,\r\n    );\r\n    drawer.getContext().strokeRect(\r\n      this.x - hpBarWidth / 2,\r\n      hpBarY,\r\n      hpBarWidth,\r\n      hpBarHeight,\r\n    );\r\n\r\n    drawer.setFill(this.color.fill);\r\n    drawer.getContext().fillRect(\r\n      this.x - hpBarWidth / 2 + 1,\r\n      hpBarY + 1,\r\n      (hpBarWidth - 2) * hpPercent,\r\n      hpBarHeight - 2,\r\n    );\r\n\r\n    if (this.flashTime > 0) {\r\n      const flashAlpha = this.flashTime / this.flashDuration;\r\n      drawer.setAlpha(flashAlpha * 0.5);\r\n      drawer.setStroke('#fff', 3);\r\n      const flashRadius = this.radius * (1 + (1 - flashAlpha) * 0.3);\r\n      drawer.circle(this.x, this.y, flashRadius, false);\r\n      drawer.resetAlpha();\r\n    }\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class BossBall {\r\n  private flashTime = 0;\r\n  private flashDuration = 0.15;\r\n  public currentHp: number;\r\n  public maxHp: number;\r\n  private breakAnimTime = 0;\r\n  private breakAnimDuration = 0.6;\r\n  public x: number;\r\n  public y: number;\r\n  private vx = 0;\r\n  private vy = 0;\r\n  private speed = 150;\r\n  private attackTimer = 0;\r\n  private attackCooldown = 2; // Fire projectiles every 2 seconds\r\n  private phase = 1;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    public radius: number,\r\n    hp: number,\r\n  ) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.maxHp = hp;\r\n    this.currentHp = this.maxHp;\r\n    const angle = Math.random() * Math.PI * 2;\r\n    this.vx = Math.cos(angle) * this.speed;\r\n    this.vy = Math.sin(angle) * this.speed;\r\n  }\r\n\r\n  isPointInside(point: Vec2): boolean {\r\n    const dx = point.x - this.x;\r\n    const dy = point.y - this.y;\r\n    return Math.sqrt(dx * dx + dy * dy) <= this.radius;\r\n  }\r\n\r\n  takeDamage(amount: number): boolean {\r\n    this.currentHp = Math.max(0, this.currentHp - amount);\r\n    this.triggerFlash();\r\n    if (this.currentHp <= 0) {\r\n      this.breakAnimTime = this.breakAnimDuration;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  triggerFlash(): void {\r\n    this.flashTime = this.flashDuration;\r\n  }\r\n\r\n  isBreaking(): boolean {\r\n    return this.breakAnimTime > 0;\r\n  }\r\n\r\n  update(dt: number, canvasWidth: number, canvasHeight: number): void {\r\n    if (this.flashTime > 0) {\r\n      this.flashTime = Math.max(0, this.flashTime - dt);\r\n    }\r\n    if (this.breakAnimTime > 0) {\r\n      this.breakAnimTime = Math.max(0, this.breakAnimTime - dt);\r\n      return;\r\n    }\r\n\r\n    // Update phase based on HP\r\n    const hpPercent = this.currentHp / this.maxHp;\r\n    if (hpPercent < 0.33) {\r\n      this.phase = 3;\r\n      this.speed = 250;\r\n      this.attackCooldown = 0.8;\r\n    } else if (hpPercent < 0.66) {\r\n      this.phase = 2;\r\n      this.speed = 200;\r\n      this.attackCooldown = 1.2;\r\n    }\r\n\r\n    this.x += this.vx * dt;\r\n    this.y += this.vy * dt;\r\n\r\n    if (this.x - this.radius < 0 || this.x + this.radius > canvasWidth) {\r\n      this.vx *= -1;\r\n      this.x = Math.max(this.radius, Math.min(canvasWidth - this.radius, this.x));\r\n    }\r\n    if (this.y - this.radius < 0 || this.y + this.radius > canvasHeight) {\r\n      this.vy *= -1;\r\n      this.y = Math.max(this.radius, Math.min(canvasHeight - this.radius, this.y));\r\n    }\r\n\r\n    // Update attack timer\r\n    this.attackTimer += dt;\r\n  }\r\n\r\n  shouldAttack(): boolean {\r\n    if (this.attackTimer >= this.attackCooldown) {\r\n      this.attackTimer = 0;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPhase(): number {\r\n    return this.phase;\r\n  }\r\n\r\n  getAttackPattern(): 'single' | 'spread' | 'spiral' {\r\n    if (this.phase === 3) return 'spiral';\r\n    if (this.phase === 2) return 'spread';\r\n    return 'single';\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    if (this.breakAnimTime > 0) {\r\n      const progress = 1 - this.breakAnimTime / this.breakAnimDuration;\r\n      const alpha = 1 - progress;\r\n      const scale = 1 + progress * 0.8;\r\n      \r\n      drawer.setAlpha(alpha);\r\n      drawer.setFill('#fff');\r\n      drawer.circle(this.x, this.y, this.radius * scale);\r\n      drawer.setStroke('#fff', 4);\r\n      drawer.circle(this.x, this.y, this.radius * scale, false);\r\n      drawer.resetAlpha();\r\n      return;\r\n    }\r\n\r\n    drawer.setFill('#fff');\r\n    drawer.circle(this.x, this.y, this.radius);\r\n    drawer.setStroke('#fff', 3);\r\n    drawer.circle(this.x, this.y, this.radius, false);\r\n\r\n    const eyeOffset = this.radius * 0.3;\r\n    const eyeSize = this.radius * 0.15;\r\n    drawer.setFill('#000');\r\n    drawer.circle(this.x - eyeOffset, this.y - eyeOffset * 0.5, eyeSize);\r\n    drawer.circle(this.x + eyeOffset, this.y - eyeOffset * 0.5, eyeSize);\r\n\r\n    const hpBarWidth = this.radius * 2;\r\n    const hpBarHeight = 10;\r\n    const hpBarY = this.y - this.radius - 20;\r\n    const hpPercent = this.currentHp / this.maxHp;\r\n\r\n    drawer.setStroke('#fff', 2);\r\n    drawer.setFill('#000');\r\n    drawer.getContext().fillRect(\r\n      this.x - hpBarWidth / 2,\r\n      hpBarY,\r\n      hpBarWidth,\r\n      hpBarHeight,\r\n    );\r\n    drawer.getContext().strokeRect(\r\n      this.x - hpBarWidth / 2,\r\n      hpBarY,\r\n      hpBarWidth,\r\n      hpBarHeight,\r\n    );\r\n\r\n    drawer.setFill('#fff');\r\n    drawer.getContext().fillRect(\r\n      this.x - hpBarWidth / 2 + 2,\r\n      hpBarY + 2,\r\n      (hpBarWidth - 4) * hpPercent,\r\n      hpBarHeight - 4,\r\n    );\r\n\r\n    if (this.flashTime > 0) {\r\n      const flashAlpha = this.flashTime / this.flashDuration;\r\n      drawer.setAlpha(flashAlpha * 0.6);\r\n      drawer.setStroke('#fff', 4);\r\n      const flashRadius = this.radius * (1 + (1 - flashAlpha) * 0.4);\r\n      drawer.circle(this.x, this.y, flashRadius, false);\r\n      drawer.resetAlpha();\r\n    }\r\n  }\r\n\r\n  getPosition(): Vec2 {\r\n    return { x: this.x, y: this.y };\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class BossProjectile {\r\n  private x: number;\r\n  private y: number;\r\n  private vx: number;\r\n  private vy: number;\r\n  private radius = 8;\r\n  private lifetime = 5;\r\n  private age = 0;\r\n\r\n  constructor(x: number, y: number, targetX: number, targetY: number, speed: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    // Calculate direction to target\r\n    const dx = targetX - x;\r\n    const dy = targetY - y;\r\n    const dist = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    // Normalize and apply speed\r\n    this.vx = (dx / dist) * speed;\r\n    this.vy = (dy / dist) * speed;\r\n  }\r\n\r\n  update(dt: number): boolean {\r\n    this.x += this.vx * dt * 60;\r\n    this.y += this.vy * dt * 60;\r\n    this.age += dt;\r\n\r\n    // Return true if projectile should be removed\r\n    return this.age >= this.lifetime;\r\n  }\r\n\r\n  draw(draw: Draw): void {\r\n    const alpha = Math.max(0, 1 - this.age / this.lifetime);\r\n    draw.setAlpha(alpha);\r\n    draw.setFill('#ff0000');\r\n    draw.circle(this.x, this.y, this.radius, true);\r\n    draw.setFill('#ff6666');\r\n    draw.circle(this.x, this.y, this.radius * 0.5, true);\r\n    draw.resetAlpha();\r\n  }\r\n\r\n  getPosition(): Vec2 {\r\n    return { x: this.x, y: this.y };\r\n  }\r\n\r\n  getRadius(): number {\r\n    return this.radius;\r\n  }\r\n\r\n  checkCollision(point: Vec2, targetRadius: number): boolean {\r\n    const dx = this.x - point.x;\r\n    const dy = this.y - point.y;\r\n    const dist = Math.sqrt(dx * dx + dy * dy);\r\n    return dist < this.radius + targetRadius;\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class Ship {\r\n  public x = 0;\r\n  public y = 0;\r\n\r\n  constructor(\r\n    public angle: number,\r\n    private centerX: number,\r\n    private centerY: number,\r\n    private orbitRadius: number,\r\n    public isMainShip = false,\r\n  ) {\r\n    this.updatePosition();\r\n  }\r\n\r\n  updatePosition(): void {\r\n    this.x = this.centerX + Math.cos(this.angle) * this.orbitRadius;\r\n    this.y = this.centerY + Math.sin(this.angle) * this.orbitRadius;\r\n  }\r\n\r\n  rotate(dt: number, speed = 0.5): void {\r\n    this.angle += speed * dt;\r\n    this.updatePosition();\r\n  }\r\n\r\n  setOrbit(centerX: number, centerY: number, orbitRadius: number): void {\r\n    this.centerX = centerX;\r\n    this.centerY = centerY;\r\n    this.orbitRadius = orbitRadius;\r\n    this.updatePosition();\r\n  }\r\n\r\n  getPosition(): Vec2 {\r\n    return { x: this.x, y: this.y };\r\n  }\r\n\r\n  getFrontPosition(): Vec2 {\r\n    const size = this.isMainShip ? 12 : 8;\r\n    return {\r\n      x: this.x + Math.cos(this.angle + Math.PI) * size,\r\n      y: this.y + Math.sin(this.angle + Math.PI) * size,\r\n    };\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    const size = this.isMainShip ? 12 : 8;\r\n    const tipX = this.x + Math.cos(this.angle + Math.PI) * size;\r\n    const tipY = this.y + Math.sin(this.angle + Math.PI) * size;\r\n    const left = {\r\n      x: this.x + Math.cos(this.angle + Math.PI * 0.7) * size * 0.6,\r\n      y: this.y + Math.sin(this.angle + Math.PI * 0.7) * size * 0.6,\r\n    };\r\n    const right = {\r\n      x: this.x + Math.cos(this.angle + Math.PI * 1.3) * size * 0.6,\r\n      y: this.y + Math.sin(this.angle + Math.PI * 1.3) * size * 0.6,\r\n    };\r\n\r\n    if (this.isMainShip) {\r\n      drawer.setStroke('#fff', 2);\r\n      drawer.triangle({ x: tipX, y: tipY }, left, right, false);\r\n      drawer.setFill('#fff');\r\n      const smallSize = size * 0.5;\r\n      const innerTipX = this.x + Math.cos(this.angle + Math.PI) * smallSize;\r\n      const innerTipY = this.y + Math.sin(this.angle + Math.PI) * smallSize;\r\n      const innerLeft = {\r\n        x: this.x + Math.cos(this.angle + Math.PI * 0.75) * smallSize * 0.6,\r\n        y: this.y + Math.sin(this.angle + Math.PI * 0.75) * smallSize * 0.6,\r\n      };\r\n      const innerRight = {\r\n        x: this.x + Math.cos(this.angle + Math.PI * 1.25) * smallSize * 0.6,\r\n        y: this.y + Math.sin(this.angle + Math.PI * 1.25) * smallSize * 0.6,\r\n      };\r\n      drawer.triangle({ x: innerTipX, y: innerTipY }, innerLeft, innerRight);\r\n    } else {\r\n      drawer.setFill('#fff');\r\n      drawer.triangle({ x: tipX, y: tipY }, left, right);\r\n    }\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class PlayerShip {\r\n  public x: number;\r\n  public y: number;\r\n  private vx = 0;\r\n  private vy = 0;\r\n  private angle = -Math.PI / 2;\r\n  private rotationSpeed = 4;\r\n  private acceleration = 300;\r\n  private maxSpeed = 250;\r\n  private friction = 0.98;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  rotate(direction: number, dt: number): void {\r\n    this.angle += direction * this.rotationSpeed * dt;\r\n  }\r\n\r\n  thrust(dt: number): void {\r\n    this.vx += Math.cos(this.angle) * this.acceleration * dt;\r\n    this.vy += Math.sin(this.angle) * this.acceleration * dt;\r\n\r\n    const speed = Math.sqrt(this.vx * this.vx + this.vy * this.vy);\r\n    if (speed > this.maxSpeed) {\r\n      this.vx = (this.vx / speed) * this.maxSpeed;\r\n      this.vy = (this.vy / speed) * this.maxSpeed;\r\n    }\r\n  }\r\n\r\n  update(dt: number, canvasWidth: number, canvasHeight: number): void {\r\n    this.vx *= this.friction;\r\n    this.vy *= this.friction;\r\n\r\n    this.x += this.vx * dt;\r\n    this.y += this.vy * dt;\r\n\r\n    if (this.x < 0) this.x = canvasWidth;\r\n    if (this.x > canvasWidth) this.x = 0;\r\n    if (this.y < 0) this.y = canvasHeight;\r\n    if (this.y > canvasHeight) this.y = 0;\r\n  }\r\n\r\n  getFrontPosition(): Vec2 {\r\n    const size = 15;\r\n    return {\r\n      x: this.x + Math.cos(this.angle) * size,\r\n      y: this.y + Math.sin(this.angle) * size,\r\n    };\r\n  }\r\n\r\n  getPosition(): Vec2 {\r\n    return { x: this.x, y: this.y };\r\n  }\r\n\r\n  getAngle(): number {\r\n    return this.angle;\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    const size = 15;\r\n    const tipX = this.x + Math.cos(this.angle) * size;\r\n    const tipY = this.y + Math.sin(this.angle) * size;\r\n    const left = {\r\n      x: this.x + Math.cos(this.angle + (Math.PI * 2.5) / 3) * size * 0.7,\r\n      y: this.y + Math.sin(this.angle + (Math.PI * 2.5) / 3) * size * 0.7,\r\n    };\r\n    const right = {\r\n      x: this.x + Math.cos(this.angle + (Math.PI * 3.5) / 3) * size * 0.7,\r\n      y: this.y + Math.sin(this.angle + (Math.PI * 3.5) / 3) * size * 0.7,\r\n    };\r\n\r\n    drawer.setStroke('#fff', 2);\r\n    drawer.triangle({ x: tipX, y: tipY }, left, right, false);\r\n\r\n    const speed = Math.sqrt(this.vx * this.vx + this.vy * this.vy);\r\n    if (speed > 50) {\r\n      const flameLength = (speed / this.maxSpeed) * size * 0.5;\r\n      const flameX = this.x - Math.cos(this.angle) * size * 0.3;\r\n      const flameY = this.y - Math.sin(this.angle) * size * 0.3;\r\n      const flameEndX = flameX - Math.cos(this.angle) * flameLength;\r\n      const flameEndY = flameY - Math.sin(this.angle) * flameLength;\r\n\r\n      drawer.setStroke('#fff', 1);\r\n      drawer.line(flameX, flameY, flameEndX, flameEndY);\r\n    }\r\n  }\r\n}\r\n\r\n","export class Canvas {\r\n  private canvas: HTMLCanvasElement;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private dpr: number;\r\n\r\n  constructor(canvasElement: HTMLCanvasElement) {\r\n    this.canvas = canvasElement;\r\n    const context = this.canvas.getContext('2d');\r\n    if (!context) throw new Error('Failed to get 2D context');\r\n    this.ctx = context;\r\n    this.dpr = window.devicePixelRatio || 1;\r\n    this.resize();\r\n    window.addEventListener('resize', () => this.resize());\r\n  }\r\n\r\n  private resize(): void {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    this.canvas.width = rect.width * this.dpr;\r\n    this.canvas.height = rect.height * this.dpr;\r\n    this.ctx.scale(this.dpr, this.dpr);\r\n  }\r\n\r\n  getContext(): CanvasRenderingContext2D {\r\n    return this.ctx;\r\n  }\r\n\r\n  getWidth(): number {\r\n    return this.canvas.width / this.dpr;\r\n  }\r\n\r\n  getHeight(): number {\r\n    return this.canvas.height / this.dpr;\r\n  }\r\n\r\n  getCenterX(): number {\r\n    return this.getWidth() / 2;\r\n  }\r\n\r\n  getCenterY(): number {\r\n    return this.getHeight() / 2;\r\n  }\r\n\r\n  clear(): void {\r\n    this.ctx.save();\r\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    this.ctx.fillStyle = '#000';\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.ctx.restore();\r\n  }\r\n}\r\n\r\n","import type { Vec2 } from '../types';\r\n\r\nexport class Draw {\r\n  constructor(private ctx: CanvasRenderingContext2D) {}\r\n\r\n  getContext(): CanvasRenderingContext2D {\r\n    return this.ctx;\r\n  }\r\n\r\n  circle(x: number, y: number, radius: number, fill = true): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n    if (fill) {\r\n      this.ctx.fill();\r\n    } else {\r\n      this.ctx.stroke();\r\n    }\r\n  }\r\n\r\n  line(x1: number, y1: number, x2: number, y2: number): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(x1, y1);\r\n    this.ctx.lineTo(x2, y2);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  setStroke(color: string, width = 1): void {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.lineWidth = width;\r\n  }\r\n\r\n  setFill(color: string): void {\r\n    this.ctx.fillStyle = color;\r\n  }\r\n\r\n  setAlpha(alpha: number): void {\r\n    this.ctx.globalAlpha = alpha;\r\n  }\r\n\r\n  resetAlpha(): void {\r\n    this.ctx.globalAlpha = 1;\r\n  }\r\n\r\n  triangle(p1: Vec2, p2: Vec2, p3: Vec2, fill = true): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(p1.x, p1.y);\r\n    this.ctx.lineTo(p2.x, p2.y);\r\n    this.ctx.lineTo(p3.x, p3.y);\r\n    this.ctx.closePath();\r\n    if (fill) {\r\n      this.ctx.fill();\r\n    } else {\r\n      this.ctx.stroke();\r\n    }\r\n  }\r\n}\r\n\r\n","export class Loop {\r\n  private running = false;\r\n  private lastTime = 0;\r\n  private accumulator = 0;\r\n  private readonly fixedDt = 1 / 60;\r\n\r\n  constructor(\r\n    private update: (dt: number) => void,\r\n    private render: () => void,\r\n  ) {}\r\n\r\n  start(): void {\r\n    if (this.running) return;\r\n    this.running = true;\r\n    this.lastTime = performance.now();\r\n    this.loop(this.lastTime);\r\n  }\r\n\r\n  stop(): void {\r\n    this.running = false;\r\n  }\r\n\r\n  private loop = (currentTime: number): void => {\r\n    if (!this.running) return;\r\n\r\n    const deltaTime = Math.min((currentTime - this.lastTime) / 1000, 0.1);\r\n    this.lastTime = currentTime;\r\n    this.accumulator += deltaTime;\r\n\r\n    while (this.accumulator >= this.fixedDt) {\r\n      this.update(this.fixedDt);\r\n      this.accumulator -= this.fixedDt;\r\n    }\r\n\r\n    this.render();\r\n    requestAnimationFrame(this.loop);\r\n  };\r\n}\r\n\r\n","import type { Vec2 } from '../types';\r\n\r\nexport class Input {\r\n  private clickHandlers: ((pos: Vec2) => void)[] = [];\r\n\r\n  constructor(private canvas: HTMLCanvasElement) {\r\n    this.setupListeners();\r\n  }\r\n\r\n  private setupListeners(): void {\r\n    this.canvas.addEventListener('click', this.handleClick);\r\n    this.canvas.addEventListener('touchstart', this.handleTouch, {\r\n      passive: false,\r\n    });\r\n  }\r\n\r\n  private handleClick = (e: MouseEvent): void => {\r\n    const pos = this.getCanvasPosition(e.clientX, e.clientY);\r\n    this.clickHandlers.forEach((handler) => handler(pos));\r\n  };\r\n\r\n  private handleTouch = (e: TouchEvent): void => {\r\n    e.preventDefault();\r\n    if (e.touches.length > 0) {\r\n      const touch = e.touches[0];\r\n      if (touch) {\r\n        const pos = this.getCanvasPosition(touch.clientX, touch.clientY);\r\n        this.clickHandlers.forEach((handler) => handler(pos));\r\n      }\r\n    }\r\n  };\r\n\r\n  private getCanvasPosition(clientX: number, clientY: number): Vec2 {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    const scaleX = this.canvas.width / rect.width;\r\n    const scaleY = this.canvas.height / rect.height;\r\n    return {\r\n      x: (clientX - rect.left) * scaleX,\r\n      y: (clientY - rect.top) * scaleY,\r\n    };\r\n  }\r\n\r\n  onClick(handler: (pos: Vec2) => void): void {\r\n    this.clickHandlers.push(handler);\r\n  }\r\n\r\n  destroy(): void {\r\n    this.canvas.removeEventListener('click', this.handleClick);\r\n    this.canvas.removeEventListener('touchstart', this.handleTouch);\r\n  }\r\n}\r\n\r\n","import type { GameState } from '../types';\r\n\r\nexport class Store {\r\n  private state: GameState;\r\n  private listeners: (() => void)[] = [];\r\n\r\n  constructor(initialState: GameState) {\r\n    this.state = { ...initialState };\r\n  }\r\n\r\n  getState(): GameState {\r\n    return { ...this.state };\r\n  }\r\n\r\n  setState(updates: Partial<GameState>): void {\r\n    this.state = { ...this.state, ...updates };\r\n    this.notifyListeners();\r\n  }\r\n\r\n  addPoints(amount: number): void {\r\n    this.state.points += amount;\r\n    this.notifyListeners();\r\n  }\r\n\r\n  spendPoints(amount: number): boolean {\r\n    if (this.state.points >= amount) {\r\n      this.state.points -= amount;\r\n      this.notifyListeners();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  subscribe(listener: () => void): () => void {\r\n    this.listeners.push(listener);\r\n    return () => {\r\n      this.listeners = this.listeners.filter((l) => l !== listener);\r\n    };\r\n  }\r\n\r\n  private notifyListeners(): void {\r\n    this.listeners.forEach((listener) => listener());\r\n  }\r\n}\r\n\r\n","export function randomRange(min: number, max: number): number {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport function randomInt(min: number, max: number): number {\r\n  return Math.floor(randomRange(min, max + 1));\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number {\r\n  return a + (b - a) * t;\r\n}\r\n\r\nexport function clamp(value: number, min: number, max: number): number {\r\n  return Math.max(min, Math.min(max, value));\r\n}\r\n\r\n","import type { SaveData, GameState } from '../types';\r\nimport { clamp } from '../math/rng';\r\n\r\nconst SAVE_KEY = 'alien-clicker-save';\r\n\r\nexport class Save {\r\n  static save(state: GameState): void {\r\n    const saveData: SaveData = {\r\n      points: state.points,\r\n      shipsCount: state.shipsCount,\r\n      attackSpeedLevel: state.attackSpeedLevel,\r\n      autoFireUnlocked: state.autoFireUnlocked,\r\n      pointMultiplierLevel: state.pointMultiplierLevel,\r\n      level: state.level,\r\n      experience: state.experience,\r\n      subUpgrades: state.subUpgrades,\r\n    };\r\n    try {\r\n      localStorage.setItem(SAVE_KEY, JSON.stringify(saveData));\r\n    } catch (error) {\r\n      console.error('Failed to save:', error);\r\n    }\r\n  }\r\n\r\n  static load(): GameState {\r\n    try {\r\n      const saved = localStorage.getItem(SAVE_KEY);\r\n      if (saved) {\r\n        const data = JSON.parse(saved) as SaveData;\r\n        return Save.validate(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load save:', error);\r\n    }\r\n    return Save.getDefault();\r\n  }\r\n\r\n  static clear(): void {\r\n    try {\r\n      localStorage.removeItem(SAVE_KEY);\r\n    } catch (error) {\r\n      console.error('Failed to clear save:', error);\r\n    }\r\n  }\r\n\r\n  private static validate(data: SaveData): GameState {\r\n    return {\r\n      points: clamp(data.points ?? 0, 0, 1e15),\r\n      shipsCount: clamp(data.shipsCount ?? 1, 1, 1000),\r\n      attackSpeedLevel: clamp(data.attackSpeedLevel ?? 0, 0, 1000),\r\n      autoFireUnlocked: data.autoFireUnlocked ?? false,\r\n      pointMultiplierLevel: clamp(data.pointMultiplierLevel ?? 0, 0, 1000),\r\n      level: clamp(data.level ?? 1, 1, 10000),\r\n      experience: clamp(data.experience ?? 0, 0, 1e15),\r\n      subUpgrades: data.subUpgrades ?? {},\r\n    };\r\n  }\r\n\r\n  private static getDefault(): GameState {\r\n    return {\r\n      points: 0,\r\n      shipsCount: 1,\r\n      attackSpeedLevel: 0,\r\n      autoFireUnlocked: false,\r\n      pointMultiplierLevel: 0,\r\n      level: 1,\r\n      experience: 0,\r\n      subUpgrades: {},\r\n    };\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class Laser {\r\n  public alive = true;\r\n  private travelTime = 0.3;\r\n  private fadeTime = 0.15;\r\n  private age = 0;\r\n  public hasHit = false;\r\n  public damage: number;\r\n  public isCrit = false;\r\n  public color = '#fff';\r\n  public width = 2;\r\n\r\n  constructor(\r\n    public origin: Vec2,\r\n    public target: Vec2,\r\n    damage: number,\r\n    upgrades?: { isCrit?: boolean; color?: string; width?: number }\r\n  ) {\r\n    this.damage = damage;\r\n    if (upgrades) {\r\n      this.isCrit = upgrades.isCrit ?? false;\r\n      this.color = upgrades.color ?? '#fff';\r\n      this.width = upgrades.width ?? 2;\r\n    }\r\n  }\r\n\r\n  update(dt: number): void {\r\n    this.age += dt;\r\n    \r\n    if (this.age >= this.travelTime + this.fadeTime) {\r\n      this.alive = false;\r\n    }\r\n  }\r\n\r\n  getCurrentPosition(): Vec2 {\r\n    if (this.age >= this.travelTime) {\r\n      return this.target;\r\n    }\r\n    \r\n    const progress = Math.min(1, this.age / this.travelTime);\r\n    return {\r\n      x: this.origin.x + (this.target.x - this.origin.x) * progress,\r\n      y: this.origin.y + (this.target.y - this.origin.y) * progress,\r\n    };\r\n  }\r\n\r\n  checkHit(): boolean {\r\n    if (this.hasHit) return false;\r\n    if (this.age >= this.travelTime) {\r\n      this.hasHit = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    if (!this.alive) return;\r\n\r\n    const current = this.getCurrentPosition();\r\n    let alpha = 1;\r\n    \r\n    if (this.age > this.travelTime) {\r\n      const fadeProgress = (this.age - this.travelTime) / this.fadeTime;\r\n      alpha = 1 - fadeProgress;\r\n    }\r\n\r\n    drawer.setAlpha(alpha);\r\n    \r\n    // Use custom color and width based on upgrades\r\n    drawer.setStroke(this.color, this.width);\r\n    drawer.line(this.origin.x, this.origin.y, current.x, current.y);\r\n    \r\n    // Crit hits have a glow effect\r\n    if (this.isCrit) {\r\n      drawer.setStroke(this.color, this.width + 4);\r\n      drawer.setAlpha(alpha * 0.3);\r\n      drawer.line(this.origin.x, this.origin.y, current.x, current.y);\r\n      drawer.setAlpha(alpha);\r\n    }\r\n    \r\n    drawer.setFill(this.color);\r\n    drawer.circle(current.x, current.y, this.isCrit ? 5 : 3);\r\n    drawer.resetAlpha();\r\n  }\r\n}\r\n\r\n","import { Laser } from '../entities/Laser';\r\nimport type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class LaserSystem {\r\n  private lasers: Laser[] = [];\r\n\r\n  spawnLaser(origin: Vec2, target: Vec2, damage: number, upgrades?: { isCrit?: boolean; color?: string; width?: number }): void {\r\n    this.lasers.push(new Laser(origin, target, damage, upgrades));\r\n  }\r\n\r\n  update(dt: number, onHit?: (damage: number) => void): void {\r\n    for (const laser of this.lasers) {\r\n      laser.update(dt);\r\n      if (onHit && laser.checkHit()) {\r\n        onHit(laser.damage);\r\n      }\r\n    }\r\n    this.lasers = this.lasers.filter((laser) => laser.alive);\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    for (const laser of this.lasers) {\r\n      laser.draw(drawer);\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.lasers = [];\r\n  }\r\n\r\n  getLasers(): Laser[] {\r\n    return this.lasers;\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class Ripple {\r\n  public alive = true;\r\n  private lifespan = 0.5;\r\n  private age = 0;\r\n  private maxRadius: number;\r\n\r\n  constructor(\r\n    public center: Vec2,\r\n    maxRadius: number,\r\n  ) {\r\n    this.maxRadius = maxRadius;\r\n  }\r\n\r\n  update(dt: number): void {\r\n    this.age += dt;\r\n    if (this.age >= this.lifespan) {\r\n      this.alive = false;\r\n    }\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    if (!this.alive) return;\r\n\r\n    const progress = this.age / this.lifespan;\r\n    const radius = this.maxRadius * progress;\r\n    const alpha = (1 - progress) * 0.8;\r\n\r\n    const grayValue = Math.floor(255 * 0.7);\r\n    drawer.setAlpha(alpha);\r\n    drawer.setStroke(`rgb(${grayValue},${grayValue},${grayValue})`, 2);\r\n    drawer.circle(this.center.x, this.center.y, radius, false);\r\n    drawer.resetAlpha();\r\n  }\r\n}\r\n\r\n","import { Ripple } from '../entities/Ripple';\r\nimport type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class RippleSystem {\r\n  private ripples: Ripple[] = [];\r\n\r\n  spawnRipple(center: Vec2, maxRadius: number): void {\r\n    this.ripples.push(new Ripple(center, maxRadius));\r\n  }\r\n\r\n  update(dt: number): void {\r\n    for (const ripple of this.ripples) {\r\n      ripple.update(dt);\r\n    }\r\n    this.ripples = this.ripples.filter((ripple) => ripple.alive);\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    for (const ripple of this.ripples) {\r\n      ripple.draw(drawer);\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.ripples = [];\r\n  }\r\n}\r\n\r\n","import type { GameState, UpgradeConfig, SubUpgrade } from '../types';\r\n\r\nexport class UpgradeSystem {\r\n  private basePoints = 1;\r\n  private subUpgrades: SubUpgrade[] = [];\r\n\r\n  constructor() {\r\n    this.initializeSubUpgrades();\r\n  }\r\n\r\n  private initializeSubUpgrades(): void {\r\n    this.subUpgrades = [\r\n      {\r\n        id: 'death_pact',\r\n        name: 'Death Pact Agreement',\r\n        description: 'Ships gain +10% attack speed',\r\n        flavor: 'In space, no one can hear you sign contracts.',\r\n        cost: 500,\r\n        owned: false,\r\n        requires: (state) => state.shipsCount >= 3,\r\n        isVisible: (state) => state.shipsCount >= 3,\r\n        buy: (state) => {\r\n          state.subUpgrades['death_pact'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'laser_focusing',\r\n        name: 'Laser Focusing Crystals',\r\n        description: 'Increase point gain by 15%',\r\n        flavor: 'These crystals are definitely not from that one forbidden planet...',\r\n        cost: 1000,\r\n        owned: false,\r\n        requires: (state) => state.pointMultiplierLevel >= 5,\r\n        isVisible: (state) => state.pointMultiplierLevel >= 5,\r\n        buy: (state) => {\r\n          state.subUpgrades['laser_focusing'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'quantum_targeting',\r\n        name: 'Quantum Targeting Array',\r\n        description: 'Ships fire 20% faster',\r\n        flavor: 'Aims at where the target was, is, and will be simultaneously.',\r\n        cost: 2500,\r\n        owned: false,\r\n        requires: (state) => state.attackSpeedLevel >= 10,\r\n        isVisible: (state) => state.attackSpeedLevel >= 10,\r\n        buy: (state) => {\r\n          state.subUpgrades['quantum_targeting'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'energy_recycling',\r\n        name: 'Energy Recycling System',\r\n        description: 'All upgrades are 5% cheaper',\r\n        flavor: 'Reduce, reuse, recycle... plasma.',\r\n        cost: 5000,\r\n        owned: false,\r\n        requires: (state) => state.shipsCount >= 10,\r\n        isVisible: (state) => state.shipsCount >= 10,\r\n        buy: (state) => {\r\n          state.subUpgrades['energy_recycling'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'overclocked_reactors',\r\n        name: 'Overclocked Reactors',\r\n        description: 'Gain 25% more points per hit',\r\n        flavor: 'Safety protocols are just suggestions anyway.',\r\n        cost: 10000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 10,\r\n        isVisible: (state) => state.level >= 10,\r\n        buy: (state) => {\r\n          state.subUpgrades['overclocked_reactors'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'ship_swarm',\r\n        name: 'Swarm Intelligence Protocol',\r\n        description: 'Ships coordinate attacks for +20% damage',\r\n        flavor: 'The hivemind accepts all. Resistance is futile.',\r\n        cost: 15000,\r\n        owned: false,\r\n        requires: (state) => state.shipsCount >= 15,\r\n        isVisible: (state) => state.shipsCount >= 15,\r\n        buy: (state) => {\r\n          state.subUpgrades['ship_swarm'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'neural_link',\r\n        name: 'Neural Link Interface',\r\n        description: 'Clicking grants 10% bonus points',\r\n        flavor: 'Think faster, click harder.',\r\n        cost: 25000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 20,\r\n        isVisible: (state) => state.level >= 20,\r\n        buy: (state) => {\r\n          state.subUpgrades['neural_link'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'antimatter_rounds',\r\n        name: 'Antimatter Ammunition',\r\n        description: 'Double all point gains',\r\n        flavor: 'What could possibly go wrong with weaponized antimatter?',\r\n        cost: 50000,\r\n        owned: false,\r\n        requires: (state) => state.pointMultiplierLevel >= 20,\r\n        isVisible: (state) => state.pointMultiplierLevel >= 20,\r\n        buy: (state) => {\r\n          state.subUpgrades['antimatter_rounds'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'warp_core',\r\n        name: 'Experimental Warp Core',\r\n        description: 'Ships fire 50% faster',\r\n        flavor: 'Theoretical physics becomes practical firepower.',\r\n        cost: 75000,\r\n        owned: false,\r\n        requires: (state) => state.attackSpeedLevel >= 25,\r\n        isVisible: (state) => state.attackSpeedLevel >= 25,\r\n        buy: (state) => {\r\n          state.subUpgrades['warp_core'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'ai_optimizer',\r\n        name: 'AI Optimization Subroutines',\r\n        description: 'Auto-fire cooldown reduced by 30%',\r\n        flavor: 'The AI promises it won\\'t become self-aware. Probably.',\r\n        cost: 100000,\r\n        owned: false,\r\n        requires: (state) => state.autoFireUnlocked && state.attackSpeedLevel >= 30,\r\n        isVisible: (state) => state.autoFireUnlocked && state.attackSpeedLevel >= 30,\r\n        buy: (state) => {\r\n          state.subUpgrades['ai_optimizer'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'perfect_precision',\r\n        name: 'Perfect Precision Arrays',\r\n        description: 'Critical hits: 5% chance for 10x damage',\r\n        flavor: 'Every shot finds its mark. Every. Single. One.',\r\n        cost: 150000,\r\n        owned: false,\r\n        requires: (state) => state.shipsCount >= 25,\r\n        isVisible: (state) => state.shipsCount >= 25,\r\n        buy: (state) => {\r\n          state.subUpgrades['perfect_precision'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'void_channeling',\r\n        name: 'Void Energy Channeling',\r\n        description: 'Destroying aliens grants bonus XP',\r\n        flavor: 'The void stares back, and it likes what it sees.',\r\n        cost: 200000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 40,\r\n        isVisible: (state) => state.level >= 40,\r\n        buy: (state) => {\r\n          state.subUpgrades['void_channeling'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'temporal_acceleration',\r\n        name: 'Temporal Acceleration Field',\r\n        description: 'All ships gain +100% attack speed',\r\n        flavor: 'Time is relative. Especially when you control it.',\r\n        cost: 500000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 60,\r\n        isVisible: (state) => state.level >= 60,\r\n        buy: (state) => {\r\n          state.subUpgrades['temporal_acceleration'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'singularity_core',\r\n        name: 'Singularity Power Core',\r\n        description: 'Gain 5x points from all sources',\r\n        flavor: 'A black hole in a box. What could be safer?',\r\n        cost: 1000000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 80,\r\n        isVisible: (state) => state.level >= 80,\r\n        buy: (state) => {\r\n          state.subUpgrades['singularity_core'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'cosmic_ascension',\r\n        name: 'Cosmic Ascension Protocol',\r\n        description: 'Unlock ultimate power: 10x all gains',\r\n        flavor: 'You have become death, destroyer of alien balls.',\r\n        cost: 10000000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 95,\r\n        isVisible: (state) => state.level >= 95,\r\n        buy: (state) => {\r\n          state.subUpgrades['cosmic_ascension'] = true;\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  getSubUpgrades(): SubUpgrade[] {\r\n    return this.subUpgrades.map(upgrade => ({\r\n      ...upgrade,\r\n      owned: upgrade.owned\r\n    }));\r\n  }\r\n\r\n  updateSubUpgradesFromState(state: GameState): void {\r\n    for (const upgrade of this.subUpgrades) {\r\n      upgrade.owned = state.subUpgrades[upgrade.id] ?? false;\r\n    }\r\n  }\r\n\r\n  getUpgrades(): UpgradeConfig[] {\r\n    // Ship-related sub-upgrades\r\n    const autoFireUpgrade: SubUpgrade = {\r\n      id: 'auto_fire',\r\n      name: 'Auto-Fire Module',\r\n      description: 'Ships automatically fire without clicking.',\r\n      flavor: 'Let the machines do the work.',\r\n      cost: 150,\r\n      owned: false,\r\n      requires: (state: GameState) => state.shipsCount >= 1,\r\n      isVisible: (state: GameState) => state.shipsCount >= 1 && !state.autoFireUnlocked,\r\n      buy: (state: GameState) => {\r\n        state.autoFireUnlocked = true;\r\n        state.subUpgrades['auto_fire'] = true;\r\n      },\r\n    };\r\n    autoFireUpgrade.owned = this.subUpgrades.find(u => u.id === 'auto_fire')?.owned ?? false;\r\n    \r\n    const shipSubUpgrades = [\r\n      autoFireUpgrade,\r\n      ...this.subUpgrades.filter(u => \r\n        ['death_pact', 'ship_swarm', 'perfect_precision'].includes(u.id)\r\n      ),\r\n    ];\r\n\r\n    // Attack speed related sub-upgrades\r\n    const attackSpeedSubUpgrades = this.subUpgrades.filter(u => \r\n      ['quantum_targeting', 'warp_core', 'ai_optimizer', 'temporal_acceleration'].includes(u.id)\r\n    );\r\n\r\n    // Point multiplier related sub-upgrades\r\n    const pointMultiplierSubUpgrades = this.subUpgrades.filter(u => \r\n      ['laser_focusing', 'overclocked_reactors', 'neural_link', 'antimatter_rounds', \r\n       'singularity_core', 'cosmic_ascension'].includes(u.id)\r\n    );\r\n\r\n    // General/misc sub-upgrades\r\n    const miscSubUpgrades = this.subUpgrades.filter(u => \r\n      ['energy_recycling', 'void_channeling'].includes(u.id)\r\n    );\r\n\r\n    const shipUpgrade: UpgradeConfig = {\r\n      id: 'ship',\r\n      name: '🚀 Starship Fleet',\r\n      description: 'Recruit another starship to your armada. More ships = more firepower!',\r\n      getCost: (level: number) => this.applyDiscount(Math.ceil(10 * Math.pow(1.15, level))),\r\n      canBuy: (state: GameState) => {\r\n        const cost = this.applyDiscount(Math.ceil(10 * Math.pow(1.15, state.shipsCount)));\r\n        return state.points >= cost;\r\n      },\r\n      buy: (state: GameState) => {\r\n        state.shipsCount++;\r\n      },\r\n      getLevel: (state: GameState) => state.shipsCount,\r\n      getDisplayText: (state: GameState) => `Fleet: ${state.shipsCount.toString()}`,\r\n      subUpgrades: shipSubUpgrades,\r\n    };\r\n\r\n    const attackSpeedUpgrade: UpgradeConfig = {\r\n      id: 'attackSpeed',\r\n      name: '⚡ Attack Speed',\r\n      description: 'Upgrade targeting computers to fire faster. Speed is everything.',\r\n      getCost: (level: number) => this.applyDiscount(Math.ceil(50 * Math.pow(1.25, level))),\r\n      canBuy: (state: GameState) => {\r\n        const cost = this.applyDiscount(Math.ceil(50 * Math.pow(1.25, state.attackSpeedLevel)));\r\n        return state.points >= cost;\r\n      },\r\n      buy: (state: GameState) => {\r\n        state.attackSpeedLevel++;\r\n      },\r\n      getLevel: (state: GameState) => state.attackSpeedLevel,\r\n      getDisplayText: (state: GameState) =>\r\n        `Lv.${state.attackSpeedLevel.toString()} (${this.getFireCooldown(state).toString()}ms)`,\r\n      subUpgrades: attackSpeedSubUpgrades,\r\n    };\r\n\r\n    const pointMultiplierUpgrade: UpgradeConfig = {\r\n      id: 'pointMultiplier',\r\n      name: '💎 Damage Amplifier',\r\n      description: 'Enhance laser power for maximum destruction per hit.',\r\n      getCost: (level: number) => this.applyDiscount(Math.ceil(100 * Math.pow(1.3, level))),\r\n      canBuy: (state: GameState) => {\r\n        const cost = this.applyDiscount(Math.ceil(100 * Math.pow(1.3, state.pointMultiplierLevel)));\r\n        return state.points >= cost;\r\n      },\r\n      buy: (state: GameState) => {\r\n        state.pointMultiplierLevel++;\r\n      },\r\n      getLevel: (state: GameState) => state.pointMultiplierLevel,\r\n      getDisplayText: (state: GameState) =>\r\n        `Lv.${state.pointMultiplierLevel.toString()} (${this.getPointsPerHit(state).toFixed(1)}/hit)`,\r\n      subUpgrades: pointMultiplierSubUpgrades,\r\n    };\r\n\r\n    const miscUpgrade: UpgradeConfig = {\r\n      id: 'misc',\r\n      name: '🔬 Research & Development',\r\n      description: 'Unlock experimental technologies and forbidden knowledge.',\r\n      getCost: () => 0,\r\n      canBuy: () => false,\r\n      buy: () => {},\r\n      getLevel: () => 0,\r\n      getDisplayText: () => 'Special Technologies',\r\n      subUpgrades: miscSubUpgrades,\r\n    };\r\n\r\n    return [shipUpgrade, attackSpeedUpgrade, pointMultiplierUpgrade, miscUpgrade];\r\n  }\r\n\r\n  private applyDiscount(cost: number): number {\r\n    // Energy recycling gives 5% discount\r\n    if (this.subUpgrades.find(u => u.id === 'energy_recycling')?.owned) {\r\n      return Math.floor(cost * 0.95);\r\n    }\r\n    return cost;\r\n  }\r\n\r\n  getPointsPerHit(state: GameState): number {\r\n    this.updateSubUpgradesFromState(state);\r\n    let multiplier = this.basePoints * (1 + 0.15 * state.pointMultiplierLevel);\r\n\r\n    // Laser focusing crystals: +15%\r\n    if (state.subUpgrades['laser_focusing']) {\r\n      multiplier *= 1.15;\r\n    }\r\n\r\n    // Overclocked reactors: +25%\r\n    if (state.subUpgrades['overclocked_reactors']) {\r\n      multiplier *= 1.25;\r\n    }\r\n\r\n    // Ship swarm: +20%\r\n    if (state.subUpgrades['ship_swarm']) {\r\n      multiplier *= 1.20;\r\n    }\r\n\r\n    // Neural link: +10% on clicks (always active for simplicity)\r\n    if (state.subUpgrades['neural_link']) {\r\n      multiplier *= 1.10;\r\n    }\r\n\r\n    // Antimatter rounds: 2x\r\n    if (state.subUpgrades['antimatter_rounds']) {\r\n      multiplier *= 2;\r\n    }\r\n\r\n    // Singularity core: 5x\r\n    if (state.subUpgrades['singularity_core']) {\r\n      multiplier *= 5;\r\n    }\r\n\r\n    // Cosmic ascension: 10x\r\n    if (state.subUpgrades['cosmic_ascension']) {\r\n      multiplier *= 10;\r\n    }\r\n\r\n    // Perfect precision: 5% chance for 10x (average 1.45x)\r\n    if (state.subUpgrades['perfect_precision']) {\r\n      if (Math.random() < 0.05) {\r\n        multiplier *= 10;\r\n      }\r\n    }\r\n\r\n    return multiplier;\r\n  }\r\n\r\n  getFireCooldown(state: GameState): number {\r\n    this.updateSubUpgradesFromState(state);\r\n    let cooldown = Math.max(\r\n      Math.floor(1000 * Math.pow(0.95, state.attackSpeedLevel)),\r\n      120,\r\n    );\r\n\r\n    // Death pact: +10% speed = 0.9x cooldown\r\n    if (state.subUpgrades['death_pact']) {\r\n      cooldown *= 0.9;\r\n    }\r\n\r\n    // Quantum targeting: +20% speed = 0.8x cooldown\r\n    if (state.subUpgrades['quantum_targeting']) {\r\n      cooldown *= 0.8;\r\n    }\r\n\r\n    // Warp core: +50% speed = 0.67x cooldown\r\n    if (state.subUpgrades['warp_core']) {\r\n      cooldown *= 0.67;\r\n    }\r\n\r\n    // AI optimizer: -30% cooldown\r\n    if (state.subUpgrades['ai_optimizer']) {\r\n      cooldown *= 0.7;\r\n    }\r\n\r\n    // Temporal acceleration: +100% speed = 0.5x cooldown\r\n    if (state.subUpgrades['temporal_acceleration']) {\r\n      cooldown *= 0.5;\r\n    }\r\n\r\n    return Math.max(Math.floor(cooldown), 50);\r\n  }\r\n\r\n  getBonusXP(state: GameState): number {\r\n    this.updateSubUpgradesFromState(state);\r\n    let bonus = 1;\r\n\r\n    // Void channeling: double XP\r\n    if (state.subUpgrades['void_channeling']) {\r\n      bonus = 2;\r\n    }\r\n\r\n    return bonus;\r\n  }\r\n}\r\n","export class AutoFireSystem {\r\n  private shipTimers: number[] = [];\r\n\r\n  setShipCount(count: number): void {\r\n    while (this.shipTimers.length < count) {\r\n      this.shipTimers.push(0);\r\n    }\r\n    while (this.shipTimers.length > count) {\r\n      this.shipTimers.pop();\r\n    }\r\n  }\r\n\r\n  update(\r\n    dt: number,\r\n    autoFireUnlocked: boolean,\r\n    cooldownMs: number,\r\n    onFire: (shipIndex: number) => void,\r\n  ): void {\r\n    if (!autoFireUnlocked) return;\r\n\r\n    const cooldownSec = cooldownMs / 1000;\r\n\r\n    for (let i = 0; i < this.shipTimers.length; i++) {\r\n      this.shipTimers[i]! += dt;\r\n\r\n      if (this.shipTimers[i]! >= cooldownSec) {\r\n        this.shipTimers[i]! = 0;\r\n        onFire(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  reset(): void {\r\n    this.shipTimers = this.shipTimers.map(() => 0);\r\n  }\r\n}\r\n\r\n","export class Hud {\r\n  private pointsDisplay: HTMLElement;\r\n  private levelText: HTMLElement;\r\n  private expText: HTMLElement;\r\n  private levelBarFill: HTMLElement;\r\n\r\n  constructor() {\r\n    const pointsEl = document.getElementById('points-display');\r\n    if (!pointsEl) throw new Error('Points display element not found');\r\n    this.pointsDisplay = pointsEl;\r\n\r\n    const levelTextEl = document.getElementById('level-text');\r\n    if (!levelTextEl) throw new Error('Level text element not found');\r\n    this.levelText = levelTextEl;\r\n\r\n    const expTextEl = document.getElementById('exp-text');\r\n    if (!expTextEl) throw new Error('Exp text element not found');\r\n    this.expText = expTextEl;\r\n\r\n    const levelBarFillEl = document.getElementById('level-bar-fill');\r\n    if (!levelBarFillEl) throw new Error('Level bar fill element not found');\r\n    this.levelBarFill = levelBarFillEl;\r\n  }\r\n\r\n  update(points: number): void {\r\n    this.pointsDisplay.textContent = `Points: ${this.formatNumber(points)}`;\r\n  }\r\n\r\n  updateLevel(level: number, experience: number, expToNext: number): void {\r\n    this.levelText.textContent = `Level ${level}`;\r\n    this.expText.textContent = `${Math.floor(experience)} / ${expToNext}`;\r\n    const percent = Math.min(100, (experience / expToNext) * 100);\r\n    this.levelBarFill.style.width = `${percent}%`;\r\n  }\r\n\r\n  private formatNumber(num: number): string {\r\n    if (num >= 1e9) return `${(num / 1e9).toFixed(2)}B`;\r\n    if (num >= 1e6) return `${(num / 1e6).toFixed(2)}M`;\r\n    if (num >= 1e3) return `${(num / 1e3).toFixed(2)}K`;\r\n    return Math.floor(num).toString();\r\n  }\r\n}\r\n\r\n","export class Button {\r\n  private element: HTMLButtonElement;\r\n  private clickHandler: () => void;\r\n  private lastClickTime = 0;\r\n  private clickDelay = 100; // Minimum ms between clicks\r\n\r\n  constructor(text: string, onClick: () => void) {\r\n    this.clickHandler = onClick;\r\n    this.element = document.createElement('button');\r\n    this.element.textContent = text;\r\n    this.element.className = 'shop-button';\r\n    \r\n    // Add throttled click handler\r\n    this.element.addEventListener('click', (e) => {\r\n      e.stopPropagation();\r\n      this.handleClick();\r\n    });\r\n    \r\n    this.element.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Enter' || e.key === ' ') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.handleClick();\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleClick(): void {\r\n    const now = Date.now();\r\n    if (now - this.lastClickTime < this.clickDelay) return;\r\n    if (this.element.disabled) return;\r\n    \r\n    this.lastClickTime = now;\r\n    this.clickHandler();\r\n  }\r\n\r\n  getElement(): HTMLButtonElement {\r\n    return this.element;\r\n  }\r\n\r\n  setEnabled(enabled: boolean): void {\r\n    this.element.disabled = !enabled;\r\n  }\r\n\r\n  setText(text: string): void {\r\n    this.element.textContent = text;\r\n  }\r\n}\r\n\r\n","import type { Store } from '../core/Store';\r\nimport type { UpgradeSystem } from '../systems/UpgradeSystem';\r\nimport { Button } from './Button';\r\n\r\nexport class Shop {\r\n  private container: HTMLElement;\r\n  private renderTimeout: number | null = null;\r\n  private isRendering = false;\r\n  private isProcessingPurchase = false;\r\n  private lastAffordability: Map<string, boolean> = new Map();\r\n  private currentTab: 'available' | 'owned' = 'available';\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private upgradeSystem: UpgradeSystem,\r\n  ) {\r\n    const element = document.getElementById('shop-content');\r\n    if (!element) throw new Error('Shop content element not found');\r\n    this.container = element;\r\n    \r\n    // Prevent shop clicks from bubbling to canvas (use bubble phase, not capture)\r\n    const shopPanel = document.getElementById('shop-panel');\r\n    if (shopPanel) {\r\n      shopPanel.addEventListener('click', (e) => { e.stopPropagation(); });\r\n      shopPanel.addEventListener('touchstart', (e) => { e.stopPropagation(); });\r\n      shopPanel.addEventListener('mousedown', (e) => { e.stopPropagation(); });\r\n    }\r\n    \r\n    this.setupTabs();\r\n    this.render();\r\n    this.store.subscribe(() => { this.scheduleRender(); });\r\n  }\r\n\r\n  private setupTabs(): void {\r\n    const availableTab = document.getElementById('tab-available');\r\n    const ownedTab = document.getElementById('tab-owned');\r\n\r\n    availableTab?.addEventListener('click', () => {\r\n      this.currentTab = 'available';\r\n      availableTab.classList.add('active');\r\n      ownedTab?.classList.remove('active');\r\n      this.render();\r\n    });\r\n\r\n    ownedTab?.addEventListener('click', () => {\r\n      this.currentTab = 'owned';\r\n      ownedTab.classList.add('active');\r\n      availableTab?.classList.remove('active');\r\n      this.render();\r\n    });\r\n  }\r\n\r\n  private scheduleRender(): void {\r\n    // Don't schedule renders while processing a purchase\r\n    if (this.isProcessingPurchase) return;\r\n    \r\n    // Only re-render if affordability changed\r\n    if (!this.hasAffordabilityChanged()) return;\r\n    \r\n    if (this.renderTimeout !== null) {\r\n      clearTimeout(this.renderTimeout);\r\n    }\r\n    this.renderTimeout = window.setTimeout(() => {\r\n      this.render();\r\n      this.renderTimeout = null;\r\n    }, 100);\r\n  }\r\n\r\n  private hasAffordabilityChanged(): boolean {\r\n    const state = this.store.getState();\r\n    const upgrades = this.upgradeSystem.getUpgrades();\r\n    const subUpgrades = this.upgradeSystem.getSubUpgrades();\r\n    \r\n    let changed = false;\r\n    \r\n    for (const upgrade of upgrades) {\r\n      const key = upgrade.name;\r\n      const canAfford = upgrade.canBuy(state);\r\n      const wasAffordable = this.lastAffordability.get(key);\r\n      \r\n      if (wasAffordable !== canAfford) {\r\n        changed = true;\r\n        this.lastAffordability.set(key, canAfford);\r\n      }\r\n    }\r\n    \r\n    for (const upgrade of subUpgrades) {\r\n      if (!upgrade.isVisible(state)) continue;\r\n      const key = `sub_${upgrade.name}`;\r\n      const canAfford = !upgrade.owned && state.points >= upgrade.cost;\r\n      const wasAffordable = this.lastAffordability.get(key);\r\n      \r\n      if (wasAffordable !== canAfford) {\r\n        changed = true;\r\n        this.lastAffordability.set(key, canAfford);\r\n      }\r\n    }\r\n    \r\n    return changed;\r\n  }\r\n\r\n  private render(): void {\r\n    if (this.isRendering) return;\r\n    this.isRendering = true;\r\n\r\n    this.container.innerHTML = '';\r\n    const state = this.store.getState();\r\n    this.upgradeSystem.updateSubUpgradesFromState(state);\r\n\r\n    if (this.currentTab === 'available') {\r\n      this.renderAvailableTab(state);\r\n    } else {\r\n      this.renderOwnedTab(state);\r\n    }\r\n\r\n    this.isRendering = false;\r\n  }\r\n\r\n  private renderAvailableTab(state: any): void {\r\n    const upgrades = this.upgradeSystem.getUpgrades();\r\n    const allSubUpgrades = this.upgradeSystem.getSubUpgrades();\r\n\r\n    // Render special upgrades box at the top\r\n    const visibleSubUpgrades = allSubUpgrades.filter(sub => sub.isVisible(state) && !sub.owned);\r\n    if (visibleSubUpgrades.length > 0) {\r\n      const specialBox = document.createElement('div');\r\n      specialBox.className = 'special-upgrades-box';\r\n\r\n      const title = document.createElement('h3');\r\n      title.textContent = '⭐ SPECIAL UPGRADES ⭐';\r\n      specialBox.appendChild(title);\r\n\r\n      const grid = document.createElement('div');\r\n      grid.className = 'special-upgrades-grid';\r\n\r\n      for (const subUpgrade of visibleSubUpgrades) {\r\n        const subItem = this.createSubUpgradeCard(subUpgrade, state);\r\n        grid.appendChild(subItem);\r\n      }\r\n\r\n      specialBox.appendChild(grid);\r\n      this.container.appendChild(specialBox);\r\n    }\r\n\r\n    // Render main upgrades (exclude R&D category)\r\n    for (const upgrade of upgrades) {\r\n      if (upgrade.id === 'misc') continue;\r\n\r\n      const item = document.createElement('div');\r\n      item.className = 'upgrade-item';\r\n\r\n      const header = document.createElement('div');\r\n      header.className = 'upgrade-header';\r\n\r\n      const name = document.createElement('div');\r\n      name.className = 'upgrade-name';\r\n      name.textContent = upgrade.name;\r\n\r\n      const level = document.createElement('div');\r\n      level.className = 'upgrade-level';\r\n      level.textContent = upgrade.getDisplayText(state);\r\n\r\n      header.appendChild(name);\r\n      header.appendChild(level);\r\n\r\n      const description = document.createElement('div');\r\n      description.className = 'upgrade-description';\r\n      description.textContent = upgrade.description;\r\n\r\n      const footer = document.createElement('div');\r\n      footer.className = 'upgrade-footer';\r\n\r\n      const cost = document.createElement('div');\r\n      cost.className = 'upgrade-cost';\r\n      const currentCost = upgrade.getCost(upgrade.getLevel(state));\r\n      cost.textContent = `Cost: ${this.formatNumber(currentCost)}`;\r\n\r\n      const button = new Button('BUY', () => { this.buyUpgrade(upgrade); });\r\n      button.setEnabled(upgrade.canBuy(state));\r\n\r\n      footer.appendChild(cost);\r\n      footer.appendChild(button.getElement());\r\n\r\n      item.appendChild(header);\r\n      item.appendChild(description);\r\n      item.appendChild(footer);\r\n\r\n      this.container.appendChild(item);\r\n    }\r\n  }\r\n\r\n  private renderOwnedTab(state: any): void {\r\n    const allSubUpgrades = this.upgradeSystem.getSubUpgrades();\r\n    const ownedUpgrades = allSubUpgrades.filter(sub => sub.owned);\r\n\r\n    if (ownedUpgrades.length === 0) {\r\n      const message = document.createElement('div');\r\n      message.style.padding = '40px';\r\n      message.style.textAlign = 'center';\r\n      message.style.color = '#666';\r\n      message.textContent = 'No special upgrades owned yet.';\r\n      this.container.appendChild(message);\r\n      return;\r\n    }\r\n\r\n    const grid = document.createElement('div');\r\n    grid.className = 'special-upgrades-grid';\r\n    grid.style.padding = '10px 0';\r\n\r\n    for (const subUpgrade of ownedUpgrades) {\r\n      const card = this.createSubUpgradeCard(subUpgrade, state);\r\n      grid.appendChild(card);\r\n    }\r\n\r\n    this.container.appendChild(grid);\r\n  }\r\n\r\n  private createSubUpgradeCard(subUpgrade: any, state: any): HTMLElement {\r\n    const card = document.createElement('div');\r\n    card.className = `sub-upgrade ${subUpgrade.owned ? 'owned' : ''}`;\r\n\r\n    const icon = document.createElement('div');\r\n    icon.className = 'sub-upgrade-icon';\r\n    icon.textContent = this.getUpgradeEmoji(subUpgrade.id);\r\n    card.appendChild(icon);\r\n\r\n    const name = document.createElement('div');\r\n    name.className = 'sub-upgrade-name';\r\n    name.textContent = subUpgrade.name;\r\n    card.appendChild(name);\r\n\r\n    const cost = document.createElement('div');\r\n    cost.className = 'sub-upgrade-cost';\r\n    cost.textContent = subUpgrade.owned ? '✓ OWNED' : `${this.formatNumber(subUpgrade.cost)}`;\r\n    card.appendChild(cost);\r\n\r\n    // Tooltip\r\n    const tooltip = document.createElement('div');\r\n    tooltip.className = 'sub-upgrade-tooltip';\r\n    tooltip.innerHTML = `<strong>${subUpgrade.name}</strong><br>${subUpgrade.description}<br><em style=\"color: #888; font-size: 10px;\">${subUpgrade.flavor}</em>`;\r\n    card.appendChild(tooltip);\r\n\r\n    if (!subUpgrade.owned) {\r\n      card.addEventListener('click', () => {\r\n        if (state.points >= subUpgrade.cost) {\r\n          this.buySubUpgrade(subUpgrade);\r\n        }\r\n      });\r\n    }\r\n\r\n    return card;\r\n  }\r\n\r\n  private getUpgradeEmoji(upgradeId: string): string {\r\n    const emojiMap: Record<string, string> = {\r\n      'auto_fire': '🔥',\r\n      'death_pact': '💀',\r\n      'laser_focusing': '💎',\r\n      'quantum_targeting': '🎯',\r\n      'energy_recycling': '♻️',\r\n      'overclocked_reactors': '⚛️',\r\n      'ship_swarm': '🐝',\r\n      'neural_link': '🧠',\r\n      'antimatter_rounds': '💥',\r\n      'warp_core': '🌀',\r\n      'ai_optimizer': '🤖',\r\n      'perfect_precision': '✨',\r\n      'void_channeling': '🌌',\r\n      'temporal_acceleration': '⏰',\r\n      'singularity_core': '🕳️',\r\n      'cosmic_ascension': '🌟',\r\n    };\r\n    return emojiMap[upgradeId] || '⭐';\r\n  }\r\n\r\n  private buyUpgrade(upgrade: { canBuy: (state: any) => boolean; getCost: (level: number) => number; getLevel: (state: any) => number; buy: (state: any) => void }): void {\r\n    // Prevent concurrent purchases\r\n    if (this.isProcessingPurchase) return;\r\n    this.isProcessingPurchase = true;\r\n\r\n    const state = this.store.getState();\r\n    if (!upgrade.canBuy(state)) {\r\n      this.isProcessingPurchase = false;\r\n      return;\r\n    }\r\n\r\n    const price = upgrade.getCost(upgrade.getLevel(state));\r\n    if (state.points >= price) {\r\n      state.points -= price;\r\n      upgrade.buy(state);\r\n      this.store.setState(state);\r\n      \r\n      // Force immediate UI update\r\n      this.lastAffordability.clear();\r\n      this.render();\r\n    }\r\n    \r\n    this.isProcessingPurchase = false;\r\n  }\r\n\r\n  private buySubUpgrade(upgrade: { owned: boolean; cost: number; buy: (state: any) => void }): void {\r\n    // Prevent concurrent purchases\r\n    if (this.isProcessingPurchase) return;\r\n    if (upgrade.owned) return;\r\n    this.isProcessingPurchase = true;\r\n\r\n    const state = this.store.getState();\r\n    if (state.points >= upgrade.cost) {\r\n      state.points -= upgrade.cost;\r\n      upgrade.buy(state);\r\n      this.store.setState(state);\r\n      \r\n      // Force immediate UI update\r\n      this.lastAffordability.clear();\r\n      this.render();\r\n    }\r\n    \r\n    this.isProcessingPurchase = false;\r\n  }\r\n\r\n  private formatNumber(num: number): string {\r\n    if (num >= 1e9) return `${(num / 1e9).toFixed(2)}B`;\r\n    if (num >= 1e6) return `${(num / 1e6).toFixed(2)}M`;\r\n    if (num >= 1e3) return `${(num / 1e3).toFixed(1)}K`;\r\n    return Math.floor(num).toString();\r\n  }\r\n}\r\n\r\n","import type { GameState } from '../types';\r\nimport type { UpgradeSystem } from '../systems/UpgradeSystem';\r\n\r\nexport class UpgradesDisplay {\r\n  private container: HTMLElement;\r\n\r\n  constructor(private upgradeSystem: UpgradeSystem) {\r\n    const element = document.getElementById('upgrades-display');\r\n    if (!element) throw new Error('Upgrades display element not found');\r\n    this.container = element;\r\n  }\r\n\r\n  update(state: GameState): void {\r\n    this.container.innerHTML = '';\r\n    this.upgradeSystem.updateSubUpgradesFromState(state);\r\n    const allSubUpgrades = this.upgradeSystem.getSubUpgrades();\r\n    \r\n    // Show only owned upgrades (Cookie Clicker style)\r\n    const ownedUpgrades = allSubUpgrades.filter(upgrade => upgrade.owned);\r\n\r\n    if (ownedUpgrades.length === 0) {\r\n      return; // Container will be hidden by CSS\r\n    }\r\n\r\n    for (const upgrade of ownedUpgrades) {\r\n      const icon = document.createElement('div');\r\n      icon.className = 'upgrade-icon';\r\n      \r\n      // Add emoji icon\r\n      const emoji = this.getUpgradeEmoji(upgrade.id);\r\n      icon.textContent = emoji;\r\n\r\n      // Add tooltip on hover\r\n      const tooltip = document.createElement('div');\r\n      tooltip.className = 'tooltip';\r\n      tooltip.textContent = upgrade.name;\r\n      icon.appendChild(tooltip);\r\n\r\n      this.container.appendChild(icon);\r\n    }\r\n  }\r\n\r\n  private getUpgradeEmoji(upgradeId: string): string {\r\n    const emojiMap: Record<string, string> = {\r\n      'auto_fire': '🔥',\r\n      'death_pact': '💀',\r\n      'laser_focusing': '💎',\r\n      'quantum_targeting': '🎯',\r\n      'energy_recycling': '♻️',\r\n      'overclocked_reactors': '⚛️',\r\n      'ship_swarm': '🐝',\r\n      'neural_link': '🧠',\r\n      'antimatter_rounds': '💥',\r\n      'warp_core': '🌀',\r\n      'ai_optimizer': '🤖',\r\n      'perfect_precision': '✨',\r\n      'void_channeling': '🌌',\r\n      'temporal_acceleration': '⏰',\r\n      'singularity_core': '🕳️',\r\n      'cosmic_ascension': '🌟',\r\n    };\r\n\r\n    return emojiMap[upgradeId] || '⭐';\r\n  }\r\n}\r\n\r\n","export class Layout {\r\n  static setupResetButton(onReset: () => void): void {\r\n    const resetBtn = document.getElementById('reset-btn');\r\n    if (resetBtn) {\r\n      resetBtn.addEventListener('click', () => {\r\n        if (\r\n          confirm(\r\n            'Are you sure you want to reset all progress? This cannot be undone.',\r\n          )\r\n        ) {\r\n          onReset();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import type { BallColor } from '../types';\r\n\r\nexport class ColorManager {\r\n  private static colors: BallColor[] = [\r\n    { fill: '#fff', stroke: '#ccc', hp: 10 },      // Level 1 - White\r\n    { fill: '#ddd', stroke: '#aaa', hp: 20 },      // Level 2 - Light Gray\r\n    { fill: '#bbb', stroke: '#888', hp: 35 },      // Level 3 - Gray\r\n    { fill: '#999', stroke: '#666', hp: 55 },      // Level 4 - Dark Gray\r\n    { fill: '#ff4444', stroke: '#cc0000', hp: 120 },  // Level 5 - Red (Boss)\r\n    { fill: '#ff8800', stroke: '#cc6600', hp: 180 },  // Level 6 - Orange\r\n    { fill: '#ffdd00', stroke: '#ccaa00', hp: 260 },  // Level 7 - Yellow\r\n    { fill: '#88ff00', stroke: '#66cc00', hp: 360 },  // Level 8 - Lime\r\n    { fill: '#00ff88', stroke: '#00cc66', hp: 480 },  // Level 9 - Green\r\n    { fill: '#0088ff', stroke: '#0066cc', hp: 620 },  // Level 10 - Blue (Boss)\r\n    { fill: '#8800ff', stroke: '#6600cc', hp: 780 },  // Level 11 - Purple\r\n    { fill: '#ff0088', stroke: '#cc0066', hp: 960 },  // Level 12 - Pink\r\n    { fill: '#ff6600', stroke: '#cc4400', hp: 1160 }, // Level 13 - Deep Orange\r\n    { fill: '#ffaa00', stroke: '#cc8800', hp: 1380 }, // Level 14 - Gold\r\n    { fill: '#00ffff', stroke: '#00cccc', hp: 1620 }, // Level 15 - Cyan (Boss)\r\n    { fill: '#ff00ff', stroke: '#cc00cc', hp: 1880 }, // Level 16 - Magenta\r\n    { fill: '#66ff66', stroke: '#44cc44', hp: 2160 }, // Level 17 - Light Green\r\n    { fill: '#ff6666', stroke: '#cc4444', hp: 2460 }, // Level 18 - Light Red\r\n    { fill: '#6666ff', stroke: '#4444cc', hp: 2780 }, // Level 19 - Light Blue\r\n    { fill: '#ffff00', stroke: '#cccc00', hp: 3120 }, // Level 20 - Bright Yellow (Boss)\r\n  ];\r\n\r\n  static getColorForLevel(level: number): BallColor {\r\n    const index = Math.min(level - 1, this.colors.length - 1);\r\n    return this.colors[index] ?? this.colors[this.colors.length - 1]!;\r\n  }\r\n\r\n  static getExpRequired(level: number): number {\r\n    return Math.floor(10 + level * 5);\r\n  }\r\n\r\n  static isBossLevel(level: number): boolean {\r\n    return level === 100;\r\n  }\r\n\r\n  static getBossHp(level: number): number {\r\n    return Math.floor(5000 * Math.pow(1.5, (level / 5) - 1));\r\n  }\r\n}\r\n\r\n","import { AlienBall } from './entities/AlienBall';\r\nimport { BossBall } from './entities/BossBall';\r\nimport { BossProjectile } from './entities/BossProjectile';\r\nimport { Ship } from './entities/Ship';\r\nimport { PlayerShip } from './entities/PlayerShip';\r\nimport { Canvas } from './render/Canvas';\r\nimport { Draw } from './render/Draw';\r\nimport { Loop } from './core/Loop';\r\nimport { Input } from './core/Input';\r\nimport { Store } from './core/Store';\r\nimport { Save } from './core/Save';\r\nimport { LaserSystem } from './systems/LaserSystem';\r\nimport { RippleSystem } from './systems/RippleSystem';\r\nimport { UpgradeSystem } from './systems/UpgradeSystem';\r\nimport { AutoFireSystem } from './systems/AutoFireSystem';\r\nimport { Hud } from './ui/Hud';\r\nimport { Shop } from './ui/Shop';\r\nimport { UpgradesDisplay } from './ui/UpgradesDisplay';\r\nimport { Layout } from './ui/Layout';\r\nimport { ColorManager } from './math/ColorManager';\r\nimport type { Vec2, GameMode } from './types';\r\n\r\nexport class Game {\r\n  private canvas: Canvas;\r\n  private draw: Draw;\r\n  private loop: Loop;\r\n  private input: Input;\r\n  private store: Store;\r\n  private ball: AlienBall | null = null;\r\n  private bossBall: BossBall | null = null;\r\n  private ships: Ship[] = [];\r\n  private playerShip: PlayerShip | null = null;\r\n  private bossProjectiles: BossProjectile[] = [];\r\n  private laserSystem: LaserSystem;\r\n  private rippleSystem: RippleSystem;\r\n  private upgradeSystem: UpgradeSystem;\r\n  private autoFireSystem: AutoFireSystem;\r\n  private hud: Hud;\r\n  private upgradesDisplay: UpgradesDisplay;\r\n  private saveTimer = 0;\r\n  private saveInterval = 3;\r\n  private shakeTime = 0;\r\n  private shakeAmount = 0;\r\n  private mode: GameMode = 'normal';\r\n  private transitionTime = 0;\r\n  private transitionDuration = 2;\r\n  private keys: Set<string> = new Set();\r\n  private shootCooldown = 0;\r\n  private shootCooldownMax = 0.2;\r\n\r\n  constructor() {\r\n    const canvasElement = document.getElementById(\r\n      'game-canvas',\r\n    ) as HTMLCanvasElement;\r\n    if (!canvasElement) throw new Error('Canvas not found');\r\n\r\n    this.canvas = new Canvas(canvasElement);\r\n    this.draw = new Draw(this.canvas.getContext());\r\n    this.store = new Store(Save.load());\r\n    this.upgradeSystem = new UpgradeSystem();\r\n    this.laserSystem = new LaserSystem();\r\n    this.rippleSystem = new RippleSystem();\r\n    this.autoFireSystem = new AutoFireSystem();\r\n    this.hud = new Hud();\r\n    this.upgradesDisplay = new UpgradesDisplay(this.upgradeSystem);\r\n    new Shop(this.store, this.upgradeSystem);\r\n\r\n    this.input = new Input(canvasElement);\r\n    this.loop = new Loop(\r\n      (dt) => this.update(dt),\r\n      () => this.render(),\r\n    );\r\n\r\n    this.initGame();\r\n    this.setupInput();\r\n    this.setupKeyboard();\r\n    this.setupAutoSave();\r\n    this.setupBossDialog();\r\n    Layout.setupResetButton(() => this.resetGame());\r\n  }\r\n\r\n  private setupBossDialog(): void {\r\n    const startBtn = document.getElementById('boss-start-btn');\r\n    if (startBtn) {\r\n      startBtn.addEventListener('click', () => {\r\n        const dialog = document.getElementById('boss-dialog');\r\n        if (dialog) dialog.style.display = 'none';\r\n        this.startBossFight();\r\n      });\r\n    }\r\n  }\r\n\r\n  private setupKeyboard(): void {\r\n    window.addEventListener('keydown', (e) => {\r\n      this.keys.add(e.key.toLowerCase());\r\n      if (e.key === ' ' && this.mode === 'boss') {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n    window.addEventListener('keyup', (e) => {\r\n      this.keys.delete(e.key.toLowerCase());\r\n    });\r\n  }\r\n\r\n  private initGame(): void {\r\n    this.createBall();\r\n    this.createShips();\r\n    const state = this.store.getState();\r\n    this.hud.update(state.points);\r\n    this.hud.updateLevel(\r\n      state.level,\r\n      state.experience,\r\n      ColorManager.getExpRequired(state.level),\r\n    );\r\n    this.upgradesDisplay.update(state);\r\n  }\r\n\r\n  private createBall(): void {\r\n    const cx = this.canvas.getCenterX();\r\n    const cy = this.canvas.getCenterY();\r\n    const radius =\r\n      Math.min(this.canvas.getWidth(), this.canvas.getHeight()) * 0.08;\r\n    const state = this.store.getState();\r\n    this.ball = AlienBall.createRandom(cx, cy, radius, state.level);\r\n    this.bossBall = null;\r\n  }\r\n\r\n  private createBoss(): void {\r\n    const cx = this.canvas.getCenterX();\r\n    const cy = this.canvas.getCenterY();\r\n    const radius =\r\n      Math.min(this.canvas.getWidth(), this.canvas.getHeight()) * 0.12;\r\n    const state = this.store.getState();\r\n    const hp = ColorManager.getBossHp(state.level);\r\n    this.bossBall = new BossBall(cx, cy, radius, hp);\r\n    this.ball = null;\r\n    this.playerShip = new PlayerShip(cx, this.canvas.getHeight() - 100);\r\n  }\r\n\r\n  private createShips(): void {\r\n    const state = this.store.getState();\r\n    const cx = this.canvas.getCenterX();\r\n    const cy = this.canvas.getCenterY();\r\n    const orbitRadius =\r\n      Math.min(this.canvas.getWidth(), this.canvas.getHeight()) * 0.4;\r\n\r\n    this.ships = [];\r\n    for (let i = 0; i < state.shipsCount; i++) {\r\n      const angle = (i / state.shipsCount) * Math.PI * 2;\r\n      const isMain = i === 0;\r\n      this.ships.push(new Ship(angle, cx, cy, orbitRadius, isMain));\r\n    }\r\n    this.autoFireSystem.setShipCount(state.shipsCount);\r\n  }\r\n\r\n  private setupInput(): void {\r\n    this.input.onClick((pos) => this.handleClick(pos));\r\n    this.store.subscribe(() => {\r\n      const state = this.store.getState();\r\n      if (this.ships.length !== state.shipsCount) {\r\n        this.createShips();\r\n      }\r\n      this.hud.update(state.points);\r\n      this.hud.updateLevel(\r\n        state.level,\r\n        state.experience,\r\n        ColorManager.getExpRequired(state.level),\r\n      );\r\n      this.upgradesDisplay.update(state);\r\n    });\r\n  }\r\n\r\n  private setupAutoSave(): void {\r\n    window.addEventListener('beforeunload', () => {\r\n      Save.save(this.store.getState());\r\n    });\r\n  }\r\n\r\n  private handleClick(pos: Vec2): void {\r\n    if (this.mode === 'transition') return;\r\n\r\n    if (this.mode === 'normal' && this.ball?.isPointInside(pos)) {\r\n      this.fireVolley();\r\n    }\r\n  }\r\n\r\n  private fireVolley(): void {\r\n    const state = this.store.getState();\r\n    const damage = this.upgradeSystem.getPointsPerHit(state);\r\n    const target = { x: this.ball?.x ?? 0, y: this.ball?.y ?? 0 };\r\n    const laserVisuals = this.getLaserVisuals(state);\r\n\r\n    for (const ship of this.ships) {\r\n      this.laserSystem.spawnLaser(ship.getFrontPosition(), target, damage, laserVisuals);\r\n    }\r\n\r\n    this.rippleSystem.spawnRipple(target, (this.ball?.radius ?? 50) * 2);\r\n\r\n    if (this.ships.length >= 5) {\r\n      this.triggerShake(2, 0.1);\r\n    }\r\n  }\r\n\r\n  private shootLaser(): void {\r\n    if (!this.playerShip) return;\r\n    if (this.shootCooldown > 0) return;\r\n\r\n    const state = this.store.getState();\r\n    const damage = this.upgradeSystem.getPointsPerHit(state);\r\n    const origin = this.playerShip.getFrontPosition();\r\n    const angle = this.playerShip.getAngle();\r\n    const laserVisuals = this.getLaserVisuals(state);\r\n    \r\n    // Shoot in the direction the ship is facing, not at the boss\r\n    const laserRange = 2000;\r\n    const target = {\r\n      x: origin.x + Math.cos(angle) * laserRange,\r\n      y: origin.y + Math.sin(angle) * laserRange,\r\n    };\r\n    \r\n    this.laserSystem.spawnLaser(origin, target, damage, laserVisuals);\r\n    this.shootCooldown = this.shootCooldownMax;\r\n  }\r\n\r\n  private fireSingleShip(shipIndex: number): void {\r\n    const ship = this.ships[shipIndex];\r\n    if (!ship) return;\r\n\r\n    const state = this.store.getState();\r\n    const damage = this.upgradeSystem.getPointsPerHit(state);\r\n    const target = { x: this.ball?.x ?? 0, y: this.ball?.y ?? 0 };\r\n    const laserVisuals = this.getLaserVisuals(state);\r\n\r\n    this.laserSystem.spawnLaser(ship.getFrontPosition(), target, damage, laserVisuals);\r\n  }\r\n\r\n  private getLaserVisuals(state: any): { isCrit: boolean; color: string; width: number } {\r\n    let color = '#fff';\r\n    let width = 2;\r\n    let isCrit = false;\r\n\r\n    // Check for perfect precision crit\r\n    if (state.subUpgrades['perfect_precision']) {\r\n      if (Math.random() < 0.05) {\r\n        isCrit = true;\r\n        color = '#ffff00'; // Yellow for crit\r\n        width = 4;\r\n        return { isCrit, color, width };\r\n      }\r\n    }\r\n\r\n    // Laser color based on damage upgrades\r\n    if (state.subUpgrades['cosmic_ascension']) {\r\n      color = '#ff00ff'; // Magenta for cosmic\r\n      width = 3;\r\n    } else if (state.subUpgrades['singularity_core']) {\r\n      color = '#8800ff'; // Purple for singularity\r\n      width = 3;\r\n    } else if (state.subUpgrades['antimatter_rounds']) {\r\n      color = '#ff0088'; // Pink for antimatter\r\n      width = 3;\r\n    } else if (state.subUpgrades['overclocked_reactors']) {\r\n      color = '#ff6600'; // Orange for overclocked\r\n      width = 2.5;\r\n    } else if (state.subUpgrades['laser_focusing']) {\r\n      color = '#00ffff'; // Cyan for focusing\r\n      width = 2.5;\r\n    } else if (state.pointMultiplierLevel >= 10) {\r\n      color = '#88ff88'; // Light green for high level\r\n      width = 2.5;\r\n    }\r\n\r\n    return { isCrit, color, width };\r\n  }\r\n\r\n  private handleDamage(damage: number): void {\r\n    if (this.mode === 'normal' && this.ball) {\r\n      const broken = this.ball.takeDamage(damage);\r\n      this.store.addPoints(damage);\r\n      if (broken) {\r\n        this.onBallDestroyed();\r\n      }\r\n    } else if (this.mode === 'boss' && this.bossBall) {\r\n      const broken = this.bossBall.takeDamage(damage);\r\n      this.store.addPoints(damage * 2);\r\n      if (broken) {\r\n        this.onBossDestroyed();\r\n      }\r\n    }\r\n  }\r\n\r\n  private onBallDestroyed(): void {\r\n    const state = this.store.getState();\r\n    const bonusXP = this.upgradeSystem.getBonusXP(state);\r\n    state.experience += bonusXP;\r\n\r\n    const expRequired = ColorManager.getExpRequired(state.level);\r\n    if (state.experience >= expRequired) {\r\n      state.experience -= expRequired;\r\n      state.level++;\r\n\r\n      if (ColorManager.isBossLevel(state.level)) {\r\n        this.showBossDialog();\r\n      } else {\r\n        setTimeout(() => this.createBall(), 400);\r\n      }\r\n    } else {\r\n      setTimeout(() => this.createBall(), 400);\r\n    }\r\n\r\n    this.store.setState(state);\r\n  }\r\n\r\n  private onBossDestroyed(): void {\r\n    const state = this.store.getState();\r\n    state.experience = 0;\r\n    state.level++;\r\n    this.store.setState(state);\r\n\r\n    setTimeout(() => {\r\n      this.startTransitionToNormal();\r\n    }, 600);\r\n  }\r\n\r\n  private showBossDialog(): void {\r\n    const dialog = document.getElementById('boss-dialog');\r\n    if (dialog) {\r\n      dialog.style.display = 'flex';\r\n    }\r\n  }\r\n\r\n  private startBossFight(): void {\r\n    this.startTransitionToBoss();\r\n  }\r\n\r\n  private startTransitionToBoss(): void {\r\n    this.mode = 'transition';\r\n    this.transitionTime = 0;\r\n    const bossControls = document.getElementById('boss-controls');\r\n    if (bossControls) bossControls.style.display = 'none';\r\n    setTimeout(() => {\r\n      this.createBoss();\r\n      this.mode = 'boss';\r\n      if (bossControls) bossControls.style.display = 'block';\r\n    }, this.transitionDuration * 500);\r\n  }\r\n\r\n  private startTransitionToNormal(): void {\r\n    this.mode = 'transition';\r\n    this.transitionTime = 0;\r\n    this.playerShip = null;\r\n    this.bossProjectiles = [];\r\n    const bossControls = document.getElementById('boss-controls');\r\n    if (bossControls) bossControls.style.display = 'none';\r\n    setTimeout(() => {\r\n      this.createBall();\r\n      this.mode = 'normal';\r\n    }, this.transitionDuration * 500);\r\n  }\r\n\r\n  private triggerShake(amount: number, duration: number): void {\r\n    this.shakeAmount = amount;\r\n    this.shakeTime = duration;\r\n  }\r\n\r\n  private spawnBossProjectiles(): void {\r\n    if (!this.bossBall || !this.playerShip) return;\r\n\r\n    const bossPos = this.bossBall.getPosition();\r\n    const playerPos = this.playerShip.getPosition();\r\n    const pattern = this.bossBall.getAttackPattern();\r\n    const projectileSpeed = 200;\r\n\r\n    if (pattern === 'single') {\r\n      // Single projectile aimed at player\r\n      this.bossProjectiles.push(\r\n        new BossProjectile(bossPos.x, bossPos.y, playerPos.x, playerPos.y, projectileSpeed)\r\n      );\r\n    } else if (pattern === 'spread') {\r\n      // 3 projectiles in a spread pattern\r\n      const angleToPlayer = Math.atan2(playerPos.y - bossPos.y, playerPos.x - bossPos.x);\r\n      const spreadAngle = Math.PI / 6; // 30 degrees spread\r\n      \r\n      for (let i = -1; i <= 1; i++) {\r\n        const angle = angleToPlayer + (i * spreadAngle);\r\n        const targetX = bossPos.x + Math.cos(angle) * 1000;\r\n        const targetY = bossPos.y + Math.sin(angle) * 1000;\r\n        this.bossProjectiles.push(\r\n          new BossProjectile(bossPos.x, bossPos.y, targetX, targetY, projectileSpeed)\r\n        );\r\n      }\r\n    } else if (pattern === 'spiral') {\r\n      // 8 projectiles in all directions (spiral pattern)\r\n      const numProjectiles = 8;\r\n      for (let i = 0; i < numProjectiles; i++) {\r\n        const angle = (i / numProjectiles) * Math.PI * 2;\r\n        const targetX = bossPos.x + Math.cos(angle) * 1000;\r\n        const targetY = bossPos.y + Math.sin(angle) * 1000;\r\n        this.bossProjectiles.push(\r\n          new BossProjectile(bossPos.x, bossPos.y, targetX, targetY, projectileSpeed * 1.2)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private update(dt: number): void {\r\n    const state = this.store.getState();\r\n\r\n    if (this.mode === 'transition') {\r\n      this.transitionTime += dt;\r\n      if (this.transitionTime >= this.transitionDuration) {\r\n        this.transitionTime = 0;\r\n      }\r\n    }\r\n\r\n    this.ball?.update(dt);\r\n    this.bossBall?.update(dt, this.canvas.getWidth(), this.canvas.getHeight());\r\n    this.laserSystem.update(dt, (damage) => this.handleDamage(damage));\r\n    this.rippleSystem.update(dt);\r\n\r\n    // Rotate ships around the alien\r\n    if (this.mode === 'normal') {\r\n      for (const ship of this.ships) {\r\n        ship.rotate(dt, 0.3);\r\n      }\r\n    }\r\n\r\n    if (this.mode === 'boss' && this.playerShip) {\r\n      if (this.keys.has('arrowleft') || this.keys.has('a')) {\r\n        this.playerShip.rotate(-1, dt);\r\n      }\r\n      if (this.keys.has('arrowright') || this.keys.has('d')) {\r\n        this.playerShip.rotate(1, dt);\r\n      }\r\n      if (this.keys.has('arrowup') || this.keys.has('w')) {\r\n        this.playerShip.thrust(dt);\r\n      }\r\n      if (this.keys.has(' ') || this.keys.has('spacebar')) {\r\n        this.shootLaser();\r\n      }\r\n\r\n      this.playerShip.update(dt, this.canvas.getWidth(), this.canvas.getHeight());\r\n\r\n      if (this.shootCooldown > 0) {\r\n        this.shootCooldown = Math.max(0, this.shootCooldown - dt);\r\n      }\r\n\r\n      // Boss attacks\r\n      if (this.bossBall && this.bossBall.shouldAttack()) {\r\n        this.spawnBossProjectiles();\r\n      }\r\n\r\n      // Update boss projectiles\r\n      this.bossProjectiles = this.bossProjectiles.filter(proj => {\r\n        const shouldRemove = proj.update(dt);\r\n        \r\n        // Check collision with player\r\n        if (!shouldRemove && this.playerShip) {\r\n          const playerPos = this.playerShip.getPosition();\r\n          if (proj.checkCollision(playerPos, 15)) {\r\n            // Hit player - small damage feedback\r\n            this.triggerShake(3, 0.1);\r\n            return true; // Remove projectile\r\n          }\r\n        }\r\n        \r\n        return !shouldRemove;\r\n      });\r\n    } else if (this.mode === 'normal') {\r\n      this.autoFireSystem.update(\r\n        dt,\r\n        state.autoFireUnlocked,\r\n        this.upgradeSystem.getFireCooldown(state),\r\n        (shipIndex) => this.fireSingleShip(shipIndex),\r\n      );\r\n    }\r\n\r\n    this.saveTimer += dt;\r\n    if (this.saveTimer >= this.saveInterval) {\r\n      Save.save(state);\r\n      this.saveTimer = 0;\r\n    }\r\n\r\n    if (this.shakeTime > 0) {\r\n      this.shakeTime = Math.max(0, this.shakeTime - dt);\r\n    }\r\n  }\r\n\r\n  private render(): void {\r\n    this.canvas.clear();\r\n    const ctx = this.canvas.getContext();\r\n\r\n    ctx.save();\r\n\r\n    if (this.shakeTime > 0) {\r\n      const intensity = this.shakeAmount * (this.shakeTime / 0.1);\r\n      const offsetX = (Math.random() - 0.5) * intensity;\r\n      const offsetY = (Math.random() - 0.5) * intensity;\r\n      ctx.translate(offsetX, offsetY);\r\n    }\r\n\r\n    if (this.mode === 'transition') {\r\n      this.renderTransition();\r\n    } else {\r\n      this.rippleSystem.draw(this.draw);\r\n      this.ball?.draw(this.draw);\r\n      this.bossBall?.draw(this.draw);\r\n\r\n      if (this.mode === 'boss') {\r\n        this.playerShip?.draw(this.draw);\r\n        // Draw boss projectiles\r\n        for (const proj of this.bossProjectiles) {\r\n          proj.draw(this.draw);\r\n        }\r\n      } else {\r\n        for (const ship of this.ships) {\r\n          ship.draw(this.draw);\r\n        }\r\n      }\r\n\r\n      this.laserSystem.draw(this.draw);\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  private renderTransition(): void {\r\n    const progress = this.transitionTime / this.transitionDuration;\r\n    const alpha = Math.sin(progress * Math.PI);\r\n\r\n    this.draw.setAlpha(alpha);\r\n    const cx = this.canvas.getCenterX();\r\n    const cy = this.canvas.getCenterY();\r\n    const maxRadius = Math.max(\r\n      this.canvas.getWidth(),\r\n      this.canvas.getHeight(),\r\n    );\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      const radius = maxRadius * (progress + i * 0.2);\r\n      this.draw.setStroke('#fff', 2);\r\n      this.draw.circle(cx, cy, radius, false);\r\n    }\r\n\r\n    this.draw.resetAlpha();\r\n  }\r\n\r\n  start(): void {\r\n    this.loop.start();\r\n  }\r\n\r\n  private resetGame(): void {\r\n    Save.clear();\r\n    this.store.setState(Save.load());\r\n    this.mode = 'normal';\r\n    this.createBall();\r\n    this.createShips();\r\n    this.laserSystem.clear();\r\n    this.rippleSystem.clear();\r\n    this.autoFireSystem.reset();\r\n    this.saveTimer = 0;\r\n  }\r\n}\r\n\r\n\r\n","import { Game } from './Game';\r\nimport '../styles.css';\r\n\r\nfunction init(): void {\r\n  const game = new Game();\r\n  game.start();\r\n}\r\n\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', init);\r\n} else {\r\n  init();\r\n}\r\n\r\n"],"names":["AlienBall","x","y","radius","color","baseHp","colors","level","levelScaledColor","point","dx","dy","amount","dt","drawer","progress","alpha","scale","hpBarWidth","hpBarHeight","hpBarY","hpPercent","flashAlpha","flashRadius","BossBall","hp","angle","canvasWidth","canvasHeight","eyeOffset","eyeSize","BossProjectile","targetX","targetY","speed","dist","draw","targetRadius","Ship","centerX","centerY","orbitRadius","isMainShip","size","tipX","tipY","left","right","smallSize","innerTipX","innerTipY","innerLeft","innerRight","PlayerShip","direction","flameLength","flameX","flameY","flameEndX","flameEndY","Canvas","canvasElement","context","rect","Draw","ctx","fill","x1","y1","x2","y2","width","p1","p2","p3","Loop","update","render","currentTime","deltaTime","Input","canvas","e","pos","handler","touch","clientX","clientY","scaleX","scaleY","Store","initialState","updates","listener","l","clamp","value","min","max","SAVE_KEY","Save","state","saveData","error","saved","data","Laser","origin","target","damage","upgrades","current","LaserSystem","onHit","laser","Ripple","center","maxRadius","grayValue","RippleSystem","ripple","UpgradeSystem","upgrade","autoFireUpgrade","u","shipSubUpgrades","attackSpeedSubUpgrades","pointMultiplierSubUpgrades","miscSubUpgrades","cost","multiplier","cooldown","bonus","AutoFireSystem","count","autoFireUnlocked","cooldownMs","onFire","cooldownSec","i","Hud","pointsEl","levelTextEl","expTextEl","levelBarFillEl","points","experience","expToNext","percent","num","Button","text","onClick","now","enabled","Shop","store","upgradeSystem","element","shopPanel","availableTab","ownedTab","subUpgrades","changed","key","canAfford","visibleSubUpgrades","sub","specialBox","title","grid","subUpgrade","subItem","item","header","name","description","footer","currentCost","button","ownedUpgrades","message","card","icon","tooltip","upgradeId","price","UpgradesDisplay","emoji","Layout","onReset","resetBtn","ColorManager","index","Game","startBtn","dialog","cx","cy","isMain","laserVisuals","ship","laserRange","shipIndex","isCrit","broken","bonusXP","expRequired","bossControls","duration","bossPos","playerPos","pattern","projectileSpeed","angleToPlayer","spreadAngle","proj","shouldRemove","intensity","offsetX","offsetY","init"],"mappings":"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"}