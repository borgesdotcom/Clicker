{"version":3,"file":"index-pjX7IlIu.js","sources":["../../src/entities/AlienBall.ts","../../src/entities/BossBall.ts","../../src/entities/BossProjectile.ts","../../src/entities/Ship.ts","../../src/entities/PlayerShip.ts","../../src/render/Canvas.ts","../../src/render/Draw.ts","../../src/core/Loop.ts","../../src/core/Input.ts","../../src/core/Store.ts","../../src/math/rng.ts","../../src/core/Save.ts","../../src/entities/Laser.ts","../../src/systems/LaserSystem.ts","../../src/entities/Ripple.ts","../../src/systems/RippleSystem.ts","../../src/systems/UpgradeSystem.ts","../../src/systems/AutoFireSystem.ts","../../src/systems/AchievementSystem.ts","../../src/systems/AscensionSystem.ts","../../src/entities/Particle.ts","../../src/systems/DamageNumberSystem.ts","../../src/systems/ComboSystem.ts","../../src/systems/SoundManager.ts","../../src/ui/Hud.ts","../../src/ui/Button.ts","../../src/ui/Shop.ts","../../src/ui/UpgradesDisplay.ts","../../src/ui/AchievementSnackbar.ts","../../src/ui/AchievementsModal.ts","../../src/ui/AscensionModal.ts","../../src/ui/StatsPanel.ts","../../src/ui/SettingsModal.ts","../../src/ui/Layout.ts","../../src/math/ColorManager.ts","../../src/core/Settings.ts","../../src/Game.ts","../../src/main.ts"],"sourcesContent":["import type { Draw } from '../render/Draw';\r\nimport type { Vec2, BallColor } from '../types';\r\n\r\nexport class AlienBall {\r\n  private flashTime = 0;\r\n  private flashDuration = 0.15;\r\n  public currentHp: number;\r\n  public maxHp: number;\r\n  private breakAnimTime = 0;\r\n  private breakAnimDuration = 0.4;\r\n\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public radius: number,\r\n    public color: BallColor,\r\n  ) {\r\n    const baseHp = color.hp;\r\n    this.maxHp = Math.floor(baseHp + Math.random() * baseHp * 0.5);\r\n    this.currentHp = this.maxHp;\r\n  }\r\n\r\n  private static getRandomColor(): BallColor {\r\n    const colors = [\r\n      { fill: '#ff4444', stroke: '#cc0000', hp: 100 },\r\n      { fill: '#ff8800', stroke: '#cc6600', hp: 100 },\r\n      { fill: '#ffdd00', stroke: '#ccaa00', hp: 100 },\r\n      { fill: '#88ff00', stroke: '#66cc00', hp: 100 },\r\n      { fill: '#00ff88', stroke: '#00cc66', hp: 100 },\r\n      { fill: '#0088ff', stroke: '#0066cc', hp: 100 },\r\n      { fill: '#8800ff', stroke: '#6600cc', hp: 100 },\r\n      { fill: '#ff0088', stroke: '#cc0066', hp: 100 },\r\n      { fill: '#ff6600', stroke: '#cc4400', hp: 100 },\r\n      { fill: '#ffaa00', stroke: '#cc8800', hp: 100 },\r\n      { fill: '#00ffff', stroke: '#00cccc', hp: 100 },\r\n      { fill: '#ff00ff', stroke: '#cc00cc', hp: 100 },\r\n      { fill: '#66ff66', stroke: '#44cc44', hp: 100 },\r\n      { fill: '#ff6666', stroke: '#cc4444', hp: 100 },\r\n      { fill: '#6666ff', stroke: '#4444cc', hp: 100 },\r\n    ];\r\n    return colors[Math.floor(Math.random() * colors.length)]!;\r\n  }\r\n\r\n  static createRandom(x: number, y: number, radius: number, level: number): AlienBall {\r\n    const color = AlienBall.getRandomColor();\r\n    // HP scales exponentially with level to prevent endgame spam killing\r\n    // Scales more aggressively at higher levels\r\n    let scalingFactor: number;\r\n    if (level <= 25) {\r\n      scalingFactor = Math.pow(1.15, level); // Gentle early game\r\n    } else if (level <= 50) {\r\n      scalingFactor = Math.pow(1.15, 25) * Math.pow(1.22, level - 25); // Steeper mid game\r\n    } else if (level <= 75) {\r\n      scalingFactor = Math.pow(1.15, 25) * Math.pow(1.22, 25) * Math.pow(1.28, level - 50); // Even steeper\r\n    } else {\r\n      scalingFactor = Math.pow(1.15, 25) * Math.pow(1.22, 25) * Math.pow(1.28, 25) * Math.pow(1.35, level - 75); // Exponential endgame\r\n    }\r\n    \r\n    const levelScaledColor = {\r\n      ...color,\r\n      hp: Math.floor(color.hp * scalingFactor)\r\n    };\r\n    return new AlienBall(x, y, radius, levelScaledColor);\r\n  }\r\n\r\n  isPointInside(point: Vec2): boolean {\r\n    const dx = point.x - this.x;\r\n    const dy = point.y - this.y;\r\n    return Math.sqrt(dx * dx + dy * dy) <= this.radius;\r\n  }\r\n\r\n  takeDamage(amount: number): boolean {\r\n    const wasAlive = this.currentHp > 0;\r\n    this.currentHp = Math.max(0, this.currentHp - amount);\r\n    // Only flash on significant damage (>5% of max HP) or if not already flashing\r\n    if (this.flashTime <= 0 || amount > this.maxHp * 0.05) {\r\n      this.triggerFlash();\r\n    }\r\n    if (this.currentHp <= 0 && wasAlive) {\r\n      this.breakAnimTime = this.breakAnimDuration;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  triggerFlash(): void {\r\n    this.flashTime = this.flashDuration;\r\n  }\r\n\r\n  isBreaking(): boolean {\r\n    return this.breakAnimTime > 0;\r\n  }\r\n\r\n  update(dt: number): void {\r\n    if (this.flashTime > 0) {\r\n      this.flashTime = Math.max(0, this.flashTime - dt);\r\n    }\r\n    if (this.breakAnimTime > 0) {\r\n      this.breakAnimTime = Math.max(0, this.breakAnimTime - dt);\r\n    }\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    if (this.breakAnimTime > 0) {\r\n      const progress = 1 - this.breakAnimTime / this.breakAnimDuration;\r\n      const alpha = 1 - progress;\r\n      const scale = 1 + progress * 0.5;\r\n      \r\n      drawer.setAlpha(alpha);\r\n      drawer.setFill(this.color.fill);\r\n      drawer.circle(this.x, this.y, this.radius * scale);\r\n      drawer.setStroke(this.color.stroke, 3);\r\n      drawer.circle(this.x, this.y, this.radius * scale, false);\r\n      drawer.resetAlpha();\r\n      return;\r\n    }\r\n\r\n    drawer.setFill(this.color.fill);\r\n    drawer.circle(this.x, this.y, this.radius);\r\n    drawer.setStroke(this.color.stroke, 2);\r\n    drawer.circle(this.x, this.y, this.radius, false);\r\n\r\n    const hpBarWidth = this.radius * 1.5;\r\n    const hpBarHeight = 6;\r\n    const hpBarY = this.y - this.radius - 15;\r\n    const hpPercent = this.currentHp / this.maxHp;\r\n\r\n    drawer.setStroke('#fff', 1);\r\n    drawer.setFill('#000');\r\n    drawer.getContext().fillRect(\r\n      this.x - hpBarWidth / 2,\r\n      hpBarY,\r\n      hpBarWidth,\r\n      hpBarHeight,\r\n    );\r\n    drawer.getContext().strokeRect(\r\n      this.x - hpBarWidth / 2,\r\n      hpBarY,\r\n      hpBarWidth,\r\n      hpBarHeight,\r\n    );\r\n\r\n    drawer.setFill(this.color.fill);\r\n    drawer.getContext().fillRect(\r\n      this.x - hpBarWidth / 2 + 1,\r\n      hpBarY + 1,\r\n      (hpBarWidth - 2) * hpPercent,\r\n      hpBarHeight - 2,\r\n    );\r\n\r\n    if (this.flashTime > 0) {\r\n      const flashAlpha = this.flashTime / this.flashDuration;\r\n      drawer.setAlpha(flashAlpha * 0.5);\r\n      drawer.setStroke('#fff', 3);\r\n      const flashRadius = this.radius * (1 + (1 - flashAlpha) * 0.3);\r\n      drawer.circle(this.x, this.y, flashRadius, false);\r\n      drawer.resetAlpha();\r\n    }\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class BossBall {\r\n  private flashTime = 0;\r\n  private flashDuration = 0.15;\r\n  public currentHp: number;\r\n  public maxHp: number;\r\n  private breakAnimTime = 0;\r\n  private breakAnimDuration = 0.6;\r\n  public x: number;\r\n  public y: number;\r\n  private vx = 0;\r\n  private vy = 0;\r\n  private speed = 150;\r\n  private attackTimer = 0;\r\n  private attackCooldown = 2;\r\n  private phase = 1;\r\n  private rotationAngle = 0;\r\n  private pulseTime = 0;\r\n  private chargeTime = 0;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    public radius: number,\r\n    hp: number,\r\n  ) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.maxHp = hp;\r\n    this.currentHp = this.maxHp;\r\n    const angle = Math.random() * Math.PI * 2;\r\n    this.vx = Math.cos(angle) * this.speed;\r\n    this.vy = Math.sin(angle) * this.speed;\r\n  }\r\n\r\n  isPointInside(point: Vec2): boolean {\r\n    const dx = point.x - this.x;\r\n    const dy = point.y - this.y;\r\n    return Math.sqrt(dx * dx + dy * dy) <= this.radius;\r\n  }\r\n\r\n  takeDamage(amount: number): boolean {\r\n    const wasAlive = this.currentHp > 0;\r\n    this.currentHp = Math.max(0, this.currentHp - amount);\r\n    // Only flash on significant damage (>2% of max HP) or if not already flashing\r\n    if (this.flashTime <= 0 || amount > this.maxHp * 0.02) {\r\n      this.triggerFlash();\r\n    }\r\n    if (this.currentHp <= 0 && wasAlive) {\r\n      this.breakAnimTime = this.breakAnimDuration;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  triggerFlash(): void {\r\n    this.flashTime = this.flashDuration;\r\n  }\r\n\r\n  isBreaking(): boolean {\r\n    return this.breakAnimTime > 0;\r\n  }\r\n\r\n  update(dt: number, canvasWidth: number, canvasHeight: number): void {\r\n    if (this.flashTime > 0) {\r\n      this.flashTime = Math.max(0, this.flashTime - dt);\r\n    }\r\n    if (this.breakAnimTime > 0) {\r\n      this.breakAnimTime = Math.max(0, this.breakAnimTime - dt);\r\n      return;\r\n    }\r\n\r\n    // Update phase based on HP\r\n    const hpPercent = this.currentHp / this.maxHp;\r\n    if (hpPercent < 0.33) {\r\n      this.phase = 3;\r\n      this.speed = 250;\r\n      this.attackCooldown = 0.8;\r\n    } else if (hpPercent < 0.66) {\r\n      this.phase = 2;\r\n      this.speed = 200;\r\n      this.attackCooldown = 1.2;\r\n    }\r\n\r\n    this.x += this.vx * dt;\r\n    this.y += this.vy * dt;\r\n\r\n    if (this.x - this.radius < 0 || this.x + this.radius > canvasWidth) {\r\n      this.vx *= -1;\r\n      this.x = Math.max(this.radius, Math.min(canvasWidth - this.radius, this.x));\r\n    }\r\n    if (this.y - this.radius < 0 || this.y + this.radius > canvasHeight) {\r\n      this.vy *= -1;\r\n      this.y = Math.max(this.radius, Math.min(canvasHeight - this.radius, this.y));\r\n    }\r\n\r\n    // Update attack timer\r\n    this.attackTimer += dt;\r\n    \r\n    // Update visual effects\r\n    this.rotationAngle += dt * this.phase;\r\n    this.pulseTime += dt * 2;\r\n    \r\n    // Charge effect before attacking\r\n    if (this.attackTimer >= this.attackCooldown - 0.5) {\r\n      this.chargeTime += dt * 5;\r\n    } else {\r\n      this.chargeTime = 0;\r\n    }\r\n  }\r\n\r\n  shouldAttack(): boolean {\r\n    if (this.attackTimer >= this.attackCooldown) {\r\n      this.attackTimer = 0;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPhase(): number {\r\n    return this.phase;\r\n  }\r\n\r\n  getAttackPattern(): 'single' | 'spread' | 'spiral' {\r\n    if (this.phase === 3) return 'spiral';\r\n    if (this.phase === 2) return 'spread';\r\n    return 'single';\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    if (this.breakAnimTime > 0) {\r\n      const progress = 1 - this.breakAnimTime / this.breakAnimDuration;\r\n      const alpha = 1 - progress;\r\n      const scale = 1 + progress * 0.8;\r\n      \r\n      drawer.setAlpha(alpha);\r\n      drawer.setGlow('#ff0000', 30);\r\n      drawer.setFill('#ff0000');\r\n      drawer.circle(this.x, this.y, this.radius * scale);\r\n      drawer.setStroke('#ff0000', 4);\r\n      drawer.circle(this.x, this.y, this.radius * scale, false);\r\n      drawer.clearGlow();\r\n      drawer.resetAlpha();\r\n      return;\r\n    }\r\n\r\n    const hpPercent = this.currentHp / this.maxHp;\r\n    \r\n    // Phase-based color\r\n    let mainColor = '#ffffff';\r\n    let accentColor = '#ffaa00';\r\n    if (this.phase === 3) {\r\n      mainColor = '#ff0000';\r\n      accentColor = '#ff6600';\r\n    } else if (this.phase === 2) {\r\n      mainColor = '#ffaa00';\r\n      accentColor = '#ffff00';\r\n    }\r\n\r\n    // Pulsing glow effect\r\n    const pulse = Math.sin(this.pulseTime) * 0.5 + 0.5;\r\n    const glowIntensity = 10 + pulse * 20 * this.phase;\r\n    \r\n    // Draw outer glow rings\r\n    for (let i = 3; i >= 1; i--) {\r\n      const ringAlpha = 0.15 / i;\r\n      drawer.setAlpha(ringAlpha);\r\n      drawer.setGlow(mainColor, glowIntensity);\r\n      drawer.setStroke(mainColor, 2);\r\n      drawer.circle(this.x, this.y, this.radius + i * 15 + pulse * 5, false);\r\n      drawer.clearGlow();\r\n      drawer.resetAlpha();\r\n    }\r\n\r\n    // Charge effect\r\n    if (this.chargeTime > 0) {\r\n      const chargeAlpha = Math.min(this.chargeTime, 1) * 0.4;\r\n      drawer.setAlpha(chargeAlpha);\r\n      drawer.setGlow(accentColor, 20);\r\n      drawer.setFill(accentColor);\r\n      drawer.circle(this.x, this.y, this.radius * (1 + this.chargeTime * 0.2));\r\n      drawer.clearGlow();\r\n      drawer.resetAlpha();\r\n    }\r\n\r\n    // Main body\r\n    drawer.setGlow(mainColor, glowIntensity);\r\n    drawer.setFill(mainColor);\r\n    drawer.circle(this.x, this.y, this.radius);\r\n    drawer.clearGlow();\r\n\r\n    // Rotating energy patterns\r\n    const ctx = drawer.getContext();\r\n    ctx.save();\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.rotationAngle);\r\n    \r\n    drawer.setAlpha(0.6);\r\n    drawer.setStroke(accentColor, 3);\r\n    for (let i = 0; i < this.phase * 3; i++) {\r\n      const angle = (i / (this.phase * 3)) * Math.PI * 2;\r\n      const x1 = Math.cos(angle) * this.radius * 0.5;\r\n      const y1 = Math.sin(angle) * this.radius * 0.5;\r\n      const x2 = Math.cos(angle) * this.radius;\r\n      const y2 = Math.sin(angle) * this.radius;\r\n      drawer.line(x1, y1, x2, y2);\r\n    }\r\n    drawer.resetAlpha();\r\n    ctx.restore();\r\n\r\n    // Eyes - more menacing as phases progress\r\n    const eyeOffset = this.radius * 0.3;\r\n    const eyeSize = this.radius * (0.12 + this.phase * 0.03);\r\n    drawer.setGlow('#ff0000', 5);\r\n    drawer.setFill('#000000');\r\n    drawer.circle(this.x - eyeOffset, this.y - eyeOffset * 0.5, eyeSize);\r\n    drawer.circle(this.x + eyeOffset, this.y - eyeOffset * 0.5, eyeSize);\r\n    \r\n    // Eye glow\r\n    drawer.setFill('#ff0000');\r\n    drawer.setAlpha(0.8);\r\n    drawer.circle(this.x - eyeOffset, this.y - eyeOffset * 0.5, eyeSize * 0.5);\r\n    drawer.circle(this.x + eyeOffset, this.y - eyeOffset * 0.5, eyeSize * 0.5);\r\n    drawer.resetAlpha();\r\n    drawer.clearGlow();\r\n\r\n    // HP bar with phase color\r\n    const hpBarWidth = this.radius * 2;\r\n    const hpBarHeight = 10;\r\n    const hpBarY = this.y - this.radius - 30;\r\n\r\n    drawer.setGlow(mainColor, 5);\r\n    drawer.setStroke(mainColor, 2);\r\n    drawer.setFill('#000');\r\n    drawer.getContext().fillRect(\r\n      this.x - hpBarWidth / 2,\r\n      hpBarY,\r\n      hpBarWidth,\r\n      hpBarHeight,\r\n    );\r\n    drawer.getContext().strokeRect(\r\n      this.x - hpBarWidth / 2,\r\n      hpBarY,\r\n      hpBarWidth,\r\n      hpBarHeight,\r\n    );\r\n\r\n    drawer.setFill(mainColor);\r\n    drawer.getContext().fillRect(\r\n      this.x - hpBarWidth / 2 + 2,\r\n      hpBarY + 2,\r\n      (hpBarWidth - 4) * hpPercent,\r\n      hpBarHeight - 4,\r\n    );\r\n    drawer.clearGlow();\r\n\r\n    // Flash effect on hit\r\n    if (this.flashTime > 0) {\r\n      const flashAlpha = this.flashTime / this.flashDuration;\r\n      drawer.setAlpha(flashAlpha * 0.8);\r\n      drawer.setGlow('#ffffff', 30);\r\n      drawer.setStroke('#ffffff', 6);\r\n      const flashRadius = this.radius * (1 + (1 - flashAlpha) * 0.3);\r\n      drawer.circle(this.x, this.y, flashRadius, false);\r\n      drawer.clearGlow();\r\n      drawer.resetAlpha();\r\n    }\r\n  }\r\n\r\n  getPosition(): Vec2 {\r\n    return { x: this.x, y: this.y };\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class BossProjectile {\r\n  private x: number;\r\n  private y: number;\r\n  private vx: number;\r\n  private vy: number;\r\n  private radius = 10;\r\n  private lifetime = 5;\r\n  private age = 0;\r\n  private rotationAngle = 0;\r\n\r\n  constructor(x: number, y: number, targetX: number, targetY: number, speed: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    // Calculate direction to target\r\n    const dx = targetX - x;\r\n    const dy = targetY - y;\r\n    const dist = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    // Normalize and apply speed\r\n    this.vx = (dx / dist) * speed;\r\n    this.vy = (dy / dist) * speed;\r\n  }\r\n\r\n  update(dt: number): boolean {\r\n    this.x += this.vx * dt * 60;\r\n    this.y += this.vy * dt * 60;\r\n    this.age += dt;\r\n    this.rotationAngle += dt * 5;\r\n\r\n    // Return true if projectile should be removed\r\n    return this.age >= this.lifetime;\r\n  }\r\n\r\n  draw(draw: Draw): void {\r\n    const alpha = Math.max(0, 1 - this.age / this.lifetime);\r\n    \r\n    // Outer glow\r\n    draw.setAlpha(alpha * 0.3);\r\n    draw.setGlow('#ff0000', 20);\r\n    draw.setFill('#ff0000');\r\n    draw.circle(this.x, this.y, this.radius * 1.5, true);\r\n    draw.clearGlow();\r\n    \r\n    // Main projectile body\r\n    draw.setAlpha(alpha);\r\n    draw.setGlow('#ff0000', 10);\r\n    draw.setFill('#ff3300');\r\n    draw.circle(this.x, this.y, this.radius, true);\r\n    \r\n    // Inner core\r\n    draw.setFill('#ffaa00');\r\n    draw.circle(this.x, this.y, this.radius * 0.6, true);\r\n    \r\n    // Bright center\r\n    draw.setFill('#ffffff');\r\n    draw.setAlpha(alpha * 0.8);\r\n    draw.circle(this.x, this.y, this.radius * 0.3, true);\r\n    \r\n    draw.clearGlow();\r\n    draw.resetAlpha();\r\n    \r\n    // Rotating energy lines\r\n    const ctx = draw.getContext();\r\n    ctx.save();\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.rotationAngle);\r\n    \r\n    draw.setAlpha(alpha * 0.6);\r\n    draw.setStroke('#ff6600', 2);\r\n    for (let i = 0; i < 4; i++) {\r\n      const angle = (i / 4) * Math.PI * 2;\r\n      const x1 = Math.cos(angle) * this.radius * 0.4;\r\n      const y1 = Math.sin(angle) * this.radius * 0.4;\r\n      const x2 = Math.cos(angle) * this.radius * 0.9;\r\n      const y2 = Math.sin(angle) * this.radius * 0.9;\r\n      draw.line(x1, y1, x2, y2);\r\n    }\r\n    draw.resetAlpha();\r\n    ctx.restore();\r\n  }\r\n\r\n  getPosition(): Vec2 {\r\n    return { x: this.x, y: this.y };\r\n  }\r\n\r\n  getRadius(): number {\r\n    return this.radius;\r\n  }\r\n\r\n  checkCollision(point: Vec2, targetRadius: number): boolean {\r\n    const dx = this.x - point.x;\r\n    const dy = this.y - point.y;\r\n    const dist = Math.sqrt(dx * dx + dy * dy);\r\n    return dist < this.radius + targetRadius;\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class Ship {\r\n  public x = 0;\r\n  public y = 0;\r\n  private rotationSpeed: number; // Fixed rotation speed per ship\r\n\r\n  constructor(\r\n    public angle: number,\r\n    private centerX: number,\r\n    private centerY: number,\r\n    private orbitRadius: number,\r\n    public isMainShip = false,\r\n  ) {\r\n    // Give each ship a fixed, slow rotation speed\r\n    this.rotationSpeed = isMainShip ? 0.15 : 0.1 + Math.random() * 0.1; // 0.1 to 0.2 for non-main ships\r\n    this.updatePosition();\r\n  }\r\n\r\n  updatePosition(): void {\r\n    this.x = this.centerX + Math.cos(this.angle) * this.orbitRadius;\r\n    this.y = this.centerY + Math.sin(this.angle) * this.orbitRadius;\r\n  }\r\n\r\n  rotate(dt: number, speed?: number): void {\r\n    // Use the ship's fixed rotation speed if no speed is provided\r\n    const actualSpeed = speed !== undefined ? speed : this.rotationSpeed;\r\n    this.angle += actualSpeed * dt;\r\n    this.updatePosition();\r\n  }\r\n  \r\n  getRotationSpeed(): number {\r\n    return this.rotationSpeed;\r\n  }\r\n\r\n  setOrbit(centerX: number, centerY: number, orbitRadius: number): void {\r\n    this.centerX = centerX;\r\n    this.centerY = centerY;\r\n    this.orbitRadius = orbitRadius;\r\n    this.updatePosition();\r\n  }\r\n\r\n  getPosition(): Vec2 {\r\n    return { x: this.x, y: this.y };\r\n  }\r\n\r\n  getFrontPosition(): Vec2 {\r\n    const size = this.isMainShip ? 12 : 8;\r\n    return {\r\n      x: this.x + Math.cos(this.angle + Math.PI) * size,\r\n      y: this.y + Math.sin(this.angle + Math.PI) * size,\r\n    };\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    const size = this.isMainShip ? 12 : 8;\r\n    const tipX = this.x + Math.cos(this.angle + Math.PI) * size;\r\n    const tipY = this.y + Math.sin(this.angle + Math.PI) * size;\r\n    const left = {\r\n      x: this.x + Math.cos(this.angle + Math.PI * 0.7) * size * 0.6,\r\n      y: this.y + Math.sin(this.angle + Math.PI * 0.7) * size * 0.6,\r\n    };\r\n    const right = {\r\n      x: this.x + Math.cos(this.angle + Math.PI * 1.3) * size * 0.6,\r\n      y: this.y + Math.sin(this.angle + Math.PI * 1.3) * size * 0.6,\r\n    };\r\n\r\n    if (this.isMainShip) {\r\n      drawer.setStroke('#fff', 2);\r\n      drawer.triangle({ x: tipX, y: tipY }, left, right, false);\r\n      drawer.setFill('#fff');\r\n      const smallSize = size * 0.5;\r\n      const innerTipX = this.x + Math.cos(this.angle + Math.PI) * smallSize;\r\n      const innerTipY = this.y + Math.sin(this.angle + Math.PI) * smallSize;\r\n      const innerLeft = {\r\n        x: this.x + Math.cos(this.angle + Math.PI * 0.75) * smallSize * 0.6,\r\n        y: this.y + Math.sin(this.angle + Math.PI * 0.75) * smallSize * 0.6,\r\n      };\r\n      const innerRight = {\r\n        x: this.x + Math.cos(this.angle + Math.PI * 1.25) * smallSize * 0.6,\r\n        y: this.y + Math.sin(this.angle + Math.PI * 1.25) * smallSize * 0.6,\r\n      };\r\n      drawer.triangle({ x: innerTipX, y: innerTipY }, innerLeft, innerRight);\r\n    } else {\r\n      drawer.setFill('#fff');\r\n      drawer.triangle({ x: tipX, y: tipY }, left, right);\r\n    }\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class PlayerShip {\r\n  public x: number;\r\n  public y: number;\r\n  private vx = 0;\r\n  private vy = 0;\r\n  private angle = -Math.PI / 2;\r\n  private rotationSpeed = 4;\r\n  private acceleration = 300;\r\n  private maxSpeed = 250;\r\n  private friction = 0.98;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  rotate(direction: number, dt: number): void {\r\n    this.angle += direction * this.rotationSpeed * dt;\r\n  }\r\n\r\n  thrust(dt: number): void {\r\n    this.vx += Math.cos(this.angle) * this.acceleration * dt;\r\n    this.vy += Math.sin(this.angle) * this.acceleration * dt;\r\n\r\n    const speed = Math.sqrt(this.vx * this.vx + this.vy * this.vy);\r\n    if (speed > this.maxSpeed) {\r\n      this.vx = (this.vx / speed) * this.maxSpeed;\r\n      this.vy = (this.vy / speed) * this.maxSpeed;\r\n    }\r\n  }\r\n\r\n  update(dt: number, canvasWidth: number, canvasHeight: number): void {\r\n    this.vx *= this.friction;\r\n    this.vy *= this.friction;\r\n\r\n    this.x += this.vx * dt;\r\n    this.y += this.vy * dt;\r\n\r\n    if (this.x < 0) this.x = canvasWidth;\r\n    if (this.x > canvasWidth) this.x = 0;\r\n    if (this.y < 0) this.y = canvasHeight;\r\n    if (this.y > canvasHeight) this.y = 0;\r\n  }\r\n\r\n  getFrontPosition(): Vec2 {\r\n    const size = 15;\r\n    return {\r\n      x: this.x + Math.cos(this.angle) * size,\r\n      y: this.y + Math.sin(this.angle) * size,\r\n    };\r\n  }\r\n\r\n  getPosition(): Vec2 {\r\n    return { x: this.x, y: this.y };\r\n  }\r\n\r\n  getAngle(): number {\r\n    return this.angle;\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    const size = 15;\r\n    const tipX = this.x + Math.cos(this.angle) * size;\r\n    const tipY = this.y + Math.sin(this.angle) * size;\r\n    const left = {\r\n      x: this.x + Math.cos(this.angle + (Math.PI * 2.5) / 3) * size * 0.7,\r\n      y: this.y + Math.sin(this.angle + (Math.PI * 2.5) / 3) * size * 0.7,\r\n    };\r\n    const right = {\r\n      x: this.x + Math.cos(this.angle + (Math.PI * 3.5) / 3) * size * 0.7,\r\n      y: this.y + Math.sin(this.angle + (Math.PI * 3.5) / 3) * size * 0.7,\r\n    };\r\n\r\n    drawer.setStroke('#fff', 2);\r\n    drawer.triangle({ x: tipX, y: tipY }, left, right, false);\r\n\r\n    const speed = Math.sqrt(this.vx * this.vx + this.vy * this.vy);\r\n    if (speed > 50) {\r\n      const flameLength = (speed / this.maxSpeed) * size * 0.5;\r\n      const flameX = this.x - Math.cos(this.angle) * size * 0.3;\r\n      const flameY = this.y - Math.sin(this.angle) * size * 0.3;\r\n      const flameEndX = flameX - Math.cos(this.angle) * flameLength;\r\n      const flameEndY = flameY - Math.sin(this.angle) * flameLength;\r\n\r\n      drawer.setStroke('#fff', 1);\r\n      drawer.line(flameX, flameY, flameEndX, flameEndY);\r\n    }\r\n  }\r\n}\r\n\r\n","export class Canvas {\r\n  private canvas: HTMLCanvasElement;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private dpr: number;\r\n\r\n  constructor(canvasElement: HTMLCanvasElement) {\r\n    this.canvas = canvasElement;\r\n    const context = this.canvas.getContext('2d');\r\n    if (!context) throw new Error('Failed to get 2D context');\r\n    this.ctx = context;\r\n    this.dpr = window.devicePixelRatio || 1;\r\n    this.resize();\r\n    window.addEventListener('resize', () => this.resize());\r\n  }\r\n\r\n  private resize(): void {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    this.canvas.width = rect.width * this.dpr;\r\n    this.canvas.height = rect.height * this.dpr;\r\n    this.ctx.scale(this.dpr, this.dpr);\r\n  }\r\n\r\n  getContext(): CanvasRenderingContext2D {\r\n    return this.ctx;\r\n  }\r\n\r\n  getWidth(): number {\r\n    return this.canvas.width / this.dpr;\r\n  }\r\n\r\n  getHeight(): number {\r\n    return this.canvas.height / this.dpr;\r\n  }\r\n\r\n  getCenterX(): number {\r\n    return this.getWidth() / 2;\r\n  }\r\n\r\n  getCenterY(): number {\r\n    return this.getHeight() / 2;\r\n  }\r\n\r\n  clear(): void {\r\n    this.ctx.save();\r\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    this.ctx.fillStyle = '#000';\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.ctx.restore();\r\n  }\r\n}\r\n\r\n","import type { Vec2 } from '../types';\r\n\r\nexport class Draw {\r\n  constructor(private ctx: CanvasRenderingContext2D) {}\r\n\r\n  getContext(): CanvasRenderingContext2D {\r\n    return this.ctx;\r\n  }\r\n\r\n  circle(x: number, y: number, radius: number, fill = true): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n    if (fill) {\r\n      this.ctx.fill();\r\n    } else {\r\n      this.ctx.stroke();\r\n    }\r\n  }\r\n\r\n  line(x1: number, y1: number, x2: number, y2: number): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(x1, y1);\r\n    this.ctx.lineTo(x2, y2);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  setStroke(color: string, width = 1): void {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.lineWidth = width;\r\n  }\r\n\r\n  setFill(color: string): void {\r\n    this.ctx.fillStyle = color;\r\n  }\r\n\r\n  setAlpha(alpha: number): void {\r\n    this.ctx.globalAlpha = alpha;\r\n  }\r\n\r\n  resetAlpha(): void {\r\n    this.ctx.globalAlpha = 1;\r\n  }\r\n\r\n  setGlow(color: string, blur: number): void {\r\n    this.ctx.shadowColor = color;\r\n    this.ctx.shadowBlur = blur;\r\n  }\r\n\r\n  clearGlow(): void {\r\n    this.ctx.shadowColor = 'transparent';\r\n    this.ctx.shadowBlur = 0;\r\n  }\r\n\r\n  triangle(p1: Vec2, p2: Vec2, p3: Vec2, fill = true): void {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(p1.x, p1.y);\r\n    this.ctx.lineTo(p2.x, p2.y);\r\n    this.ctx.lineTo(p3.x, p3.y);\r\n    this.ctx.closePath();\r\n    if (fill) {\r\n      this.ctx.fill();\r\n    } else {\r\n      this.ctx.stroke();\r\n    }\r\n  }\r\n\r\n  text(\r\n    text: string,\r\n    x: number,\r\n    y: number,\r\n    color = '#fff',\r\n    font = '16px monospace',\r\n    align: CanvasTextAlign = 'left'\r\n  ): void {\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.font = font;\r\n    this.ctx.textAlign = align;\r\n    this.ctx.fillText(text, x, y);\r\n  }\r\n}\r\n\r\n","export class Loop {\r\n  private running = false;\r\n  private lastTime = 0;\r\n  private accumulator = 0;\r\n  private readonly fixedDt = 1 / 60;\r\n\r\n  constructor(\r\n    private update: (dt: number) => void,\r\n    private render: () => void,\r\n  ) {}\r\n\r\n  start(): void {\r\n    if (this.running) return;\r\n    this.running = true;\r\n    this.lastTime = performance.now();\r\n    this.loop(this.lastTime);\r\n  }\r\n\r\n  stop(): void {\r\n    this.running = false;\r\n  }\r\n\r\n  private loop = (currentTime: number): void => {\r\n    if (!this.running) return;\r\n\r\n    const deltaTime = Math.min((currentTime - this.lastTime) / 1000, 0.1);\r\n    this.lastTime = currentTime;\r\n    this.accumulator += deltaTime;\r\n\r\n    while (this.accumulator >= this.fixedDt) {\r\n      this.update(this.fixedDt);\r\n      this.accumulator -= this.fixedDt;\r\n    }\r\n\r\n    this.render();\r\n    requestAnimationFrame(this.loop);\r\n  };\r\n}\r\n\r\n","import type { Vec2 } from '../types';\r\n\r\nexport class Input {\r\n  private clickHandlers: ((pos: Vec2) => void)[] = [];\r\n\r\n  constructor(private canvas: HTMLCanvasElement) {\r\n    this.setupListeners();\r\n  }\r\n\r\n  private setupListeners(): void {\r\n    this.canvas.addEventListener('click', this.handleClick);\r\n    this.canvas.addEventListener('touchstart', this.handleTouch, {\r\n      passive: false,\r\n    });\r\n  }\r\n\r\n  private handleClick = (e: MouseEvent): void => {\r\n    const pos = this.getCanvasPosition(e.clientX, e.clientY);\r\n    this.clickHandlers.forEach((handler) => handler(pos));\r\n  };\r\n\r\n  private handleTouch = (e: TouchEvent): void => {\r\n    e.preventDefault();\r\n    if (e.touches.length > 0) {\r\n      const touch = e.touches[0];\r\n      if (touch) {\r\n        const pos = this.getCanvasPosition(touch.clientX, touch.clientY);\r\n        this.clickHandlers.forEach((handler) => handler(pos));\r\n      }\r\n    }\r\n  };\r\n\r\n  private getCanvasPosition(clientX: number, clientY: number): Vec2 {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    const scaleX = this.canvas.width / rect.width;\r\n    const scaleY = this.canvas.height / rect.height;\r\n    return {\r\n      x: (clientX - rect.left) * scaleX,\r\n      y: (clientY - rect.top) * scaleY,\r\n    };\r\n  }\r\n\r\n  onClick(handler: (pos: Vec2) => void): void {\r\n    this.clickHandlers.push(handler);\r\n  }\r\n\r\n  destroy(): void {\r\n    this.canvas.removeEventListener('click', this.handleClick);\r\n    this.canvas.removeEventListener('touchstart', this.handleTouch);\r\n  }\r\n}\r\n\r\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\r\nimport type { GameState } from '../types';\r\n\r\nexport class Store {\r\n  private state: GameState;\r\n  private listeners: (() => void)[] = [];\r\n  private pendingNotify = false;\r\n  private lastNotifyPoints = 0;\r\n\r\n  constructor(initialState: GameState) {\r\n    this.state = { ...initialState };\r\n    \r\n    // Set up periodic notification for throttled updates\r\n    setInterval(() => {\r\n      if (this.pendingNotify) {\r\n        // Always notify if points changed significantly (>5%)\r\n        const pointDiff = Math.abs(this.state.points - this.lastNotifyPoints);\r\n        const shouldNotify = pointDiff > this.lastNotifyPoints * 0.05;\r\n        \r\n        if (shouldNotify || this.pendingNotify) {\r\n          this.notifyListeners();\r\n          this.lastNotifyPoints = this.state.points;\r\n          this.pendingNotify = false;\r\n        }\r\n      }\r\n    }, 30); // Reduced from 50ms to 30ms for more responsive UI\r\n  }\r\n\r\n  getState(): GameState {\r\n    return { ...this.state };\r\n  }\r\n\r\n  setState(updates: Partial<GameState>): void {\r\n    this.state = { ...this.state, ...updates };\r\n    this.notifyListeners();\r\n  }\r\n\r\n  addPoints(amount: number): void {\r\n    this.state.points += amount;\r\n    this.state.stats.totalDamage += amount;\r\n    // Mark that we need to notify, but don't do it immediately (throttled by interval)\r\n    this.pendingNotify = true;\r\n  }\r\n\r\n  spendPoints(amount: number): boolean {\r\n    if (this.state.points >= amount) {\r\n      this.state.points -= amount;\r\n      this.notifyListeners();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  incrementClick(): void {\r\n    this.state.stats.totalClicks++;\r\n  }\r\n\r\n  incrementAlienKill(): void {\r\n    this.state.stats.aliensKilled++;\r\n  }\r\n\r\n  incrementBossKill(): void {\r\n    this.state.stats.bossesKilled++;\r\n  }\r\n\r\n  incrementUpgrade(): void {\r\n    this.state.stats.totalUpgrades++;\r\n  }\r\n\r\n  incrementSubUpgrade(): void {\r\n    this.state.stats.totalSubUpgrades++;\r\n  }\r\n\r\n  updateMaxLevel(): void {\r\n    if (this.state.level > this.state.stats.maxLevel) {\r\n      this.state.stats.maxLevel = this.state.level;\r\n    }\r\n  }\r\n\r\n  addPlayTime(seconds: number): void {\r\n    this.state.stats.playTime += seconds;\r\n  }\r\n\r\n  subscribe(listener: () => void): () => void {\r\n    this.listeners.push(listener);\r\n    return () => {\r\n      this.listeners = this.listeners.filter((l) => l !== listener);\r\n    };\r\n  }\r\n\r\n  private notifyListeners(): void {\r\n    this.listeners.forEach((listener) => { listener(); });\r\n  }\r\n}\r\n\r\n","export function randomRange(min: number, max: number): number {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport function randomInt(min: number, max: number): number {\r\n  return Math.floor(randomRange(min, max + 1));\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number {\r\n  return a + (b - a) * t;\r\n}\r\n\r\nexport function clamp(value: number, min: number, max: number): number {\r\n  return Math.max(min, Math.min(max, value));\r\n}\r\n\r\n","import type { SaveData, GameState } from '../types';\r\nimport { clamp } from '../math/rng';\r\n\r\nconst SAVE_KEY = 'alien-clicker-save';\r\n\r\nexport class Save {\r\n  static save(state: GameState): void {\r\n    const saveData: SaveData = {\r\n      points: state.points,\r\n      shipsCount: state.shipsCount,\r\n      attackSpeedLevel: state.attackSpeedLevel,\r\n      autoFireUnlocked: state.autoFireUnlocked,\r\n      pointMultiplierLevel: state.pointMultiplierLevel,\r\n      critChanceLevel: state.critChanceLevel,\r\n      resourceGenLevel: state.resourceGenLevel,\r\n      xpBoostLevel: state.xpBoostLevel,\r\n      level: state.level,\r\n      experience: state.experience,\r\n      subUpgrades: state.subUpgrades,\r\n      achievements: state.achievements,\r\n      stats: state.stats,\r\n      prestigeLevel: state.prestigeLevel,\r\n      prestigePoints: state.prestigePoints,\r\n      prestigeUpgrades: state.prestigeUpgrades,\r\n      harmonicState: state.harmonicState,\r\n    };\r\n    try {\r\n      localStorage.setItem(SAVE_KEY, JSON.stringify(saveData));\r\n    } catch (error) {\r\n      console.error('Failed to save:', error);\r\n    }\r\n  }\r\n\r\n  static load(): GameState {\r\n    try {\r\n      const saved = localStorage.getItem(SAVE_KEY);\r\n      if (saved) {\r\n        const data = JSON.parse(saved) as SaveData;\r\n        return Save.validate(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load save:', error);\r\n    }\r\n    return Save.getDefault();\r\n  }\r\n\r\n  static clear(): void {\r\n    try {\r\n      localStorage.removeItem(SAVE_KEY);\r\n    } catch (error) {\r\n      console.error('Failed to clear save:', error);\r\n    }\r\n  }\r\n\r\n  private static validate(data: SaveData): GameState {\r\n    const defaultStats = Save.getDefaultStats();\r\n    const defaultHarmonicState = {\r\n      streak: 0,\r\n      harmonicCores: 0,\r\n      tuningForkLevel: 0,\r\n      metronomePurchased: false,\r\n      chorusLevel: 0,\r\n      quantizedRipplesLevel: 0,\r\n      sigils: {\r\n        tempo: 0,\r\n        echo: 0,\r\n        focus: 0,\r\n      },\r\n      echoAccumulator: 0,\r\n    };\r\n    return {\r\n      points: clamp(data.points ?? 0, 0, 1e15),\r\n      shipsCount: clamp(data.shipsCount ?? 1, 1, 1000),\r\n      attackSpeedLevel: clamp(data.attackSpeedLevel ?? 0, 0, 1000),\r\n      autoFireUnlocked: data.autoFireUnlocked ?? false,\r\n      pointMultiplierLevel: clamp(data.pointMultiplierLevel ?? 0, 0, 1000),\r\n      critChanceLevel: clamp(data.critChanceLevel ?? 0, 0, 1000),\r\n      resourceGenLevel: clamp(data.resourceGenLevel ?? 0, 0, 1000),\r\n      xpBoostLevel: clamp(data.xpBoostLevel ?? 0, 0, 1000),\r\n      level: clamp(data.level ?? 1, 1, 10000),\r\n      experience: clamp(data.experience ?? 0, 0, 1e15),\r\n      subUpgrades: data.subUpgrades ?? {},\r\n      achievements: data.achievements ?? {},\r\n      stats: {\r\n        ...defaultStats,\r\n        ...data.stats,\r\n        criticalHits: data.stats?.criticalHits ?? 0,\r\n        totalPrestige: data.stats?.totalPrestige ?? 0,\r\n        milestonesReached: data.stats?.milestonesReached ?? 0,\r\n      },\r\n      prestigeLevel: clamp(data.prestigeLevel ?? 0, 0, 1000),\r\n      prestigePoints: clamp(data.prestigePoints ?? 0, 0, 1e15),\r\n      prestigeUpgrades: data.prestigeUpgrades ?? {},\r\n      harmonicState: data.harmonicState ? {\r\n        ...defaultHarmonicState,\r\n        ...data.harmonicState,\r\n        sigils: {\r\n          ...defaultHarmonicState.sigils,\r\n          ...(data.harmonicState.sigils ?? {}),\r\n        },\r\n      } : defaultHarmonicState,\r\n    };\r\n  }\r\n\r\n  private static getDefault(): GameState {\r\n    return {\r\n      points: 0,\r\n      shipsCount: 1,\r\n      attackSpeedLevel: 0,\r\n      autoFireUnlocked: false,\r\n      pointMultiplierLevel: 0,\r\n      critChanceLevel: 0,\r\n      resourceGenLevel: 0,\r\n      xpBoostLevel: 0,\r\n      level: 1,\r\n      experience: 0,\r\n      subUpgrades: {},\r\n      achievements: {},\r\n      stats: Save.getDefaultStats(),\r\n      prestigeLevel: 0,\r\n      prestigePoints: 0,\r\n      prestigeUpgrades: {},\r\n      harmonicState: {\r\n        streak: 0,\r\n        harmonicCores: 0,\r\n        tuningForkLevel: 0,\r\n        metronomePurchased: false,\r\n        chorusLevel: 0,\r\n        quantizedRipplesLevel: 0,\r\n        sigils: {\r\n          tempo: 0,\r\n          echo: 0,\r\n          focus: 0,\r\n        },\r\n        echoAccumulator: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  private static getDefaultStats() {\r\n    return {\r\n      totalClicks: 0,\r\n      totalDamage: 0,\r\n      aliensKilled: 0,\r\n      bossesKilled: 0,\r\n      totalUpgrades: 0,\r\n      totalSubUpgrades: 0,\r\n      maxLevel: 1,\r\n      playTime: 0,\r\n      criticalHits: 0,\r\n      totalPrestige: 0,\r\n      milestonesReached: 0,\r\n    };\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class Laser {\r\n  public alive = true;\r\n  private travelTime = 0.15; // Fast laser travel\r\n  public age = 0; // Made public for laser system management\r\n  public hasHit = false;\r\n  public damage: number;\r\n  public isCrit = false;\r\n  public color = '#fff';\r\n  public width = 2;\r\n  public isFromShip = false;\r\n\r\n  constructor(\r\n    public origin: Vec2,\r\n    public target: Vec2,\r\n    damage: number,\r\n    upgrades?: { isCrit?: boolean; color?: string; width?: number; isFromShip?: boolean }\r\n  ) {\r\n    this.damage = damage;\r\n    if (upgrades) {\r\n      this.isCrit = upgrades.isCrit ?? false;\r\n      this.color = upgrades.color ?? '#fff';\r\n      this.width = upgrades.width ?? 2;\r\n      this.isFromShip = upgrades.isFromShip ?? false;\r\n    }\r\n  }\r\n\r\n  update(dt: number): void {\r\n    this.age += dt;\r\n    \r\n    // Remove immediately after hitting (no fade-out)\r\n    if (this.hasHit) {\r\n      this.alive = false;\r\n    }\r\n  }\r\n\r\n  getCurrentPosition(): Vec2 {\r\n    if (this.age >= this.travelTime) {\r\n      return this.target;\r\n    }\r\n    \r\n    const progress = Math.min(1, this.age / this.travelTime);\r\n    \r\n    // Straight line laser beam\r\n    return {\r\n      x: this.origin.x + (this.target.x - this.origin.x) * progress,\r\n      y: this.origin.y + (this.target.y - this.origin.y) * progress,\r\n    };\r\n  }\r\n\r\n  checkHit(): boolean {\r\n    if (this.hasHit) return false;\r\n    if (this.age >= this.travelTime) {\r\n      this.hasHit = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    if (!this.alive) return;\r\n\r\n    const current = this.getCurrentPosition();\r\n    const progress = Math.min(1, this.age / this.travelTime);\r\n    \r\n    // Smooth fade-in effect (no epileptic flickering)\r\n    const fadeInAlpha = Math.min(1, progress * 1.5);\r\n\r\n    const ctx = drawer.getContext();\r\n    ctx.save();\r\n    \r\n    // Draw straight laser beam\r\n    const colorRgba = this.hexToRgba(this.color, fadeInAlpha * 0.6);\r\n    const colorTransparent = this.hexToRgba(this.color, 0);\r\n    \r\n    const gradient = ctx.createLinearGradient(\r\n      this.origin.x, this.origin.y,\r\n      current.x, current.y\r\n    );\r\n    \r\n    gradient.addColorStop(0, colorTransparent);\r\n    gradient.addColorStop(0.5, colorRgba);\r\n    gradient.addColorStop(1, this.hexToRgba(this.color, fadeInAlpha));\r\n    \r\n    ctx.globalAlpha = fadeInAlpha * 0.7;\r\n    ctx.strokeStyle = gradient;\r\n    ctx.lineWidth = this.width;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.origin.x, this.origin.y);\r\n    ctx.lineTo(current.x, current.y);\r\n    ctx.stroke();\r\n    \r\n    // Glow for crits (thin glow)\r\n    if (this.isCrit) {\r\n      ctx.globalAlpha = fadeInAlpha * 0.3;\r\n      ctx.strokeStyle = this.color;\r\n      ctx.lineWidth = this.width + 1.5; // Thin glow\r\n      ctx.shadowBlur = 8;\r\n      ctx.shadowColor = this.color;\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.origin.x, this.origin.y);\r\n      ctx.lineTo(current.x, current.y);\r\n      ctx.stroke();\r\n    }\r\n    \r\n    // Draw impact point (only when laser reaches target)\r\n    if (progress >= 0.95) {\r\n      ctx.globalAlpha = fadeInAlpha;\r\n      ctx.fillStyle = this.color;\r\n      ctx.shadowBlur = this.isCrit ? 6 : 3;\r\n      ctx.shadowColor = this.color;\r\n      ctx.beginPath();\r\n      ctx.arc(current.x, current.y, this.isCrit ? 2 : 1.5, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n    \r\n    ctx.restore();\r\n  }\r\n\r\n  private hexToRgba(hex: string, alpha: number): string {\r\n    // Handle both #RGB and #RRGGBB formats\r\n    let r = 0, g = 0, b = 0;\r\n    \r\n    if (hex.startsWith('#')) {\r\n      hex = hex.substring(1);\r\n    }\r\n    \r\n    if (hex.length === 3) {\r\n      r = parseInt((hex[0] ?? '0') + (hex[0] ?? '0'), 16);\r\n      g = parseInt((hex[1] ?? '0') + (hex[1] ?? '0'), 16);\r\n      b = parseInt((hex[2] ?? '0') + (hex[2] ?? '0'), 16);\r\n    } else if (hex.length === 6) {\r\n      r = parseInt(hex.substring(0, 2), 16);\r\n      g = parseInt(hex.substring(2, 4), 16);\r\n      b = parseInt(hex.substring(4, 6), 16);\r\n    }\r\n    \r\n    return `rgba(${r.toString()}, ${g.toString()}, ${b.toString()}, ${alpha.toString()})`;\r\n  }\r\n}\r\n\r\n","import { Laser } from '../entities/Laser';\r\nimport type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class LaserSystem {\r\n  private lasers: Laser[] = [];\r\n  private showShipLasers = true;\r\n  private maxLasers = 1000; // Increased limit for max attack speed\r\n  private maxShipLasers = 800; // Separate limit for ship lasers\r\n\r\n  setShowShipLasers(show: boolean): void {\r\n    this.showShipLasers = show;\r\n  }\r\n\r\n  spawnLaser(origin: Vec2, target: Vec2, damage: number, upgrades?: { isCrit?: boolean; color?: string; width?: number; isFromShip?: boolean }): void {\r\n    const isFromShip = upgrades?.isFromShip ?? false;\r\n    \r\n    // Smart laser management based on type\r\n    if (isFromShip) {\r\n      // For ship lasers, remove youngest ship lasers first (furthest from completion)\r\n      const shipLasers = this.lasers.filter(l => l.isFromShip);\r\n      if (shipLasers.length >= this.maxShipLasers) {\r\n        let youngestIndex = -1;\r\n        let youngestAge = Infinity;\r\n        \r\n        for (let i = 0; i < this.lasers.length; i++) {\r\n          const laser = this.lasers[i];\r\n          if (laser && laser.isFromShip && laser.age < youngestAge) {\r\n            youngestAge = laser.age;\r\n            youngestIndex = i;\r\n          }\r\n        }\r\n        \r\n        if (youngestIndex !== -1) {\r\n          this.lasers.splice(youngestIndex, 1);\r\n        }\r\n      }\r\n    } else {\r\n      // For player lasers, prioritize removing ship lasers first\r\n      const shipLasers = this.lasers.filter(l => l.isFromShip);\r\n      if (shipLasers.length > 0 && this.lasers.length >= this.maxLasers) {\r\n        // Remove youngest ship laser (furthest from completion)\r\n        let youngestIndex = -1;\r\n        let youngestAge = Infinity;\r\n        \r\n        for (let i = 0; i < this.lasers.length; i++) {\r\n          const laser = this.lasers[i];\r\n          if (laser && laser.isFromShip && laser.age < youngestAge) {\r\n            youngestAge = laser.age;\r\n            youngestIndex = i;\r\n          }\r\n        }\r\n        \r\n        if (youngestIndex !== -1) {\r\n          this.lasers.splice(youngestIndex, 1);\r\n        }\r\n      } else if (this.lasers.length >= this.maxLasers) {\r\n        // Only remove player lasers if absolutely necessary\r\n        // Find youngest player laser (furthest from completion) to remove\r\n        let youngestIndex = -1;\r\n        let youngestAge = Infinity;\r\n        \r\n        for (let i = 0; i < this.lasers.length; i++) {\r\n          const laser = this.lasers[i];\r\n          if (laser && !laser.isFromShip && laser.age < youngestAge) {\r\n            youngestAge = laser.age;\r\n            youngestIndex = i;\r\n          }\r\n        }\r\n        \r\n        if (youngestIndex !== -1) {\r\n          this.lasers.splice(youngestIndex, 1);\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.lasers.push(new Laser(origin, target, damage, upgrades));\r\n  }\r\n\r\n  update(dt: number, onHit?: (damage: number, isCrit: boolean) => void): void {\r\n    for (const laser of this.lasers) {\r\n      laser.update(dt);\r\n      if (onHit && laser.checkHit()) {\r\n        onHit(laser.damage, laser.isCrit);\r\n      }\r\n    }\r\n    this.lasers = this.lasers.filter((laser) => laser.alive);\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    for (const laser of this.lasers) {\r\n      // Skip drawing ship lasers if disabled (but they still do damage)\r\n      if (!this.showShipLasers && laser.isFromShip) {\r\n        continue;\r\n      }\r\n      laser.draw(drawer);\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.lasers = [];\r\n  }\r\n\r\n  getLasers(): Laser[] {\r\n    return this.lasers;\r\n  }\r\n\r\n  getLaserStats(): { total: number; shipLasers: number; playerLasers: number } {\r\n    const shipLasers = this.lasers.filter(l => l.isFromShip).length;\r\n    const playerLasers = this.lasers.filter(l => !l.isFromShip).length;\r\n    return {\r\n      total: this.lasers.length,\r\n      shipLasers,\r\n      playerLasers\r\n    };\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class Ripple {\r\n  public alive = true;\r\n  private lifespan = 0.5;\r\n  private age = 0;\r\n  private maxRadius: number;\r\n\r\n  constructor(\r\n    public center: Vec2,\r\n    maxRadius: number,\r\n  ) {\r\n    this.maxRadius = maxRadius;\r\n  }\r\n\r\n  update(dt: number): void {\r\n    this.age += dt;\r\n    if (this.age >= this.lifespan) {\r\n      this.alive = false;\r\n    }\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    if (!this.alive) return;\r\n\r\n    const progress = this.age / this.lifespan;\r\n    const radius = this.maxRadius * progress;\r\n    const alpha = (1 - progress) * 0.8;\r\n\r\n    const grayValue = Math.floor(255 * 0.7);\r\n    drawer.setAlpha(alpha);\r\n    drawer.setStroke(`rgb(${grayValue},${grayValue},${grayValue})`, 2);\r\n    drawer.circle(this.center.x, this.center.y, radius, false);\r\n    drawer.resetAlpha();\r\n  }\r\n}\r\n\r\n","import { Ripple } from '../entities/Ripple';\r\nimport type { Draw } from '../render/Draw';\r\nimport type { Vec2 } from '../types';\r\n\r\nexport class RippleSystem {\r\n  private ripples: Ripple[] = [];\r\n  private maxRipples = 10; // Limit active ripples for performance\r\n\r\n  spawnRipple(center: Vec2, maxRadius: number): void {\r\n    // Limit number of active ripples\r\n    if (this.ripples.length >= this.maxRipples) {\r\n      this.ripples.shift();\r\n    }\r\n    this.ripples.push(new Ripple(center, maxRadius));\r\n  }\r\n\r\n  update(dt: number): void {\r\n    for (const ripple of this.ripples) {\r\n      ripple.update(dt);\r\n    }\r\n    this.ripples = this.ripples.filter((ripple) => ripple.alive);\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    for (const ripple of this.ripples) {\r\n      ripple.draw(drawer);\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.ripples = [];\r\n  }\r\n}\r\n\r\n","import type { GameState, UpgradeConfig, SubUpgrade } from '../types';\r\n\r\nexport class UpgradeSystem {\r\n  private basePoints = 1;\r\n  private subUpgrades: SubUpgrade[] = [];\r\n  private ascensionSystem: {\r\n    getDamageMultiplier: (state: GameState) => number;\r\n    getPointsMultiplier: (state: GameState) => number;\r\n    getCritBonus: (state: GameState) => number;\r\n    getPassiveMultiplier: (state: GameState) => number;\r\n    getXPMultiplier: (state: GameState) => number;\r\n    getSpeedMultiplier: (state: GameState) => number;\r\n  } | null = null;\r\n\r\n  constructor() {\r\n    this.initializeSubUpgrades();\r\n  }\r\n\r\n  setAscensionSystem(ascensionSystem: {\r\n    getDamageMultiplier: (state: GameState) => number;\r\n    getPointsMultiplier: (state: GameState) => number;\r\n    getCritBonus: (state: GameState) => number;\r\n    getPassiveMultiplier: (state: GameState) => number;\r\n    getXPMultiplier: (state: GameState) => number;\r\n    getSpeedMultiplier: (state: GameState) => number;\r\n  }): void {\r\n    this.ascensionSystem = ascensionSystem;\r\n  }\r\n\r\n  private initializeSubUpgrades(): void {\r\n    this.subUpgrades = [\r\n      // === EARLY GAME UPGRADES (Level 1-20) ===\r\n      {\r\n        id: 'death_pact',\r\n        name: 'Death Pact Agreement',\r\n        description: 'Ships gain +10% attack speed',\r\n        flavor: 'In space, no one can hear you sign contracts.',\r\n        cost: 500,\r\n        owned: false,\r\n        requires: (state) => state.shipsCount >= 3,\r\n        isVisible: (state) => state.shipsCount >= 3,\r\n        buy: (state) => {\r\n          state.subUpgrades['death_pact'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'laser_focusing',\r\n        name: 'Laser Focusing Crystals',\r\n        description: 'Increase point gain by 15%',\r\n        flavor: 'These crystals are definitely not from that one forbidden planet...',\r\n        cost: 1000,\r\n        owned: false,\r\n        requires: (state) => state.pointMultiplierLevel >= 5,\r\n        isVisible: (state) => state.pointMultiplierLevel >= 5,\r\n        buy: (state) => {\r\n          state.subUpgrades['laser_focusing'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'coffee_machine',\r\n        name: 'Crew Coffee Machine',\r\n        description: 'Passive point generation +50/sec',\r\n        flavor: 'Caffeine-fueled destruction. Now with extra espresso shots.',\r\n        cost: 2000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 5,\r\n        isVisible: (state) => state.level >= 5,\r\n        buy: (state) => {\r\n          state.subUpgrades['coffee_machine'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'quantum_targeting',\r\n        name: 'Quantum Targeting Array',\r\n        description: 'Ships fire 20% faster',\r\n        flavor: 'Aims at where the target was, is, and will be simultaneously.',\r\n        cost: 2500,\r\n        owned: false,\r\n        requires: (state) => state.attackSpeedLevel >= 10,\r\n        isVisible: (state) => state.attackSpeedLevel >= 10,\r\n        buy: (state) => {\r\n          state.subUpgrades['quantum_targeting'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'lucky_dice',\r\n        name: 'Lucky Space Dice',\r\n        description: '+5% critical hit chance',\r\n        flavor: 'Found them in an asteroid. The previous owner won\\'t miss them.',\r\n        cost: 3500,\r\n        owned: false,\r\n        requires: (state) => state.critChanceLevel >= 5,\r\n        isVisible: (state) => state.critChanceLevel >= 5,\r\n        buy: (state) => {\r\n          state.subUpgrades['lucky_dice'] = true;\r\n        },\r\n      },\r\n\r\n      // === MID GAME UPGRADES (Level 10-40) ===\r\n      {\r\n        id: 'energy_recycling',\r\n        name: 'Energy Recycling System',\r\n        description: 'All upgrades are 5% cheaper',\r\n        flavor: 'Reduce, reuse, recycle... plasma.',\r\n        cost: 5000,\r\n        owned: false,\r\n        requires: (state) => state.shipsCount >= 10,\r\n        isVisible: (state) => state.shipsCount >= 10,\r\n        buy: (state) => {\r\n          state.subUpgrades['energy_recycling'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'overclocked_reactors',\r\n        name: 'Overclocked Reactors',\r\n        description: 'Gain 25% more points per hit',\r\n        flavor: 'Safety protocols are just suggestions anyway.',\r\n        cost: 10000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 10,\r\n        isVisible: (state) => state.level >= 10,\r\n        buy: (state) => {\r\n          state.subUpgrades['overclocked_reactors'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'ship_swarm',\r\n        name: 'Swarm Intelligence Protocol',\r\n        description: 'Ships coordinate attacks for +20% damage',\r\n        flavor: 'The hivemind accepts all. Resistance is futile.',\r\n        cost: 15000,\r\n        owned: false,\r\n        requires: (state) => state.shipsCount >= 15,\r\n        isVisible: (state) => state.shipsCount >= 15,\r\n        buy: (state) => {\r\n          state.subUpgrades['ship_swarm'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'neural_link',\r\n        name: 'Neural Link Interface',\r\n        description: 'Clicking grants 10% bonus points',\r\n        flavor: 'Think faster, click harder.',\r\n        cost: 25000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 20,\r\n        isVisible: (state) => state.level >= 20,\r\n        buy: (state) => {\r\n          state.subUpgrades['neural_link'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'space_pizza',\r\n        name: 'Intergalactic Pizza Delivery',\r\n        description: 'Passive generation +200/sec',\r\n        flavor: 'Guaranteed delivery in 30 light-years or less!',\r\n        cost: 30000,\r\n        owned: false,\r\n        requires: (state) => state.resourceGenLevel >= 10,\r\n        isVisible: (state) => state.resourceGenLevel >= 10,\r\n        buy: (state) => {\r\n          state.subUpgrades['space_pizza'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'rubber_duck',\r\n        name: 'Debugging Rubber Duck',\r\n        description: '+3% critical damage multiplier',\r\n        flavor: 'Explains your problems back to you. Very therapeutic.',\r\n        cost: 35000,\r\n        owned: false,\r\n        requires: (state) => state.stats.criticalHits >= 100,\r\n        isVisible: (state) => state.stats.criticalHits >= 50,\r\n        buy: (state) => {\r\n          state.subUpgrades['rubber_duck'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'antimatter_rounds',\r\n        name: 'Antimatter Ammunition',\r\n        description: 'Double all point gains',\r\n        flavor: 'What could possibly go wrong with weaponized antimatter?',\r\n        cost: 50000,\r\n        owned: false,\r\n        requires: (state) => state.pointMultiplierLevel >= 20,\r\n        isVisible: (state) => state.pointMultiplierLevel >= 20,\r\n        buy: (state) => {\r\n          state.subUpgrades['antimatter_rounds'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'motivational_posters',\r\n        name: 'Motivational Posters',\r\n        description: 'XP gain +25%',\r\n        flavor: '\"Hang in there!\" says the cat dangling from a satellite dish.',\r\n        cost: 60000,\r\n        owned: false,\r\n        requires: (state) => state.xpBoostLevel >= 10,\r\n        isVisible: (state) => state.xpBoostLevel >= 10,\r\n        buy: (state) => {\r\n          state.subUpgrades['motivational_posters'] = true;\r\n        },\r\n      },\r\n\r\n      // === ADVANCED UPGRADES (Level 25-60) ===\r\n      {\r\n        id: 'warp_core',\r\n        name: 'Experimental Warp Core',\r\n        description: 'Ships fire 50% faster',\r\n        flavor: 'Theoretical physics becomes practical firepower.',\r\n        cost: 75000,\r\n        owned: false,\r\n        requires: (state) => state.attackSpeedLevel >= 25,\r\n        isVisible: (state) => state.attackSpeedLevel >= 25,\r\n        buy: (state) => {\r\n          state.subUpgrades['warp_core'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'disco_ball',\r\n        name: 'Hypnotic Disco Ball',\r\n        description: 'Aliens confused, +15% all stats',\r\n        flavor: 'Saturday Night Fever, but in space. And deadly.',\r\n        cost: 85000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 30,\r\n        isVisible: (state) => state.level >= 30,\r\n        buy: (state) => {\r\n          state.subUpgrades['disco_ball'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'ai_optimizer',\r\n        name: 'AI Optimization Subroutines',\r\n        description: 'Ship fire cooldown reduced by 30%',\r\n        flavor: 'The AI promises it won\\'t become self-aware. Probably.',\r\n        cost: 100000,\r\n        owned: false,\r\n        requires: (state) => state.attackSpeedLevel >= 30,\r\n        isVisible: (state) => state.attackSpeedLevel >= 30,\r\n        buy: (state) => {\r\n          state.subUpgrades['ai_optimizer'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'lucky_horseshoe',\r\n        name: 'Lucky Horseshoe',\r\n        description: 'Critical hits deal 50% more damage',\r\n        flavor: 'Who needs horses in space? Apparently, luck does.',\r\n        cost: 120000,\r\n        owned: false,\r\n        requires: (state) => state.critChanceLevel >= 15,\r\n        isVisible: (state) => state.critChanceLevel >= 15,\r\n        buy: (state) => {\r\n          state.subUpgrades['lucky_horseshoe'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'perfect_precision',\r\n        name: 'Perfect Precision Arrays',\r\n        description: 'Critical hits: 5% chance for 10x damage',\r\n        flavor: 'Every shot finds its mark. Every. Single. One.',\r\n        cost: 150000,\r\n        owned: false,\r\n        requires: (state) => state.shipsCount >= 25,\r\n        isVisible: (state) => state.shipsCount >= 25,\r\n        buy: (state) => {\r\n          state.subUpgrades['perfect_precision'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'arcade_machine',\r\n        name: 'Retro Arcade Machine',\r\n        description: 'Passive generation +1000/sec',\r\n        flavor: 'Plays Pac-Man while generating infinite energy. Science!',\r\n        cost: 175000,\r\n        owned: false,\r\n        requires: (state) => state.resourceGenLevel >= 20,\r\n        isVisible: (state) => state.resourceGenLevel >= 20,\r\n        buy: (state) => {\r\n          state.subUpgrades['arcade_machine'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'void_channeling',\r\n        name: 'Void Energy Channeling',\r\n        description: 'Destroying aliens grants bonus XP',\r\n        flavor: 'The void stares back, and it likes what it sees.',\r\n        cost: 200000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 40,\r\n        isVisible: (state) => state.level >= 40,\r\n        buy: (state) => {\r\n          state.subUpgrades['void_channeling'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'chaos_emeralds',\r\n        name: 'Seven Chaos Emeralds',\r\n        description: 'All damage +35%',\r\n        flavor: 'Gotta go fast! Wait, wrong franchise...',\r\n        cost: 250000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 45,\r\n        isVisible: (state) => state.level >= 45,\r\n        buy: (state) => {\r\n          state.subUpgrades['chaos_emeralds'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'time_machine',\r\n        name: 'Malfunctioning Time Machine',\r\n        description: 'XP gain +50%',\r\n        flavor: 'Sets time forward, backward, and sideways. Results may vary.',\r\n        cost: 300000,\r\n        owned: false,\r\n        requires: (state) => state.xpBoostLevel >= 20,\r\n        isVisible: (state) => state.xpBoostLevel >= 20,\r\n        buy: (state) => {\r\n          state.subUpgrades['time_machine'] = true;\r\n        },\r\n      },\r\n\r\n      // === LATE GAME UPGRADES (Level 50-80) ===\r\n      {\r\n        id: 'nanobots',\r\n        name: 'Self-Replicating Nanobots',\r\n        description: 'Passive generation +2500/sec',\r\n        flavor: 'They multiply. They evolve. They pay dividends.',\r\n        cost: 5000000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 50,\r\n        isVisible: (state) => state.level >= 50,\r\n        buy: (state) => {\r\n          state.subUpgrades['nanobots'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'plasma_matrix',\r\n        name: 'Plasma Energy Matrix',\r\n        description: 'All damage +25%, Attack speed +15%',\r\n        flavor: 'Harness the power of contained supernovas.',\r\n        cost: 7500000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 52,\r\n        isVisible: (state) => state.level >= 52,\r\n        buy: (state) => {\r\n          state.subUpgrades['plasma_matrix'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'holographic_decoys',\r\n        name: 'Holographic Decoy System',\r\n        description: 'Ships can attack twice as often',\r\n        flavor: 'One ship becomes many. Confusion intensifies.',\r\n        cost: 10000000,\r\n        owned: false,\r\n        requires: (state) => state.shipsCount >= 18,\r\n        isVisible: (state) => state.shipsCount >= 18,\r\n        buy: (state) => {\r\n          state.subUpgrades['holographic_decoys'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'temporal_acceleration',\r\n        name: 'Temporal Acceleration Field',\r\n        description: 'All ships gain +100% attack speed',\r\n        flavor: 'Time is relative. Especially when you control it.',\r\n        cost: 15000000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 55,\r\n        isVisible: (state) => state.level >= 55,\r\n        buy: (state) => {\r\n          state.subUpgrades['temporal_acceleration'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'quantum_entanglement',\r\n        name: 'Quantum Entanglement Core',\r\n        description: 'Critical hits +8%, Damage x1.5',\r\n        flavor: 'Spooky action at a distance. Einstein hated it. You\\'ll love it.',\r\n        cost: 20000000,\r\n        owned: false,\r\n        requires: (state) => state.critChanceLevel >= 20,\r\n        isVisible: (state) => state.critChanceLevel >= 20,\r\n        buy: (state) => {\r\n          state.subUpgrades['quantum_entanglement'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'philosophers_stone',\r\n        name: \"Philosopher's Stone\",\r\n        description: 'Passive generation x5',\r\n        flavor: 'Turns lead into gold. And boredom into profit.',\r\n        cost: 600000,\r\n        owned: false,\r\n        requires: (state) => state.resourceGenLevel >= 30,\r\n        isVisible: (state) => state.resourceGenLevel >= 30,\r\n        buy: (state) => {\r\n          state.subUpgrades['philosophers_stone'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'stellar_forge',\r\n        name: 'Stellar Forge',\r\n        description: 'XP gain +75%, All damage +20%',\r\n        flavor: 'Where stars are born, and enemies meet their end.',\r\n        cost: 30000000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 62,\r\n        isVisible: (state) => state.level >= 62,\r\n        buy: (state) => {\r\n          state.subUpgrades['stellar_forge'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'golden_goose',\r\n        name: 'Quantum Golden Goose',\r\n        description: 'Points per click +50%',\r\n        flavor: 'Lays golden eggs. In multiple dimensions. Simultaneously.',\r\n        cost: 40000000,\r\n        owned: false,\r\n        requires: (state) => state.stats.totalClicks >= 5000,\r\n        isVisible: (state) => state.stats.totalClicks >= 2500,\r\n        buy: (state) => {\r\n          state.subUpgrades['golden_goose'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'dark_matter_engine',\r\n        name: 'Dark Matter Engine',\r\n        description: 'Passive generation x3, Ships +25% speed',\r\n        flavor: '95% of the universe is dark matter. Now it\\'s yours.',\r\n        cost: 50000000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 65,\r\n        isVisible: (state) => state.level >= 65,\r\n        buy: (state) => {\r\n          state.subUpgrades['dark_matter_engine'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'antimatter_cascade',\r\n        name: 'Antimatter Cascade Reactor',\r\n        description: 'All click damage x4',\r\n        flavor: 'Click once. Destroy everything. Repeat.',\r\n        cost: 60000000,\r\n        owned: false,\r\n        requires: (state) => state.stats.totalClicks >= 7500,\r\n        isVisible: (state) => state.stats.totalClicks >= 5000,\r\n        buy: (state) => {\r\n          state.subUpgrades['antimatter_cascade'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'infinity_gauntlet',\r\n        name: 'Infinity Gauntlet (Replica)',\r\n        description: 'All stats +40%',\r\n        flavor: 'Perfectly balanced, as all things should be. Also, not trademarked.',\r\n        cost: 800000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 70,\r\n        isVisible: (state) => state.level >= 70,\r\n        buy: (state) => {\r\n          state.subUpgrades['infinity_gauntlet'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'nebula_harvester',\r\n        name: 'Nebula Energy Harvester',\r\n        description: 'Passive generation +5000/sec, XP +50%',\r\n        flavor: 'Siphon energy from the cosmic clouds themselves.',\r\n        cost: 75000000,\r\n        owned: false,\r\n        requires: (state) => state.resourceGenLevel >= 35,\r\n        isVisible: (state) => state.resourceGenLevel >= 35,\r\n        buy: (state) => {\r\n          state.subUpgrades['nebula_harvester'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'alien_cookbook',\r\n        name: 'Alien Recipe Book',\r\n        description: 'Boss kill rewards +100%',\r\n        flavor: '\"To Serve Aliens\" - It\\'s a cookbook!',\r\n        cost: 900000,\r\n        owned: false,\r\n        requires: (state) => state.stats.bossesKilled >= 25,\r\n        isVisible: (state) => state.stats.bossesKilled >= 15,\r\n        buy: (state) => {\r\n          state.subUpgrades['alien_cookbook'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'hyper_reactor',\r\n        name: 'Hyper-Dimensional Reactor',\r\n        description: 'All damage x2, Critical chance +5%',\r\n        flavor: 'Powers drawn from dimensions we can\\'t even see.',\r\n        cost: 100000000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 75,\r\n        isVisible: (state) => state.level >= 75,\r\n        buy: (state) => {\r\n          state.subUpgrades['hyper_reactor'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'nuclear_reactor',\r\n        name: 'Pocket Nuclear Reactor',\r\n        description: 'Passive generation +10000/sec',\r\n        flavor: 'Fits in your pocket. Do not put in pocket.',\r\n        cost: 125000000,\r\n        owned: false,\r\n        requires: (state) => state.resourceGenLevel >= 40,\r\n        isVisible: (state) => state.resourceGenLevel >= 40,\r\n        buy: (state) => {\r\n          state.subUpgrades['nuclear_reactor'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'photon_amplifier',\r\n        name: 'Photon Wave Amplifier',\r\n        description: 'Ships fire 75% faster, Damage +30%',\r\n        flavor: 'Light speed is too slow. We\\'re going to ludicrous speed!',\r\n        cost: 150000000,\r\n        owned: false,\r\n        requires: (state) => state.attackSpeedLevel >= 40,\r\n        isVisible: (state) => state.attackSpeedLevel >= 40,\r\n        buy: (state) => {\r\n          state.subUpgrades['photon_amplifier'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'reality_anchor',\r\n        name: 'Reality Anchor',\r\n        description: 'Critical damage x3, All gains +25%',\r\n        flavor: 'Keep reality in check. Or break it. Your choice.',\r\n        cost: 200000000,\r\n        owned: false,\r\n        requires: (state) => state.critChanceLevel >= 35,\r\n        isVisible: (state) => state.critChanceLevel >= 35,\r\n        buy: (state) => {\r\n          state.subUpgrades['reality_anchor'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'cosmic_battery',\r\n        name: 'Cosmic Energy Battery',\r\n        description: 'Passive generation x7',\r\n        flavor: 'Stores the energy of dying stars. Batteries not included.',\r\n        cost: 250000000,\r\n        owned: false,\r\n        requires: (state) => state.resourceGenLevel >= 45,\r\n        isVisible: (state) => state.resourceGenLevel >= 45,\r\n        buy: (state) => {\r\n          state.subUpgrades['cosmic_battery'] = true;\r\n        },\r\n      },\r\n\r\n      // === END GAME UPGRADES (Level 80-100) ===\r\n      {\r\n        id: 'singularity_core',\r\n        name: 'Singularity Power Core',\r\n        description: 'Gain 5x points from all sources',\r\n        flavor: 'A black hole in a box. What could be safer?',\r\n        cost: 2000000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 80,\r\n        isVisible: (state) => state.level >= 80,\r\n        buy: (state) => {\r\n          state.subUpgrades['singularity_core'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'cheat_codes',\r\n        name: 'Cheat Code Manual',\r\n        description: 'All upgrades 20% cheaper',\r\n        flavor: 'Up, Up, Down, Down, Left, Right, Left, Right, B, A, Start.',\r\n        cost: 2500000,\r\n        owned: false,\r\n        requires: (state) => state.stats.totalUpgrades >= 200,\r\n        isVisible: (state) => state.stats.totalUpgrades >= 150,\r\n        buy: (state) => {\r\n          state.subUpgrades['cheat_codes'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'dragon_egg',\r\n        name: 'Dragon Egg',\r\n        description: 'Critical hit chance +10%, Critical damage x2',\r\n        flavor: 'It\\'s either a dragon egg or a really angry space chicken.',\r\n        cost: 3000000,\r\n        owned: false,\r\n        requires: (state) => state.critChanceLevel >= 30,\r\n        isVisible: (state) => state.critChanceLevel >= 30,\r\n        buy: (state) => {\r\n          state.subUpgrades['dragon_egg'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'universe_map',\r\n        name: 'Map of the Universe',\r\n        description: 'XP gain x3',\r\n        flavor: 'You are here. So is everything else. Helpful!',\r\n        cost: 4000000,\r\n        owned: false,\r\n        requires: (state) => state.xpBoostLevel >= 35,\r\n        isVisible: (state) => state.xpBoostLevel >= 35,\r\n        buy: (state) => {\r\n          state.subUpgrades['universe_map'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'answer_to_everything',\r\n        name: 'Answer to Everything',\r\n        description: 'All passive generation x10',\r\n        flavor: 'It\\'s 42. But what was the question again?',\r\n        cost: 5000000,\r\n        owned: false,\r\n        requires: (state) => state.resourceGenLevel >= 50,\r\n        isVisible: (state) => state.resourceGenLevel >= 50,\r\n        buy: (state) => {\r\n          state.subUpgrades['answer_to_everything'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'heart_of_galaxy',\r\n        name: 'Heart of the Galaxy',\r\n        description: 'All damage x3',\r\n        flavor: 'The galaxy had a heart. HAD.',\r\n        cost: 7500000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 90,\r\n        isVisible: (state) => state.level >= 90,\r\n        buy: (state) => {\r\n          state.subUpgrades['heart_of_galaxy'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'cosmic_ascension',\r\n        name: 'Cosmic Ascension Protocol',\r\n        description: 'Unlock ultimate power: 10x all gains',\r\n        flavor: 'You have become death, destroyer of alien balls.',\r\n        cost: 10000000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 95,\r\n        isVisible: (state) => state.level >= 95,\r\n        buy: (state) => {\r\n          state.subUpgrades['cosmic_ascension'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'meaning_of_life',\r\n        name: 'Meaning of Life',\r\n        description: 'Unlock prestige system & all stats x2',\r\n        flavor: 'Spoiler: It\\'s clicking alien balls all the way down.',\r\n        cost: 25000000,\r\n        owned: false,\r\n        requires: (state) => state.level >= 100,\r\n        isVisible: (state) => state.level >= 100,\r\n        buy: (state) => {\r\n          state.subUpgrades['meaning_of_life'] = true;\r\n        },\r\n      },\r\n      // === CLICK-FOCUSED UPGRADES ===\r\n      {\r\n        id: 'master_clicker',\r\n        name: 'Master Clicker',\r\n        description: 'Clicking gives +100% more points',\r\n        flavor: 'Click, click, boom!',\r\n        cost: 50000,\r\n        owned: false,\r\n        requires: (state) => state.stats.totalClicks >= 1000,\r\n        isVisible: (state) => state.stats.totalClicks >= 500,\r\n        buy: (state) => {\r\n          state.subUpgrades['master_clicker'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'rapid_fire',\r\n        name: 'Rapid Fire Protocol',\r\n        description: 'Each click fires 2 additional lasers',\r\n        flavor: 'One click, triple threat!',\r\n        cost: 150000,\r\n        owned: false,\r\n        requires: (state) => state.stats.totalClicks >= 2500,\r\n        isVisible: (state) => state.stats.totalClicks >= 1500,\r\n        buy: (state) => {\r\n          state.subUpgrades['rapid_fire'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'click_multiplier',\r\n        name: 'Click Multiplier Matrix',\r\n        description: 'Clicking multiplies damage by 3x',\r\n        flavor: 'Every click echoes through reality.',\r\n        cost: 500000,\r\n        owned: false,\r\n        requires: (state) => state.stats.totalClicks >= 5000,\r\n        isVisible: (state) => state.stats.totalClicks >= 3000,\r\n        buy: (state) => {\r\n          state.subUpgrades['click_multiplier'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'super_clicker',\r\n        name: 'Super Clicker Ultimate',\r\n        description: 'Clicks deal 5x damage and grant bonus XP',\r\n        flavor: 'The ultimate clicking evolution.',\r\n        cost: 2000000,\r\n        owned: false,\r\n        requires: (state) => state.stats.totalClicks >= 10000,\r\n        isVisible: (state) => state.stats.totalClicks >= 7500,\r\n        buy: (state) => {\r\n          state.subUpgrades['super_clicker'] = true;\r\n        },\r\n      },\r\n      {\r\n        id: 'missile_launcher',\r\n        name: 'Missile Launcher Array',\r\n        description: 'Enhanced targeting systems for improved precision',\r\n        flavor: 'Advanced missile technology for maximum firepower.',\r\n        cost: 500000,\r\n        owned: false,\r\n        requires: (state) => state.shipsCount >= 15,\r\n        isVisible: (state) => state.shipsCount >= 15,\r\n        buy: (state) => {\r\n          state.subUpgrades['missile_launcher'] = true;\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  getSubUpgrades(): SubUpgrade[] {\r\n    return this.subUpgrades.map(upgrade => ({\r\n      ...upgrade,\r\n      owned: upgrade.owned\r\n    }));\r\n  }\r\n\r\n  updateSubUpgradesFromState(state: GameState): void {\r\n    for (const upgrade of this.subUpgrades) {\r\n      upgrade.owned = state.subUpgrades[upgrade.id] ?? false;\r\n    }\r\n  }\r\n\r\n  getUpgrades(): UpgradeConfig[] {\r\n    // Ship-related sub-upgrades\r\n    const shipSubUpgrades = this.subUpgrades.filter(u => \r\n      ['death_pact', 'ship_swarm', 'perfect_precision', 'missile_launcher'].includes(u.id)\r\n    );\r\n\r\n    // Attack speed related sub-upgrades\r\n    const attackSpeedSubUpgrades = this.subUpgrades.filter(u => \r\n      ['quantum_targeting', 'warp_core', 'ai_optimizer', 'temporal_acceleration', 'holographic_decoys', 'photon_amplifier'].includes(u.id)\r\n    );\r\n\r\n    // Point multiplier related sub-upgrades\r\n    const pointMultiplierSubUpgrades = this.subUpgrades.filter(u => \r\n      ['laser_focusing', 'overclocked_reactors', 'neural_link', 'antimatter_rounds', \r\n       'singularity_core', 'cosmic_ascension', 'disco_ball', 'chaos_emeralds',\r\n       'infinity_gauntlet', 'heart_of_galaxy', 'meaning_of_life', 'golden_goose',\r\n       'master_clicker', 'rapid_fire', 'click_multiplier', 'super_clicker', 'plasma_matrix',\r\n       'quantum_entanglement', 'stellar_forge', 'antimatter_cascade', 'hyper_reactor',\r\n       'photon_amplifier', 'reality_anchor'].includes(u.id)\r\n    );\r\n\r\n    // Critical hit related sub-upgrades\r\n    const critSubUpgrades = this.subUpgrades.filter(u => \r\n      ['lucky_dice', 'rubber_duck', 'lucky_horseshoe', 'dragon_egg', 'quantum_entanglement', 'hyper_reactor', 'reality_anchor'].includes(u.id)\r\n    );\r\n\r\n    // Resource generation related sub-upgrades\r\n    const resourceSubUpgrades = this.subUpgrades.filter(u => \r\n      ['coffee_machine', 'space_pizza', 'arcade_machine', 'philosophers_stone',\r\n       'nuclear_reactor', 'answer_to_everything', 'nanobots', 'dark_matter_engine', 'nebula_harvester', 'cosmic_battery'].includes(u.id)\r\n    );\r\n\r\n    // XP boost related sub-upgrades\r\n    const xpSubUpgrades = this.subUpgrades.filter(u => \r\n      ['motivational_posters', 'void_channeling', 'time_machine', 'universe_map', 'stellar_forge', 'nebula_harvester'].includes(u.id)\r\n    );\r\n\r\n    // General/misc sub-upgrades\r\n    const miscSubUpgrades = this.subUpgrades.filter(u => \r\n      ['energy_recycling', 'cheat_codes', 'alien_cookbook'].includes(u.id)\r\n    );\r\n\r\n    const shipUpgrade: UpgradeConfig = {\r\n      id: 'ship',\r\n      name: '🚀 Starship Fleet',\r\n      description: 'Recruit another starship to your armada. More ships = more firepower!',\r\n      getCost: (level: number) => this.applyDiscount(Math.ceil(10 * Math.pow(1.15, level))),\r\n      canBuy: (state: GameState) => {\r\n        const cost = this.applyDiscount(Math.ceil(10 * Math.pow(1.15, state.shipsCount)));\r\n        return state.points >= cost;\r\n      },\r\n      buy: (state: GameState) => {\r\n        state.shipsCount++;\r\n      },\r\n      getLevel: (state: GameState) => state.shipsCount,\r\n      getDisplayText: (state: GameState) => `Fleet: ${state.shipsCount.toString()}`,\r\n      subUpgrades: shipSubUpgrades,\r\n    };\r\n\r\n    const attackSpeedUpgrade: UpgradeConfig = {\r\n      id: 'attackSpeed',\r\n      name: '⚡ Attack Speed',\r\n      description: 'Upgrade targeting computers to fire faster. Speed is everything.',\r\n      getCost: (level: number) => this.applyDiscount(Math.ceil(50 * Math.pow(1.25, level))),\r\n      canBuy: (state: GameState) => {\r\n        const cost = this.applyDiscount(Math.ceil(50 * Math.pow(1.25, state.attackSpeedLevel)));\r\n        const cooldown = this.getFireCooldown(state);\r\n        // Don't allow buying if already at minimum cooldown\r\n        return state.points >= cost && cooldown > 50;\r\n      },\r\n      buy: (state: GameState) => {\r\n        state.attackSpeedLevel++;\r\n      },\r\n      getLevel: (state: GameState) => state.attackSpeedLevel,\r\n      getDisplayText: (state: GameState) => {\r\n        const cooldown = this.getFireCooldown(state);\r\n        const suffix = cooldown <= 50 ? ' [MAX]' : '';\r\n        return `Lv.${state.attackSpeedLevel.toString()} (${cooldown.toString()}ms${suffix})`;\r\n      },\r\n      subUpgrades: attackSpeedSubUpgrades,\r\n    };\r\n\r\n    const pointMultiplierUpgrade: UpgradeConfig = {\r\n      id: 'pointMultiplier',\r\n      name: '💎 Damage Amplifier',\r\n      description: 'Enhance laser power for maximum destruction per hit.',\r\n      getCost: (level: number) => this.applyDiscount(Math.ceil(100 * Math.pow(1.3, level))),\r\n      canBuy: (state: GameState) => {\r\n        const cost = this.applyDiscount(Math.ceil(100 * Math.pow(1.3, state.pointMultiplierLevel)));\r\n        return state.points >= cost;\r\n      },\r\n      buy: (state: GameState) => {\r\n        state.pointMultiplierLevel++;\r\n      },\r\n      getLevel: (state: GameState) => state.pointMultiplierLevel,\r\n      getDisplayText: (state: GameState) =>\r\n        `Lv.${state.pointMultiplierLevel.toString()} (${this.getPointsPerHit(state).toFixed(1)}/hit)`,\r\n      subUpgrades: pointMultiplierSubUpgrades,\r\n    };\r\n\r\n    const critChanceUpgrade: UpgradeConfig = {\r\n      id: 'critChance',\r\n      name: '✨ Critical Strike',\r\n      description: 'Increase critical hit chance and damage for devastating strikes.',\r\n      getCost: (level: number) => this.applyDiscount(Math.ceil(150 * Math.pow(1.35, level))),\r\n      canBuy: (state: GameState) => {\r\n        const cost = this.applyDiscount(Math.ceil(150 * Math.pow(1.35, state.critChanceLevel)));\r\n        return state.points >= cost;\r\n      },\r\n      buy: (state: GameState) => {\r\n        state.critChanceLevel++;\r\n      },\r\n      getLevel: (state: GameState) => state.critChanceLevel,\r\n      getDisplayText: (state: GameState) =>\r\n        `Lv.${state.critChanceLevel.toString()} (${this.getCritChance(state).toFixed(1)}%)`,\r\n      subUpgrades: critSubUpgrades,\r\n    };\r\n\r\n    const resourceGenUpgrade: UpgradeConfig = {\r\n      id: 'resourceGen',\r\n      name: '🏭 Passive Income',\r\n      description: 'Generate points automatically over time. Scales exponentially!',\r\n      getCost: (level: number) => this.applyDiscount(Math.ceil(200 * Math.pow(1.4, level))),\r\n      canBuy: (state: GameState) => {\r\n        const cost = this.applyDiscount(Math.ceil(200 * Math.pow(1.4, state.resourceGenLevel)));\r\n        return state.points >= cost;\r\n      },\r\n      buy: (state: GameState) => {\r\n        state.resourceGenLevel++;\r\n      },\r\n      getLevel: (state: GameState) => state.resourceGenLevel,\r\n      getDisplayText: (state: GameState) =>\r\n        `Lv.${state.resourceGenLevel.toString()} (${this.formatPassiveGen(this.getPassiveGen(state))}/sec)`,\r\n      subUpgrades: resourceSubUpgrades,\r\n    };\r\n\r\n    const xpBoostUpgrade: UpgradeConfig = {\r\n      id: 'xpBoost',\r\n      name: '📚 Knowledge Core',\r\n      description: 'Learn faster and level up quicker. Knowledge is power!',\r\n      getCost: (level: number) => this.applyDiscount(Math.ceil(250 * Math.pow(1.38, level))),\r\n      canBuy: (state: GameState) => {\r\n        const cost = this.applyDiscount(Math.ceil(250 * Math.pow(1.38, state.xpBoostLevel)));\r\n        return state.points >= cost;\r\n      },\r\n      buy: (state: GameState) => {\r\n        state.xpBoostLevel++;\r\n      },\r\n      getLevel: (state: GameState) => state.xpBoostLevel,\r\n      getDisplayText: (state: GameState) =>\r\n        `Lv.${state.xpBoostLevel.toString()} (+${(this.getXPMultiplier(state) * 100 - 100).toFixed(0)}% XP)`,\r\n      subUpgrades: xpSubUpgrades,\r\n    };\r\n\r\n    const miscUpgrade: UpgradeConfig = {\r\n      id: 'misc',\r\n      name: '🔬 Research & Development',\r\n      description: 'Unlock experimental technologies and forbidden knowledge.',\r\n      getCost: () => 0,\r\n      canBuy: () => false,\r\n      buy: () => {},\r\n      getLevel: () => 0,\r\n      getDisplayText: () => 'Special Technologies',\r\n      subUpgrades: miscSubUpgrades,\r\n    };\r\n\r\n    return [\r\n      shipUpgrade,\r\n      attackSpeedUpgrade,\r\n      pointMultiplierUpgrade,\r\n      critChanceUpgrade,\r\n      resourceGenUpgrade,\r\n      xpBoostUpgrade,\r\n      miscUpgrade,\r\n    ];\r\n  }\r\n\r\n  private applyDiscount(cost: number): number {\r\n    let discount = 1.0;\r\n    \r\n    // Energy recycling: 5% discount\r\n    if (this.subUpgrades.find(u => u.id === 'energy_recycling')?.owned) {\r\n      discount *= 0.95;\r\n    }\r\n    \r\n    // Cheat codes: 20% discount\r\n    if (this.subUpgrades.find(u => u.id === 'cheat_codes')?.owned) {\r\n      discount *= 0.80;\r\n    }\r\n    \r\n    return Math.floor(cost * discount);\r\n  }\r\n\r\n  getPointsPerHit(state: GameState): number {\r\n    this.updateSubUpgradesFromState(state);\r\n    let multiplier = this.basePoints * (1 + 0.15 * state.pointMultiplierLevel);\r\n\r\n    // Laser focusing crystals: +15%\r\n    if (state.subUpgrades['laser_focusing']) {\r\n      multiplier *= 1.15;\r\n    }\r\n\r\n    // Overclocked reactors: +25%\r\n    if (state.subUpgrades['overclocked_reactors']) {\r\n      multiplier *= 1.25;\r\n    }\r\n\r\n    // Ship swarm: +20%\r\n    if (state.subUpgrades['ship_swarm']) {\r\n      multiplier *= 1.20;\r\n    }\r\n\r\n    // Neural link: +10% on clicks\r\n    if (state.subUpgrades['neural_link']) {\r\n      multiplier *= 1.10;\r\n    }\r\n\r\n    // Antimatter rounds: 2x\r\n    if (state.subUpgrades['antimatter_rounds']) {\r\n      multiplier *= 2;\r\n    }\r\n\r\n    // Plasma matrix: +25%\r\n    if (state.subUpgrades['plasma_matrix']) {\r\n      multiplier *= 1.25;\r\n    }\r\n\r\n    // Quantum entanglement: x1.5\r\n    if (state.subUpgrades['quantum_entanglement']) {\r\n      multiplier *= 1.5;\r\n    }\r\n\r\n    // Stellar forge: +20%\r\n    if (state.subUpgrades['stellar_forge']) {\r\n      multiplier *= 1.20;\r\n    }\r\n\r\n    // Antimatter cascade: x4 (for clicks)\r\n    if (state.subUpgrades['antimatter_cascade']) {\r\n      multiplier *= 4;\r\n    }\r\n\r\n    // Hyper reactor: x2\r\n    if (state.subUpgrades['hyper_reactor']) {\r\n      multiplier *= 2;\r\n    }\r\n\r\n    // Photon amplifier: +30%\r\n    if (state.subUpgrades['photon_amplifier']) {\r\n      multiplier *= 1.30;\r\n    }\r\n\r\n    // Reality anchor: +25%\r\n    if (state.subUpgrades['reality_anchor']) {\r\n      multiplier *= 1.25;\r\n    }\r\n\r\n    // Disco ball: +15%\r\n    if (state.subUpgrades['disco_ball']) {\r\n      multiplier *= 1.15;\r\n    }\r\n\r\n    // Chaos emeralds: +35%\r\n    if (state.subUpgrades['chaos_emeralds']) {\r\n      multiplier *= 1.35;\r\n    }\r\n\r\n    // Infinity gauntlet: +40%\r\n    if (state.subUpgrades['infinity_gauntlet']) {\r\n      multiplier *= 1.40;\r\n    }\r\n\r\n    // Golden goose: +50%\r\n    if (state.subUpgrades['golden_goose']) {\r\n      multiplier *= 1.50;\r\n    }\r\n\r\n    // Heart of galaxy: x3\r\n    if (state.subUpgrades['heart_of_galaxy']) {\r\n      multiplier *= 3;\r\n    }\r\n\r\n    // Singularity core: 5x\r\n    if (state.subUpgrades['singularity_core']) {\r\n      multiplier *= 5;\r\n    }\r\n\r\n    // Cosmic ascension: 10x\r\n    if (state.subUpgrades['cosmic_ascension']) {\r\n      multiplier *= 10;\r\n    }\r\n\r\n    // Meaning of life: x2\r\n    if (state.subUpgrades['meaning_of_life']) {\r\n      multiplier *= 2;\r\n    }\r\n\r\n    // Click-focused upgrades\r\n    if (state.subUpgrades['master_clicker']) {\r\n      multiplier *= 2;\r\n    }\r\n\r\n    if (state.subUpgrades['click_multiplier']) {\r\n      multiplier *= 3;\r\n    }\r\n\r\n    if (state.subUpgrades['super_clicker']) {\r\n      multiplier *= 5;\r\n    }\r\n\r\n    // Perfect precision: 5% chance for 10x (handled in Game.ts)\r\n    if (state.subUpgrades['perfect_precision']) {\r\n      if (Math.random() < 0.05) {\r\n        multiplier *= 10;\r\n      }\r\n    }\r\n\r\n    // Apply ascension bonuses\r\n    if (this.ascensionSystem) {\r\n      multiplier *= this.ascensionSystem.getDamageMultiplier(state);\r\n      multiplier *= this.ascensionSystem.getPointsMultiplier(state);\r\n    }\r\n\r\n    return multiplier;\r\n  }\r\n\r\n  getCritChance(state: GameState): number {\r\n    this.updateSubUpgradesFromState(state);\r\n    let chance = 2 + (state.critChanceLevel * 0.5); // Base 2% + 0.5% per level\r\n\r\n    // Lucky dice: +5%\r\n    if (state.subUpgrades['lucky_dice']) {\r\n      chance += 5;\r\n    }\r\n\r\n    // Dragon egg: +10%\r\n    if (state.subUpgrades['dragon_egg']) {\r\n      chance += 10;\r\n    }\r\n\r\n    // Quantum entanglement: +8%\r\n    if (state.subUpgrades['quantum_entanglement']) {\r\n      chance += 8;\r\n    }\r\n\r\n    // Hyper reactor: +5%\r\n    if (state.subUpgrades['hyper_reactor']) {\r\n      chance += 5;\r\n    }\r\n\r\n    // Apply ascension bonuses\r\n    if (this.ascensionSystem) {\r\n      chance += this.ascensionSystem.getCritBonus(state);\r\n    }\r\n\r\n    return Math.min(chance, 75); // Cap at 75%\r\n  }\r\n\r\n  getCritMultiplier(state: GameState): number {\r\n    this.updateSubUpgradesFromState(state);\r\n    let multiplier = 2.0; // Base 2x damage\r\n\r\n    // Rubber duck: +3x\r\n    if (state.subUpgrades['rubber_duck']) {\r\n      multiplier += 3;\r\n    }\r\n\r\n    // Lucky horseshoe: +50%\r\n    if (state.subUpgrades['lucky_horseshoe']) {\r\n      multiplier *= 1.5;\r\n    }\r\n\r\n    // Dragon egg: x2\r\n    if (state.subUpgrades['dragon_egg']) {\r\n      multiplier *= 2;\r\n    }\r\n\r\n    // Reality anchor: x3\r\n    if (state.subUpgrades['reality_anchor']) {\r\n      multiplier *= 3;\r\n    }\r\n\r\n    return multiplier;\r\n  }\r\n\r\n  getPassiveGen(state: GameState): number {\r\n    this.updateSubUpgradesFromState(state);\r\n    // Exponential scaling with level progression\r\n    let gen = state.resourceGenLevel * 10 * Math.pow(1.2, state.resourceGenLevel * 0.5);\r\n\r\n    // Coffee machine: +50/sec\r\n    if (state.subUpgrades['coffee_machine']) {\r\n      gen += 50;\r\n    }\r\n\r\n    // Space pizza: +200/sec\r\n    if (state.subUpgrades['space_pizza']) {\r\n      gen += 200;\r\n    }\r\n\r\n    // Arcade machine: +1000/sec\r\n    if (state.subUpgrades['arcade_machine']) {\r\n      gen += 1000;\r\n    }\r\n\r\n    // Nanobots: +2500/sec\r\n    if (state.subUpgrades['nanobots']) {\r\n      gen += 2500;\r\n    }\r\n\r\n    // Nebula harvester: +5000/sec\r\n    if (state.subUpgrades['nebula_harvester']) {\r\n      gen += 5000;\r\n    }\r\n\r\n    // Philosopher's stone: x5\r\n    if (state.subUpgrades['philosophers_stone']) {\r\n      gen *= 5;\r\n    }\r\n\r\n    // Dark matter engine: x3\r\n    if (state.subUpgrades['dark_matter_engine']) {\r\n      gen *= 3;\r\n    }\r\n\r\n    // Nuclear reactor: +10000/sec\r\n    if (state.subUpgrades['nuclear_reactor']) {\r\n      gen += 10000;\r\n    }\r\n\r\n    // Cosmic battery: x7\r\n    if (state.subUpgrades['cosmic_battery']) {\r\n      gen *= 7;\r\n    }\r\n\r\n    // Answer to everything: x10\r\n    if (state.subUpgrades['answer_to_everything']) {\r\n      gen *= 10;\r\n    }\r\n\r\n    // Apply ascension bonuses\r\n    if (this.ascensionSystem) {\r\n      gen *= this.ascensionSystem.getPassiveMultiplier(state);\r\n    }\r\n\r\n    return gen;\r\n  }\r\n\r\n  getXPMultiplier(state: GameState): number {\r\n    this.updateSubUpgradesFromState(state);\r\n    let multiplier = 1.0 + (state.xpBoostLevel * 0.1); // Base +10% per level\r\n\r\n    // Motivational posters: +25%\r\n    if (state.subUpgrades['motivational_posters']) {\r\n      multiplier *= 1.25;\r\n    }\r\n\r\n    // Time machine: +50%\r\n    if (state.subUpgrades['time_machine']) {\r\n      multiplier *= 1.5;\r\n    }\r\n\r\n    // Stellar forge: +75%\r\n    if (state.subUpgrades['stellar_forge']) {\r\n      multiplier *= 1.75;\r\n    }\r\n\r\n    // Nebula harvester: +50%\r\n    if (state.subUpgrades['nebula_harvester']) {\r\n      multiplier *= 1.50;\r\n    }\r\n\r\n    // Universe map: x3\r\n    if (state.subUpgrades['universe_map']) {\r\n      multiplier *= 3;\r\n    }\r\n\r\n    // Apply ascension bonuses\r\n    if (this.ascensionSystem) {\r\n      multiplier *= this.ascensionSystem.getXPMultiplier(state);\r\n    }\r\n\r\n    return multiplier;\r\n  }\r\n\r\n  getFireCooldown(state: GameState): number {\r\n    this.updateSubUpgradesFromState(state);\r\n    let cooldown = Math.max(\r\n      Math.floor(10000 * Math.pow(0.985, state.attackSpeedLevel)),\r\n      120,\r\n    );\r\n\r\n    // Death pact: +10% speed = 0.9x cooldown\r\n    if (state.subUpgrades['death_pact']) {\r\n      cooldown *= 0.9;\r\n    }\r\n\r\n    // Quantum targeting: +20% speed = 0.8x cooldown\r\n    if (state.subUpgrades['quantum_targeting']) {\r\n      cooldown *= 0.8;\r\n    }\r\n\r\n    // Warp core: +50% speed = 0.67x cooldown\r\n    if (state.subUpgrades['warp_core']) {\r\n      cooldown *= 0.67;\r\n    }\r\n\r\n    // AI optimizer: -30% cooldown\r\n    if (state.subUpgrades['ai_optimizer']) {\r\n      cooldown *= 0.7;\r\n    }\r\n\r\n    // Plasma matrix: +15% speed\r\n    if (state.subUpgrades['plasma_matrix']) {\r\n      cooldown *= 0.85;\r\n    }\r\n\r\n    // Holographic decoys: x2 speed = 0.5x cooldown\r\n    if (state.subUpgrades['holographic_decoys']) {\r\n      cooldown *= 0.5;\r\n    }\r\n\r\n    // Temporal acceleration: +100% speed = 0.5x cooldown\r\n    if (state.subUpgrades['temporal_acceleration']) {\r\n      cooldown *= 0.5;\r\n    }\r\n\r\n    // Dark matter engine: +25% speed\r\n    if (state.subUpgrades['dark_matter_engine']) {\r\n      cooldown *= 0.75;\r\n    }\r\n\r\n    // Photon amplifier: +75% speed\r\n    if (state.subUpgrades['photon_amplifier']) {\r\n      cooldown *= 0.57;\r\n    }\r\n\r\n    // Disco ball: +15% speed\r\n    if (state.subUpgrades['disco_ball']) {\r\n      cooldown *= 0.85;\r\n    }\r\n\r\n    // Infinity gauntlet: +40% speed\r\n    if (state.subUpgrades['infinity_gauntlet']) {\r\n      cooldown *= 0.60;\r\n    }\r\n\r\n    // Apply ascension bonuses\r\n    if (this.ascensionSystem) {\r\n      const speedMult = this.ascensionSystem.getSpeedMultiplier(state);\r\n      cooldown /= speedMult;\r\n    }\r\n\r\n    return Math.max(Math.floor(cooldown), 50);\r\n  }\r\n\r\n  getBonusXP(state: GameState): number {\r\n    this.updateSubUpgradesFromState(state);\r\n    let bonus = 1;\r\n\r\n    // Void channeling: double XP\r\n    if (state.subUpgrades['void_channeling']) {\r\n      bonus = 2;\r\n    }\r\n\r\n    // Apply XP multiplier\r\n    bonus *= this.getXPMultiplier(state);\r\n\r\n    return bonus;\r\n  }\r\n\r\n  private formatPassiveGen(value: number): string {\r\n    if (value >= 1e9) return `${(value / 1e9).toFixed(2)}B`;\r\n    if (value >= 1e6) return `${(value / 1e6).toFixed(2)}M`;\r\n    if (value >= 1e3) return `${(value / 1e3).toFixed(1)}K`;\r\n    return value.toFixed(1);\r\n  }\r\n}\r\n","export class AutoFireSystem {\r\n  private shipTimers: number[] = [];\r\n\r\n  setShipCount(count: number): void {\r\n    while (this.shipTimers.length < count) {\r\n      // Add random initial delay to prevent synchronized firing\r\n      // Use a reasonable delay that works for most cooldown times\r\n      const randomDelay = Math.random() * 0.3; // 0-0.3 seconds random delay\r\n      this.shipTimers.push(randomDelay);\r\n    }\r\n    while (this.shipTimers.length > count) {\r\n      this.shipTimers.pop();\r\n    }\r\n  }\r\n\r\n  update(\r\n    dt: number,\r\n    autoFireUnlocked: boolean,\r\n    cooldownMs: number,\r\n    onFire: (shipIndex: number) => void,\r\n  ): void {\r\n    if (!autoFireUnlocked) return;\r\n\r\n    const cooldownSec = cooldownMs / 1000;\r\n\r\n    for (let i = 0; i < this.shipTimers.length; i++) {\r\n      this.shipTimers[i]! += dt;\r\n\r\n      if (this.shipTimers[i]! >= cooldownSec) {\r\n        this.shipTimers[i]! = 0;\r\n        onFire(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  reset(): void {\r\n    // Reset with random delays to prevent synchronized firing\r\n    this.shipTimers = this.shipTimers.map(() => Math.random() * 0.5);\r\n  }\r\n\r\n  staggerExistingShips(): void {\r\n    // Add random delays to all existing ships to prevent synchronized firing\r\n    this.shipTimers = this.shipTimers.map(() => Math.random() * 0.5);\r\n  }\r\n}\r\n\r\n","import type { Achievement, GameState } from '../types';\r\n\r\nexport class AchievementSystem {\r\n  private achievements: Achievement[] = [];\r\n  private onUnlockCallback?: (achievement: Achievement) => void;\r\n\r\n  constructor() {\r\n    this.initializeAchievements();\r\n  }\r\n\r\n  private initializeAchievements(): void {\r\n    this.achievements = [\r\n      // === COMBAT ACHIEVEMENTS ===\r\n      {\r\n        id: 'first_click',\r\n        name: 'First Contact',\r\n        description: 'Click an alien for the first time',\r\n        icon: '👆',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalClicks >= 1,\r\n      },\r\n      {\r\n        id: 'click_master',\r\n        name: 'Click Master',\r\n        description: 'Click 100 times',\r\n        icon: '🖱️',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalClicks >= 100,\r\n      },\r\n      {\r\n        id: 'click_legend',\r\n        name: 'Click Legend',\r\n        description: 'Click 1,000 times',\r\n        icon: '⚡',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalClicks >= 1000,\r\n      },\r\n      {\r\n        id: 'click_god',\r\n        name: 'Click God',\r\n        description: 'Click 10,000 times',\r\n        icon: '👑',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalClicks >= 10000,\r\n      },\r\n      {\r\n        id: 'click_transcendent',\r\n        name: 'Transcendent Clicker',\r\n        description: 'Click 50,000 times',\r\n        icon: '🌟',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalClicks >= 50000,\r\n      },\r\n      {\r\n        id: 'first_blood',\r\n        name: 'First Blood',\r\n        description: 'Destroy your first alien',\r\n        icon: '💥',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.aliensKilled >= 1,\r\n      },\r\n      {\r\n        id: 'alien_hunter',\r\n        name: 'Alien Hunter',\r\n        description: 'Destroy 50 aliens',\r\n        icon: '🎯',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.aliensKilled >= 50,\r\n      },\r\n      {\r\n        id: 'alien_slayer',\r\n        name: 'Alien Slayer',\r\n        description: 'Destroy 250 aliens',\r\n        icon: '⚔️',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.aliensKilled >= 250,\r\n      },\r\n      {\r\n        id: 'alien_destroyer',\r\n        name: 'Alien Destroyer',\r\n        description: 'Destroy 1,000 aliens',\r\n        icon: '🔥',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.aliensKilled >= 1000,\r\n      },\r\n      {\r\n        id: 'alien_annihilator',\r\n        name: 'Alien Annihilator',\r\n        description: 'Destroy 5,000 aliens',\r\n        icon: '💀',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.aliensKilled >= 5000,\r\n      },\r\n      {\r\n        id: 'alien_apocalypse',\r\n        name: 'Alien Apocalypse',\r\n        description: 'Destroy 10,000 aliens',\r\n        icon: '☠️',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.aliensKilled >= 10000,\r\n      },\r\n      {\r\n        id: 'damage_dealer',\r\n        name: 'Damage Dealer',\r\n        description: 'Deal 10,000 total damage',\r\n        icon: '💪',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalDamage >= 10000,\r\n      },\r\n      {\r\n        id: 'damage_master',\r\n        name: 'Damage Master',\r\n        description: 'Deal 100,000 total damage',\r\n        icon: '🔨',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalDamage >= 100000,\r\n      },\r\n      {\r\n        id: 'damage_overlord',\r\n        name: 'Damage Overlord',\r\n        description: 'Deal 1,000,000 total damage',\r\n        icon: '⚡',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalDamage >= 1000000,\r\n      },\r\n      {\r\n        id: 'damage_deity',\r\n        name: 'Damage Deity',\r\n        description: 'Deal 100,000,000 total damage',\r\n        icon: '🌩️',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalDamage >= 100000000,\r\n      },\r\n      {\r\n        id: 'damage_universe',\r\n        name: 'Universe Destroyer',\r\n        description: 'Deal 1,000,000,000 total damage',\r\n        icon: '💫',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalDamage >= 1000000000,\r\n      },\r\n      {\r\n        id: 'boss_slayer',\r\n        name: 'Boss Slayer',\r\n        description: 'Defeat your first boss',\r\n        icon: '👑',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.bossesKilled >= 1,\r\n      },\r\n      {\r\n        id: 'boss_hunter',\r\n        name: 'Boss Hunter',\r\n        description: 'Defeat 10 bosses',\r\n        icon: '👹',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.bossesKilled >= 10,\r\n      },\r\n      {\r\n        id: 'boss_master',\r\n        name: 'Boss Master',\r\n        description: 'Defeat 50 bosses',\r\n        icon: '🐉',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.bossesKilled >= 50,\r\n      },\r\n      {\r\n        id: 'boss_annihilator',\r\n        name: 'Boss Annihilator',\r\n        description: 'Defeat 100 bosses',\r\n        icon: '👾',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.bossesKilled >= 100,\r\n      },\r\n      {\r\n        id: 'boss_obliterator',\r\n        name: 'Boss Obliterator',\r\n        description: 'Defeat 200 bosses',\r\n        icon: '🌠',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.bossesKilled >= 200,\r\n      },\r\n      {\r\n        id: 'alien_extinction',\r\n        name: 'Alien Extinction',\r\n        description: 'Destroy 25,000 aliens',\r\n        icon: '🌪️',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.aliensKilled >= 25000,\r\n      },\r\n      {\r\n        id: 'damage_omnipotent',\r\n        name: 'Omnipotent Destroyer',\r\n        description: 'Deal 10,000,000,000 total damage',\r\n        icon: '🌌',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalDamage >= 10000000000,\r\n      },\r\n\r\n      // === CRITICAL HIT ACHIEVEMENTS ===\r\n      {\r\n        id: 'first_crit',\r\n        name: 'Lucky Shot',\r\n        description: 'Land your first critical hit',\r\n        icon: '✨',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.criticalHits >= 1,\r\n      },\r\n      {\r\n        id: 'crit_hunter',\r\n        name: 'Crit Hunter',\r\n        description: 'Land 100 critical hits',\r\n        icon: '💎',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.criticalHits >= 100,\r\n      },\r\n      {\r\n        id: 'crit_master',\r\n        name: 'Crit Master',\r\n        description: 'Land 1,000 critical hits',\r\n        icon: '💥',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.criticalHits >= 1000,\r\n      },\r\n      {\r\n        id: 'crit_legend',\r\n        name: 'Crit Legend',\r\n        description: 'Land 10,000 critical hits',\r\n        icon: '⭐',\r\n        category: 'combat',\r\n        unlocked: false,\r\n        check: (state) => state.stats.criticalHits >= 10000,\r\n      },\r\n\r\n      // === PROGRESSION ACHIEVEMENTS ===\r\n      {\r\n        id: 'level_5',\r\n        name: 'Novice',\r\n        description: 'Reach level 5',\r\n        icon: '🌟',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 5,\r\n      },\r\n      {\r\n        id: 'level_10',\r\n        name: 'Apprentice',\r\n        description: 'Reach level 10',\r\n        icon: '✨',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 10,\r\n      },\r\n      {\r\n        id: 'level_25',\r\n        name: 'Journeyman',\r\n        description: 'Reach level 25',\r\n        icon: '💫',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 25,\r\n      },\r\n      {\r\n        id: 'level_50',\r\n        name: 'Expert',\r\n        description: 'Reach level 50',\r\n        icon: '🌠',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 50,\r\n      },\r\n      {\r\n        id: 'level_60',\r\n        name: 'Veteran',\r\n        description: 'Reach level 60',\r\n        icon: '🎖️',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 60,\r\n      },\r\n      {\r\n        id: 'level_65',\r\n        name: 'Elite',\r\n        description: 'Reach level 65',\r\n        icon: '💠',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 65,\r\n      },\r\n      {\r\n        id: 'level_70',\r\n        name: 'Champion',\r\n        description: 'Reach level 70',\r\n        icon: '🔱',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 70,\r\n      },\r\n      {\r\n        id: 'level_75',\r\n        name: 'Master',\r\n        description: 'Reach level 75',\r\n        icon: '⭐',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 75,\r\n      },\r\n      {\r\n        id: 'level_80',\r\n        name: 'Grandmaster',\r\n        description: 'Reach level 80',\r\n        icon: '💎',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 80,\r\n      },\r\n      {\r\n        id: 'level_85',\r\n        name: 'Titan',\r\n        description: 'Reach level 85',\r\n        icon: '⚡',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 85,\r\n      },\r\n      {\r\n        id: 'level_90',\r\n        name: 'Demigod',\r\n        description: 'Reach level 90',\r\n        icon: '✨',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 90,\r\n      },\r\n      {\r\n        id: 'level_95',\r\n        name: 'Immortal',\r\n        description: 'Reach level 95',\r\n        icon: '🌟',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 95,\r\n      },\r\n      {\r\n        id: 'level_100',\r\n        name: 'Legendary',\r\n        description: 'Reach level 100',\r\n        icon: '🏆',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 100,\r\n      },\r\n      {\r\n        id: 'level_150',\r\n        name: 'Transcendent',\r\n        description: 'Reach level 150',\r\n        icon: '👑',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 150,\r\n      },\r\n      {\r\n        id: 'level_200',\r\n        name: 'Ascended',\r\n        description: 'Reach level 200',\r\n        icon: '🌌',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.level >= 200,\r\n      },\r\n\r\n      // === COLLECTION ACHIEVEMENTS (Ships) ===\r\n      {\r\n        id: 'first_ship',\r\n        name: 'Fleet Commander',\r\n        description: 'Recruit your first additional ship',\r\n        icon: '🚀',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.shipsCount >= 2,\r\n      },\r\n      {\r\n        id: 'small_fleet',\r\n        name: 'Small Fleet',\r\n        description: 'Command 5 ships',\r\n        icon: '🛸',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.shipsCount >= 5,\r\n      },\r\n      {\r\n        id: 'armada',\r\n        name: 'Armada',\r\n        description: 'Command 10 ships',\r\n        icon: '🌌',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.shipsCount >= 10,\r\n      },\r\n      {\r\n        id: 'space_force',\r\n        name: 'Space Force',\r\n        description: 'Command 20 ships',\r\n        icon: '🌠',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.shipsCount >= 20,\r\n      },\r\n      {\r\n        id: 'galactic_empire',\r\n        name: 'Galactic Empire',\r\n        description: 'Command 30 ships',\r\n        icon: '👑',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.shipsCount >= 30,\r\n      },\r\n      {\r\n        id: 'armada_supreme',\r\n        name: 'Supreme Armada',\r\n        description: 'Command 50 ships',\r\n        icon: '💫',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.shipsCount >= 50,\r\n      },\r\n\r\n      // === UPGRADE ACHIEVEMENTS ===\r\n      {\r\n        id: 'first_upgrade',\r\n        name: 'Innovator',\r\n        description: 'Purchase your first upgrade',\r\n        icon: '🔧',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalUpgrades >= 1,\r\n      },\r\n      {\r\n        id: 'upgrade_enthusiast',\r\n        name: 'Upgrade Enthusiast',\r\n        description: 'Purchase 25 upgrades',\r\n        icon: '⚙️',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalUpgrades >= 25,\r\n      },\r\n      {\r\n        id: 'upgrade_master',\r\n        name: 'Upgrade Master',\r\n        description: 'Purchase 100 upgrades',\r\n        icon: '🔩',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalUpgrades >= 100,\r\n      },\r\n      {\r\n        id: 'upgrade_legend',\r\n        name: 'Upgrade Legend',\r\n        description: 'Purchase 500 upgrades',\r\n        icon: '🛠️',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalUpgrades >= 500,\r\n      },\r\n      {\r\n        id: 'upgrade_deity',\r\n        name: 'Upgrade Deity',\r\n        description: 'Purchase 1,000 upgrades',\r\n        icon: '🏭',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalUpgrades >= 1000,\r\n      },\r\n      {\r\n        id: 'first_subupgrade',\r\n        name: 'Researcher',\r\n        description: 'Unlock your first special technology',\r\n        icon: '🔬',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalSubUpgrades >= 1,\r\n      },\r\n      {\r\n        id: 'tech_collector',\r\n        name: 'Tech Collector',\r\n        description: 'Unlock 5 special technologies',\r\n        icon: '📡',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalSubUpgrades >= 5,\r\n      },\r\n      {\r\n        id: 'tech_master',\r\n        name: 'Tech Master',\r\n        description: 'Unlock 10 special technologies',\r\n        icon: '🛰️',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalSubUpgrades >= 10,\r\n      },\r\n      {\r\n        id: 'tech_legend',\r\n        name: 'Tech Legend',\r\n        description: 'Unlock 20 special technologies',\r\n        icon: '🔭',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalSubUpgrades >= 20,\r\n      },\r\n      {\r\n        id: 'tech_god',\r\n        name: 'Technology God',\r\n        description: 'Unlock all special technologies',\r\n        icon: '🌐',\r\n        category: 'collection',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalSubUpgrades >= 33,\r\n      },\r\n\r\n      // === WEALTH ACHIEVEMENTS ===\r\n      {\r\n        id: 'first_thousand',\r\n        name: 'Starter Capital',\r\n        description: 'Accumulate 1,000 points',\r\n        icon: '💰',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.points >= 1000,\r\n      },\r\n      {\r\n        id: 'ten_thousand',\r\n        name: 'Entrepreneur',\r\n        description: 'Accumulate 10,000 points',\r\n        icon: '💎',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.points >= 10000,\r\n      },\r\n      {\r\n        id: 'hundred_thousand',\r\n        name: 'Wealthy',\r\n        description: 'Accumulate 100,000 points',\r\n        icon: '💵',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.points >= 100000,\r\n      },\r\n      {\r\n        id: 'million',\r\n        name: 'Millionaire',\r\n        description: 'Accumulate 1,000,000 points',\r\n        icon: '🤑',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.points >= 1000000,\r\n      },\r\n      {\r\n        id: 'ten_million',\r\n        name: 'Tycoon',\r\n        description: 'Accumulate 10,000,000 points',\r\n        icon: '👑',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.points >= 10000000,\r\n      },\r\n      {\r\n        id: 'hundred_million',\r\n        name: 'Magnate',\r\n        description: 'Accumulate 100,000,000 points',\r\n        icon: '💫',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.points >= 100000000,\r\n      },\r\n      {\r\n        id: 'billion',\r\n        name: 'Billionaire',\r\n        description: 'Accumulate 1,000,000,000 points',\r\n        icon: '🌟',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.points >= 1000000000,\r\n      },\r\n\r\n      // === TIME-BASED ACHIEVEMENTS ===\r\n      {\r\n        id: 'five_minutes',\r\n        name: 'Getting Started',\r\n        description: 'Play for 5 minutes',\r\n        icon: '⏱️',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.stats.playTime >= 300,\r\n      },\r\n      {\r\n        id: 'thirty_minutes',\r\n        name: 'Committed',\r\n        description: 'Play for 30 minutes',\r\n        icon: '⏰',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.stats.playTime >= 1800,\r\n      },\r\n      {\r\n        id: 'one_hour',\r\n        name: 'Dedicated',\r\n        description: 'Play for 1 hour',\r\n        icon: '🕐',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.stats.playTime >= 3600,\r\n      },\r\n      {\r\n        id: 'three_hours',\r\n        name: 'Addicted',\r\n        description: 'Play for 3 hours',\r\n        icon: '⌚',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.stats.playTime >= 10800,\r\n      },\r\n      {\r\n        id: 'ten_hours',\r\n        name: 'Obsessed',\r\n        description: 'Play for 10 hours',\r\n        icon: '🕰️',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.stats.playTime >= 36000,\r\n      },\r\n      {\r\n        id: 'one_day',\r\n        name: 'No Life',\r\n        description: 'Play for 24 hours (total)',\r\n        icon: '📅',\r\n        category: 'progression',\r\n        unlocked: false,\r\n        check: (state) => state.stats.playTime >= 86400,\r\n      },\r\n\r\n      // === MASTERY ACHIEVEMENTS (specific upgrade levels) ===\r\n      {\r\n        id: 'speed_demon',\r\n        name: 'Speed Demon',\r\n        description: 'Reach Attack Speed level 20',\r\n        icon: '💨',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.attackSpeedLevel >= 20,\r\n      },\r\n      {\r\n        id: 'speed_god',\r\n        name: 'Speed God',\r\n        description: 'Reach Attack Speed level 50',\r\n        icon: '⚡',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.attackSpeedLevel >= 50,\r\n      },\r\n      {\r\n        id: 'damage_king',\r\n        name: 'Damage King',\r\n        description: 'Reach Damage Amplifier level 20',\r\n        icon: '👑',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.pointMultiplierLevel >= 20,\r\n      },\r\n      {\r\n        id: 'damage_emperor',\r\n        name: 'Damage Emperor',\r\n        description: 'Reach Damage Amplifier level 50',\r\n        icon: '🔥',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.pointMultiplierLevel >= 50,\r\n      },\r\n      {\r\n        id: 'crit_specialist',\r\n        name: 'Crit Specialist',\r\n        description: 'Reach Critical Strike level 20',\r\n        icon: '✨',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.critChanceLevel >= 20,\r\n      },\r\n      {\r\n        id: 'passive_master',\r\n        name: 'Passive Master',\r\n        description: 'Reach Passive Income level 30',\r\n        icon: '🏭',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.resourceGenLevel >= 30,\r\n      },\r\n      {\r\n        id: 'scholar',\r\n        name: 'Scholar',\r\n        description: 'Reach Knowledge Core level 25',\r\n        icon: '📚',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.xpBoostLevel >= 25,\r\n      },\r\n      {\r\n        id: 'balanced',\r\n        name: 'Balanced',\r\n        description: 'Have all main upgrades at level 10 or higher',\r\n        icon: '⚖️',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => \r\n          state.shipsCount >= 10 && \r\n          state.attackSpeedLevel >= 10 && \r\n          state.pointMultiplierLevel >= 10 &&\r\n          state.critChanceLevel >= 10 &&\r\n          state.resourceGenLevel >= 10 &&\r\n          state.xpBoostLevel >= 10,\r\n      },\r\n      {\r\n        id: 'well_rounded',\r\n        name: 'Well Rounded',\r\n        description: 'Have all main upgrades at level 25 or higher',\r\n        icon: '🎯',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => \r\n          state.shipsCount >= 25 && \r\n          state.attackSpeedLevel >= 25 && \r\n          state.pointMultiplierLevel >= 25 &&\r\n          state.critChanceLevel >= 25 &&\r\n          state.resourceGenLevel >= 25 &&\r\n          state.xpBoostLevel >= 25,\r\n      },\r\n      {\r\n        id: 'ultimate_power',\r\n        name: 'Ultimate Power',\r\n        description: 'Have all main upgrades at level 50 or higher',\r\n        icon: '💥',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => \r\n          state.shipsCount >= 50 && \r\n          state.attackSpeedLevel >= 50 && \r\n          state.pointMultiplierLevel >= 50 &&\r\n          state.critChanceLevel >= 50 &&\r\n          state.resourceGenLevel >= 50 &&\r\n          state.xpBoostLevel >= 50,\r\n      },\r\n      {\r\n        id: 'mega_fleet',\r\n        name: 'Mega Fleet Commander',\r\n        description: 'Command 75 ships',\r\n        icon: '🚁',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.shipsCount >= 75,\r\n      },\r\n      {\r\n        id: 'ultra_speed',\r\n        name: 'Ultra Speed',\r\n        description: 'Reach Attack Speed level 75',\r\n        icon: '💫',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.attackSpeedLevel >= 75,\r\n      },\r\n      {\r\n        id: 'damage_cosmic',\r\n        name: 'Cosmic Damage',\r\n        description: 'Reach Damage Amplifier level 75',\r\n        icon: '🔆',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.pointMultiplierLevel >= 75,\r\n      },\r\n      {\r\n        id: 'crit_god',\r\n        name: 'Critical God',\r\n        description: 'Reach Critical Strike level 40',\r\n        icon: '⚡',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.critChanceLevel >= 40,\r\n      },\r\n      {\r\n        id: 'passive_overlord',\r\n        name: 'Passive Overlord',\r\n        description: 'Reach Passive Income level 60',\r\n        icon: '🏦',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.resourceGenLevel >= 60,\r\n      },\r\n      {\r\n        id: 'knowledge_deity',\r\n        name: 'Knowledge Deity',\r\n        description: 'Reach Knowledge Core level 50',\r\n        icon: '🧠',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.xpBoostLevel >= 50,\r\n      },\r\n      {\r\n        id: 'super_rich',\r\n        name: 'Super Rich',\r\n        description: 'Accumulate 10,000,000,000 points',\r\n        icon: '🏰',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.points >= 10000000000,\r\n      },\r\n      {\r\n        id: 'ultra_rich',\r\n        name: 'Ultra Rich',\r\n        description: 'Accumulate 100,000,000,000 points',\r\n        icon: '🌠',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.points >= 100000000000,\r\n      },\r\n      {\r\n        id: 'click_maniac',\r\n        name: 'Click Maniac',\r\n        description: 'Click 100,000 times',\r\n        icon: '🔥',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.stats.totalClicks >= 100000,\r\n      },\r\n      {\r\n        id: 'crit_storm',\r\n        name: 'Critical Storm',\r\n        description: 'Land 50,000 critical hits',\r\n        icon: '⛈️',\r\n        category: 'mastery',\r\n        unlocked: false,\r\n        check: (state) => state.stats.criticalHits >= 50000,\r\n      },\r\n\r\n      // === SECRET ACHIEVEMENTS ===\r\n      {\r\n        id: 'secret_patience',\r\n        name: 'Patience is a Virtue',\r\n        description: 'Wait without clicking for 30 seconds',\r\n        icon: '🧘',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        hidden: true,\r\n        check: (state) => state.stats.totalClicks === 0 && state.stats.playTime >= 30,\r\n      },\r\n      {\r\n        id: 'secret_speed',\r\n        name: 'Speed Clicker',\r\n        description: 'Click 100 times in the first minute',\r\n        icon: '💨',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        hidden: true,\r\n        check: (state) => state.stats.totalClicks >= 100 && state.stats.playTime <= 60,\r\n      },\r\n      {\r\n        id: 'secret_cosmic',\r\n        name: 'Cosmic Ascension',\r\n        description: 'Unlock the Cosmic Ascension Protocol',\r\n        icon: '🌌',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['cosmic_ascension'] === true,\r\n      },\r\n      {\r\n        id: 'secret_singularity',\r\n        name: 'Singularity',\r\n        description: 'Unlock the Singularity Power Core',\r\n        icon: '⚫',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['singularity_core'] === true,\r\n      },\r\n      {\r\n        id: 'secret_meaning',\r\n        name: 'The Meaning of Life',\r\n        description: 'Unlock the Meaning of Life upgrade',\r\n        icon: '🔮',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['meaning_of_life'] === true,\r\n      },\r\n      {\r\n        id: 'secret_perfect',\r\n        name: 'Perfection',\r\n        description: 'Unlock all special technologies',\r\n        icon: '✨',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        hidden: true,\r\n        check: (state) => state.stats.totalSubUpgrades >= 33,\r\n      },\r\n      {\r\n        id: 'secret_coffee',\r\n        name: 'Caffeine Addict',\r\n        description: 'Unlock the Crew Coffee Machine',\r\n        icon: '☕',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['coffee_machine'] === true,\r\n      },\r\n      {\r\n        id: 'secret_answer',\r\n        name: '42',\r\n        description: 'Unlock the Answer to Everything',\r\n        icon: '4️⃣2️⃣',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['answer_to_everything'] === true,\r\n      },\r\n      {\r\n        id: 'secret_dragon',\r\n        name: 'Dragon Tamer',\r\n        description: 'Unlock the Dragon Egg',\r\n        icon: '🥚',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['dragon_egg'] === true,\r\n      },\r\n      {\r\n        id: 'secret_gauntlet',\r\n        name: 'Perfectly Balanced',\r\n        description: 'Unlock the Infinity Gauntlet (Replica)',\r\n        icon: '💍',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['infinity_gauntlet'] === true,\r\n      },\r\n      {\r\n        id: 'secret_plasma',\r\n        name: 'Plasma Master',\r\n        description: 'Unlock the Plasma Energy Matrix',\r\n        icon: '⚛️',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['plasma_matrix'] === true,\r\n      },\r\n      {\r\n        id: 'secret_temporal',\r\n        name: 'Time Lord',\r\n        description: 'Unlock Temporal Acceleration Field',\r\n        icon: '⏰',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['temporal_acceleration'] === true,\r\n      },\r\n      {\r\n        id: 'secret_quantum',\r\n        name: 'Quantum Physicist',\r\n        description: 'Unlock Quantum Entanglement Core',\r\n        icon: '🔬',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['quantum_entanglement'] === true,\r\n      },\r\n      {\r\n        id: 'secret_dark_matter',\r\n        name: 'Dark Matter Harvester',\r\n        description: 'Unlock Dark Matter Engine',\r\n        icon: '🌑',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['dark_matter_engine'] === true,\r\n      },\r\n      {\r\n        id: 'secret_hyper',\r\n        name: 'Hyper-Dimensional',\r\n        description: 'Unlock Hyper-Dimensional Reactor',\r\n        icon: '🔮',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['hyper_reactor'] === true,\r\n      },\r\n      {\r\n        id: 'secret_reality',\r\n        name: 'Reality Bender',\r\n        description: 'Unlock Reality Anchor',\r\n        icon: '🌀',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['reality_anchor'] === true,\r\n      },\r\n      {\r\n        id: 'secret_nanobots',\r\n        name: 'Nanotech Engineer',\r\n        description: 'Unlock Self-Replicating Nanobots',\r\n        icon: '🤖',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['nanobots'] === true,\r\n      },\r\n      {\r\n        id: 'secret_hologram',\r\n        name: 'Master of Illusion',\r\n        description: 'Unlock Holographic Decoy System',\r\n        icon: '👻',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['holographic_decoys'] === true,\r\n      },\r\n      {\r\n        id: 'secret_photon',\r\n        name: 'Light Speed Master',\r\n        description: 'Unlock Photon Wave Amplifier',\r\n        icon: '💡',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['photon_amplifier'] === true,\r\n      },\r\n      {\r\n        id: 'secret_stellar',\r\n        name: 'Stellar Engineer',\r\n        description: 'Unlock Stellar Forge',\r\n        icon: '🌟',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['stellar_forge'] === true,\r\n      },\r\n      {\r\n        id: 'secret_nebula',\r\n        name: 'Nebula Harvester',\r\n        description: 'Unlock Nebula Energy Harvester',\r\n        icon: '🌌',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['nebula_harvester'] === true,\r\n      },\r\n      {\r\n        id: 'secret_battery',\r\n        name: 'Cosmic Energy Master',\r\n        description: 'Unlock Cosmic Energy Battery',\r\n        icon: '🔋',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        check: (state) => state.subUpgrades['cosmic_battery'] === true,\r\n      },\r\n      {\r\n        id: 'secret_tech_master_v2',\r\n        name: 'Technology Master V2',\r\n        description: 'Unlock 40 special technologies',\r\n        icon: '🛸',\r\n        category: 'secret',\r\n        unlocked: false,\r\n        hidden: true,\r\n        check: (state) => state.stats.totalSubUpgrades >= 40,\r\n      },\r\n    ];\r\n  }\r\n\r\n  setOnUnlock(callback: (achievement: Achievement) => void): void {\r\n    this.onUnlockCallback = callback;\r\n  }\r\n\r\n  checkAchievements(state: GameState): void {\r\n    for (const achievement of this.achievements) {\r\n      if (!achievement.unlocked && achievement.check(state)) {\r\n        achievement.unlocked = true;\r\n        state.achievements[achievement.id] = true;\r\n        if (this.onUnlockCallback) {\r\n          this.onUnlockCallback(achievement);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateFromState(state: GameState): void {\r\n    for (const achievement of this.achievements) {\r\n      achievement.unlocked = state.achievements[achievement.id] ?? false;\r\n    }\r\n  }\r\n\r\n  getAchievements(): Achievement[] {\r\n    return this.achievements;\r\n  }\r\n\r\n  getUnlockedCount(): number {\r\n    return this.achievements.filter(a => a.unlocked).length;\r\n  }\r\n\r\n  getTotalCount(): number {\r\n    return this.achievements.length;\r\n  }\r\n\r\n  getProgress(): number {\r\n    return (this.getUnlockedCount() / this.getTotalCount()) * 100;\r\n  }\r\n}\r\n","import type { GameState } from '../types';\r\n\r\nexport interface AscensionUpgrade {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  cost: number;\r\n  maxLevel: number;\r\n  getCurrentLevel: (state: GameState) => number;\r\n  effect: string;\r\n}\r\n\r\nexport class AscensionSystem {\r\n  private ascensionUpgrades: AscensionUpgrade[] = [];\r\n\r\n  constructor() {\r\n    this.initializeUpgrades();\r\n  }\r\n\r\n  private initializeUpgrades(): void {\r\n    this.ascensionUpgrades = [\r\n      {\r\n        id: 'prestige_damage',\r\n        name: 'Eternal Power',\r\n        description: 'Permanently increase all damage',\r\n        cost: 1,\r\n        maxLevel: 50,\r\n        getCurrentLevel: (state) => state.prestigeUpgrades?.prestige_damage ?? 0,\r\n        effect: '+10% damage per level',\r\n      },\r\n      {\r\n        id: 'prestige_points',\r\n        name: 'Cosmic Fortune',\r\n        description: 'Permanently increase point gains',\r\n        cost: 1,\r\n        maxLevel: 50,\r\n        getCurrentLevel: (state) => state.prestigeUpgrades?.prestige_points ?? 0,\r\n        effect: '+15% points per level',\r\n      },\r\n      {\r\n        id: 'prestige_xp',\r\n        name: 'Ancient Wisdom',\r\n        description: 'Permanently increase XP gains',\r\n        cost: 1,\r\n        maxLevel: 50,\r\n        getCurrentLevel: (state) => state.prestigeUpgrades?.prestige_xp ?? 0,\r\n        effect: '+20% XP per level',\r\n      },\r\n      {\r\n        id: 'prestige_crit',\r\n        name: 'Lucky Stars',\r\n        description: 'Permanently increase critical hit chance',\r\n        cost: 2,\r\n        maxLevel: 25,\r\n        getCurrentLevel: (state) => state.prestigeUpgrades?.prestige_crit ?? 0,\r\n        effect: '+2% crit chance per level',\r\n      },\r\n      {\r\n        id: 'prestige_passive',\r\n        name: 'Idle Mastery',\r\n        description: 'Permanently increase passive generation',\r\n        cost: 2,\r\n        maxLevel: 30,\r\n        getCurrentLevel: (state) => state.prestigeUpgrades?.prestige_passive ?? 0,\r\n        effect: '+25% passive per level',\r\n      },\r\n      {\r\n        id: 'prestige_speed',\r\n        name: 'Time Dilation',\r\n        description: 'Permanently increase attack speed',\r\n        cost: 3,\r\n        maxLevel: 20,\r\n        getCurrentLevel: (state) => state.prestigeUpgrades?.prestige_speed ?? 0,\r\n        effect: '+5% attack speed per level',\r\n      },\r\n      {\r\n        id: 'prestige_starting_level',\r\n        name: 'Head Start',\r\n        description: 'Start at a higher level after ascension',\r\n        cost: 5,\r\n        maxLevel: 10,\r\n        getCurrentLevel: (state) => state.prestigeUpgrades?.prestige_starting_level ?? 0,\r\n        effect: 'Start +5 levels per level',\r\n      },\r\n      {\r\n        id: 'prestige_retain_upgrades',\r\n        name: 'Persistent Memory',\r\n        description: 'Retain a percentage of upgrade levels',\r\n        cost: 10,\r\n        maxLevel: 5,\r\n        getCurrentLevel: (state) => state.prestigeUpgrades?.prestige_retain_upgrades ?? 0,\r\n        effect: 'Retain +10% upgrades per level',\r\n      },\r\n    ];\r\n  }\r\n\r\n  getUpgrades(): AscensionUpgrade[] {\r\n    return this.ascensionUpgrades;\r\n  }\r\n\r\n  calculatePrestigePoints(state: GameState): number {\r\n    // Clicker game formula: generous early gains, exponential growth\r\n    // Formula based on level milestones\r\n    if (state.level < 100) return 0;\r\n    \r\n    // Base formula: levels past 100 give prestige points\r\n    // Level 100 = 5 PP, Level 150 = 10 PP, Level 200 = 20 PP\r\n    const levelPast100 = state.level - 100;\r\n    const levelBonus = Math.floor(5 + Math.pow(levelPast100 / 10, 1.5));\r\n    \r\n    // Boss bonus\r\n    const bossBonus = Math.floor(state.stats.bossesKilled / 2);\r\n    \r\n    return Math.max(5, levelBonus + bossBonus);\r\n  }\r\n\r\n  canAscend(state: GameState): boolean {\r\n    // Can ascend once you reach level 100\r\n    return state.level >= 100;\r\n  }\r\n\r\n  getDamageMultiplier(state: GameState): number {\r\n    const level = state.prestigeUpgrades?.prestige_damage ?? 0;\r\n    return 1 + (level * 0.1);\r\n  }\r\n\r\n  getPointsMultiplier(state: GameState): number {\r\n    const level = state.prestigeUpgrades?.prestige_points ?? 0;\r\n    return 1 + (level * 0.15);\r\n  }\r\n\r\n  getXPMultiplier(state: GameState): number {\r\n    const level = state.prestigeUpgrades?.prestige_xp ?? 0;\r\n    return 1 + (level * 0.2);\r\n  }\r\n\r\n  getCritBonus(state: GameState): number {\r\n    const level = state.prestigeUpgrades?.prestige_crit ?? 0;\r\n    return level * 2;\r\n  }\r\n\r\n  getPassiveMultiplier(state: GameState): number {\r\n    const level = state.prestigeUpgrades?.prestige_passive ?? 0;\r\n    return 1 + (level * 0.25);\r\n  }\r\n\r\n  getSpeedMultiplier(state: GameState): number {\r\n    const level = state.prestigeUpgrades?.prestige_speed ?? 0;\r\n    return 1 + (level * 0.05);\r\n  }\r\n\r\n  getStartingLevel(state: GameState): number {\r\n    const level = state.prestigeUpgrades?.prestige_starting_level ?? 0;\r\n    return 1 + (level * 5);\r\n  }\r\n\r\n  getRetainPercentage(state: GameState): number {\r\n    const level = state.prestigeUpgrades?.prestige_retain_upgrades ?? 0;\r\n    return level * 0.1;\r\n  }\r\n\r\n  buyPrestigeUpgrade(state: GameState, upgradeId: string): boolean {\r\n    const upgrade = this.ascensionUpgrades.find(u => u.id === upgradeId);\r\n    if (!upgrade) return false;\r\n\r\n    const currentLevel = upgrade.getCurrentLevel(state);\r\n    if (currentLevel >= upgrade.maxLevel) return false;\r\n\r\n    const cost = upgrade.cost;\r\n    if (state.prestigePoints < cost) return false;\r\n\r\n    // Initialize prestigeUpgrades if needed\r\n    if (!state.prestigeUpgrades) {\r\n      state.prestigeUpgrades = {};\r\n    }\r\n\r\n    state.prestigePoints -= cost;\r\n    state.prestigeUpgrades[upgradeId] = currentLevel + 1;\r\n    \r\n    return true;\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\n\r\nexport interface ParticleConfig {\r\n  x: number;\r\n  y: number;\r\n  vx: number;\r\n  vy: number;\r\n  color: string;\r\n  size: number;\r\n  life: number;\r\n  decay: number;\r\n  glow?: boolean;\r\n}\r\n\r\nexport class Particle {\r\n  public x: number;\r\n  public y: number;\r\n  private vx: number;\r\n  private vy: number;\r\n  private color: string;\r\n  private size: number;\r\n  private life: number;\r\n  private maxLife: number;\r\n  private decay: number;\r\n  private glow: boolean;\r\n\r\n  constructor(config: ParticleConfig) {\r\n    this.x = config.x;\r\n    this.y = config.y;\r\n    this.vx = config.vx;\r\n    this.vy = config.vy;\r\n    this.color = config.color;\r\n    this.size = config.size;\r\n    this.life = config.life;\r\n    this.maxLife = config.life;\r\n    this.decay = config.decay;\r\n    this.glow = config.glow ?? false;\r\n  }\r\n\r\n  update(dt: number): boolean {\r\n    this.x += this.vx * dt;\r\n    this.y += this.vy * dt;\r\n    this.life -= this.decay * dt;\r\n    \r\n    // Apply gravity\r\n    this.vy += 100 * dt;\r\n    \r\n    // Air resistance\r\n    this.vx *= 0.99;\r\n    this.vy *= 0.99;\r\n    \r\n    return this.life <= 0;\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    const alpha = this.life / this.maxLife;\r\n    drawer.setAlpha(alpha);\r\n    \r\n    if (this.glow) {\r\n      drawer.setGlow(this.color, 10);\r\n    }\r\n    \r\n    drawer.setFill(this.color);\r\n    drawer.circle(this.x, this.y, this.size);\r\n    \r\n    if (this.glow) {\r\n      drawer.clearGlow();\r\n    }\r\n    \r\n    drawer.resetAlpha();\r\n  }\r\n}\r\n\r\nexport class ParticleSystem {\r\n  private particles: Particle[] = [];\r\n  private maxParticles = 200; // Limit active particles for performance\r\n\r\n  spawnParticles(config: {\r\n    x: number;\r\n    y: number;\r\n    count: number;\r\n    color?: string;\r\n    spread?: number;\r\n    speed?: number;\r\n    size?: number;\r\n    life?: number;\r\n    glow?: boolean;\r\n  }): void {\r\n    const {\r\n      x,\r\n      y,\r\n      count,\r\n      color = '#fff',\r\n      spread = Math.PI * 2,\r\n      speed = 100,\r\n      size = 3,\r\n      life = 1,\r\n      glow = false,\r\n    } = config;\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      // Don't spawn if we're at max particles\r\n      if (this.particles.length >= this.maxParticles) {\r\n        break;\r\n      }\r\n      \r\n      const angle = (Math.random() * spread) - (spread / 2);\r\n      const velocity = speed * (0.5 + Math.random() * 0.5);\r\n      \r\n      this.particles.push(new Particle({\r\n        x,\r\n        y,\r\n        vx: Math.cos(angle) * velocity,\r\n        vy: Math.sin(angle) * velocity,\r\n        color,\r\n        size: size * (0.5 + Math.random()),\r\n        life,\r\n        decay: 1,\r\n        glow,\r\n      }));\r\n    }\r\n  }\r\n\r\n  spawnExplosion(x: number, y: number, color: string = '#ff0000'): void {\r\n    this.spawnParticles({\r\n      x,\r\n      y,\r\n      count: 30,\r\n      color,\r\n      spread: Math.PI * 2,\r\n      speed: 200,\r\n      size: 4,\r\n      life: 0.8,\r\n      glow: true,\r\n    });\r\n  }\r\n\r\n  spawnTrail(x: number, y: number, color: string = '#ffffff'): void {\r\n    // Reduced trail particles for performance\r\n    this.spawnParticles({\r\n      x,\r\n      y,\r\n      count: 2, // Reduced from 3\r\n      color,\r\n      spread: Math.PI / 4,\r\n      speed: 30,\r\n      size: 2,\r\n      life: 0.4, // Shorter life\r\n      glow: false, // No glow for trails (performance)\r\n    });\r\n  }\r\n\r\n  update(dt: number): void {\r\n    this.particles = this.particles.filter(p => !p.update(dt));\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    for (const particle of this.particles) {\r\n      particle.draw(drawer);\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.particles = [];\r\n  }\r\n}\r\n\r\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\r\nimport type { Draw } from '../render/Draw';\r\n\r\ninterface DamageNumber {\r\n  x: number;\r\n  y: number;\r\n  text: string;\r\n  color: string;\r\n  life: number;\r\n  maxLife: number;\r\n  vy: number;\r\n  isCrit: boolean;\r\n}\r\n\r\nexport class DamageNumberSystem {\r\n  private numbers: DamageNumber[] = [];\r\n  private enabled = true;\r\n  private maxNumbers = 15; // Reduced max for better performance\r\n\r\n  setEnabled(enabled: boolean): void {\r\n    this.enabled = enabled;\r\n  }\r\n\r\n  spawnDamageNumber(x: number, y: number, damage: number, isCrit: boolean = false): void {\r\n    // Don't spawn if disabled (performance)\r\n    if (!this.enabled) return;\r\n    \r\n    // Limit number of active damage numbers\r\n    if (this.numbers.length >= this.maxNumbers) {\r\n      // Remove oldest number\r\n      this.numbers.shift();\r\n    }\r\n    \r\n    const text = this.formatDamage(damage);\r\n    const color = isCrit ? '#ffff00' : '#ffffff';\r\n    \r\n    this.numbers.push({\r\n      x: x + (Math.random() - 0.5) * 40,\r\n      y: y + (Math.random() - 0.5) * 20,\r\n      text,\r\n      color,\r\n      life: 1.0, // Even shorter life\r\n      maxLife: 1.0,\r\n      vy: -120, // Even faster movement\r\n      isCrit,\r\n    });\r\n  }\r\n\r\n  update(dt: number): void {\r\n    for (const num of this.numbers) {\r\n      num.y += num.vy * dt;\r\n      num.vy += 50 * dt; // Gravity\r\n      num.life -= dt;\r\n    }\r\n    \r\n    this.numbers = this.numbers.filter(n => n.life > 0);\r\n  }\r\n\r\n  draw(drawer: Draw): void {\r\n    const ctx = drawer.getContext();\r\n    \r\n    ctx.save();\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    \r\n    for (const num of this.numbers) {\r\n      const alpha = Math.min(1, num.life / 0.4);\r\n      ctx.globalAlpha = alpha;\r\n      \r\n      const fontSize = num.isCrit ? 18 : 14; // Smaller for better performance\r\n      ctx.font = `bold ${fontSize}px monospace`;\r\n      \r\n      // Simple outline (no stroke for performance)\r\n      ctx.fillStyle = '#000';\r\n      ctx.fillText(num.text, num.x - 1, num.y - 1);\r\n      ctx.fillText(num.text, num.x + 1, num.y + 1);\r\n      \r\n      // Text\r\n      ctx.fillStyle = num.color;\r\n      ctx.fillText(num.text, num.x, num.y);\r\n    }\r\n    \r\n    ctx.restore();\r\n  }\r\n\r\n  clear(): void {\r\n    this.numbers = [];\r\n  }\r\n\r\n  private formatDamage(damage: number): string {\r\n    if (damage >= 1e9) return `${(damage / 1e9).toFixed(1)}B`;\r\n    if (damage >= 1e6) return `${(damage / 1e6).toFixed(1)}M`;\r\n    if (damage >= 1e3) return `${(damage / 1e3).toFixed(1)}K`;\r\n    return Math.floor(damage).toString();\r\n  }\r\n}\r\n\r\n","import type { Draw } from '../render/Draw';\r\n\r\nexport class ComboSystem {\r\n  private combo = 0;\r\n  private comboTimer = 0;\r\n  private comboTimeout = 3; // Seconds before combo resets\r\n  private maxCombo = 0;\r\n  private comboAnimationTime = 0;\r\n\r\n  hit(): void {\r\n    this.combo++;\r\n    this.comboTimer = this.comboTimeout;\r\n    this.comboAnimationTime = 0.3;\r\n    \r\n    if (this.combo > this.maxCombo) {\r\n      this.maxCombo = this.combo;\r\n    }\r\n  }\r\n\r\n  miss(): void {\r\n    this.combo = 0;\r\n    this.comboTimer = 0;\r\n  }\r\n\r\n  update(dt: number): void {\r\n    if (this.comboTimer > 0) {\r\n      this.comboTimer -= dt;\r\n      if (this.comboTimer <= 0) {\r\n        this.combo = 0;\r\n      }\r\n    }\r\n    \r\n    if (this.comboAnimationTime > 0) {\r\n      this.comboAnimationTime -= dt;\r\n    }\r\n  }\r\n\r\n  getCombo(): number {\r\n    return this.combo;\r\n  }\r\n\r\n  getMaxCombo(): number {\r\n    return this.maxCombo;\r\n  }\r\n\r\n  getMultiplier(): number {\r\n    if (this.combo < 10) return 1;\r\n    if (this.combo < 25) return 1.1;\r\n    if (this.combo < 50) return 1.25;\r\n    if (this.combo < 100) return 1.5;\r\n    return 2.0;\r\n  }\r\n\r\n  draw(drawer: Draw, canvasWidth: number): void {\r\n    if (this.combo < 5) return; // Don't show combo until at least 5\r\n\r\n    const ctx = drawer.getContext();\r\n    const x = canvasWidth - 150;\r\n    const y = 100;\r\n\r\n    ctx.save();\r\n    \r\n    // Pulse effect on new hit\r\n    const scale = this.comboAnimationTime > 0 \r\n      ? 1 + (this.comboAnimationTime / 0.3) * 0.3 \r\n      : 1;\r\n    \r\n    ctx.translate(x, y);\r\n    ctx.scale(scale, scale);\r\n    ctx.translate(-x, -y);\r\n    \r\n    // Combo background\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n    ctx.fillRect(x - 70, y - 35, 140, 70);\r\n    ctx.strokeStyle = this.getComboColor();\r\n    ctx.lineWidth = 3;\r\n    ctx.strokeRect(x - 70, y - 35, 140, 70);\r\n    \r\n    // Combo number\r\n    ctx.font = 'bold 32px \"Courier New\", monospace';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    \r\n    // Glow\r\n    ctx.shadowColor = this.getComboColor();\r\n    ctx.shadowBlur = 15;\r\n    \r\n    // Text\r\n    ctx.fillStyle = this.getComboColor();\r\n    ctx.fillText(`${this.combo}x`, x, y - 5);\r\n    \r\n    // \"COMBO!\" text\r\n    ctx.font = 'bold 14px \"Courier New\", monospace';\r\n    ctx.shadowBlur = 5;\r\n    ctx.fillText('COMBO!', x, y + 20);\r\n    \r\n    // Multiplier indicator\r\n    const mult = this.getMultiplier();\r\n    if (mult > 1) {\r\n      ctx.font = 'bold 12px \"Courier New\", monospace';\r\n      ctx.fillStyle = '#ffaa00';\r\n      ctx.fillText(`${mult.toFixed(1)}x DMG`, x, y - 25);\r\n    }\r\n    \r\n    // Timeout bar\r\n    const timeoutPercent = this.comboTimer / this.comboTimeout;\r\n    ctx.shadowBlur = 0;\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n    ctx.fillRect(x - 65, y + 30, 130, 4);\r\n    ctx.fillStyle = this.getComboColor();\r\n    ctx.fillRect(x - 65, y + 30, 130 * timeoutPercent, 4);\r\n    \r\n    ctx.restore();\r\n  }\r\n\r\n  private getComboColor(): string {\r\n    if (this.combo >= 100) return '#ff00ff'; // Magenta\r\n    if (this.combo >= 50) return '#ff0000';  // Red\r\n    if (this.combo >= 25) return '#ffaa00';  // Orange\r\n    if (this.combo >= 10) return '#ffff00';  // Yellow\r\n    return '#ffffff'; // White\r\n  }\r\n\r\n  reset(): void {\r\n    this.combo = 0;\r\n    this.comboTimer = 0;\r\n    this.comboAnimationTime = 0;\r\n  }\r\n}\r\n\r\n","export class SoundManager {\r\n  private enabled = true;\r\n  private context: AudioContext | null = null;\r\n  private volume = 0.3;\r\n\r\n  constructor() {\r\n    try {\r\n      this.context = new (window.AudioContext || (window as any).webkitAudioContext)();\r\n    } catch (e) {\r\n      console.warn('Audio not supported');\r\n      this.enabled = false;\r\n    }\r\n  }\r\n\r\n  setEnabled(enabled: boolean): void {\r\n    this.enabled = enabled;\r\n  }\r\n\r\n  isEnabled(): boolean {\r\n    return this.enabled;\r\n  }\r\n\r\n  setVolume(volume: number): void {\r\n    this.volume = Math.max(0, Math.min(1, volume));\r\n  }\r\n\r\n  getVolume(): number {\r\n    return this.volume;\r\n  }\r\n\r\n  private playTone(frequency: number, duration: number, type: OscillatorType = 'sine', volume: number = this.volume): void {\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    const oscillator = this.context.createOscillator();\r\n    const gainNode = this.context.createGain();\r\n\r\n    oscillator.connect(gainNode);\r\n    gainNode.connect(this.context.destination);\r\n\r\n    oscillator.frequency.value = frequency;\r\n    oscillator.type = type;\r\n\r\n    gainNode.gain.setValueAtTime(volume, this.context.currentTime);\r\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + duration);\r\n\r\n    oscillator.start(this.context.currentTime);\r\n    oscillator.stop(this.context.currentTime + duration);\r\n  }\r\n\r\n  playClick(): void {\r\n    // Cookie clicker style \"bonk\" sound\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    const oscillator = this.context.createOscillator();\r\n    const gainNode = this.context.createGain();\r\n\r\n    oscillator.connect(gainNode);\r\n    gainNode.connect(this.context.destination);\r\n\r\n    // Quick descending pitch for \"bonk\" effect\r\n    oscillator.frequency.setValueAtTime(800, this.context.currentTime);\r\n    oscillator.frequency.exponentialRampToValueAtTime(200, this.context.currentTime + 0.08);\r\n    oscillator.type = 'square';\r\n\r\n    gainNode.gain.setValueAtTime(0.25 * this.volume, this.context.currentTime);\r\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + 0.08);\r\n\r\n    oscillator.start(this.context.currentTime);\r\n    oscillator.stop(this.context.currentTime + 0.08);\r\n  }\r\n\r\n  // Crit sounds removed to prevent endgame spam\r\n\r\n  playPurchase(): void {\r\n    // Satisfying \"ka-ching\" purchase sound\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    // Quick ascending notes with more punch\r\n    [523, 659, 784, 1047].forEach((freq, i) => {\r\n      setTimeout(() => {\r\n        this.playTone(freq, 0.12, 'triangle', 0.22 * this.volume);\r\n      }, i * 40);\r\n    });\r\n\r\n    // Add a low \"thump\" at the start\r\n    this.playTone(100, 0.08, 'square', 0.3 * this.volume);\r\n  }\r\n\r\n  playLevelUp(): void {\r\n    // Big satisfying level up fanfare\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    [392, 523, 659, 784, 1047].forEach((freq, i) => {\r\n      setTimeout(() => {\r\n        this.playTone(freq, 0.2, 'triangle', 0.25 * this.volume);\r\n      }, i * 55);\r\n    });\r\n\r\n    // Add bass \"boom\" at the end\r\n    setTimeout(() => {\r\n      this.playTone(98, 0.3, 'sine', 0.35 * this.volume);\r\n    }, 280);\r\n  }\r\n\r\n  playBossAppear(): void {\r\n    // Ominous descending tone\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    const oscillator = this.context.createOscillator();\r\n    const gainNode = this.context.createGain();\r\n\r\n    oscillator.connect(gainNode);\r\n    gainNode.connect(this.context.destination);\r\n\r\n    oscillator.frequency.setValueAtTime(200, this.context.currentTime);\r\n    oscillator.frequency.exponentialRampToValueAtTime(100, this.context.currentTime + 0.5);\r\n    oscillator.type = 'sawtooth';\r\n\r\n    gainNode.gain.setValueAtTime(0.3 * this.volume, this.context.currentTime);\r\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + 0.5);\r\n\r\n    oscillator.start(this.context.currentTime);\r\n    oscillator.stop(this.context.currentTime + 0.5);\r\n  }\r\n\r\n  playBossDefeat(): void {\r\n    // Epic victory\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    [523, 659, 784, 1047].forEach((freq, i) => {\r\n      setTimeout(() => {\r\n        this.playTone(freq, 0.2, 'triangle', 0.25 * this.volume);\r\n      }, i * 80);\r\n    });\r\n  }\r\n\r\n  playCombo(comboLevel: number): void {\r\n    // Satisfying combo \"pop\" that gets higher with combo level\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    const basePitch = 600 + (comboLevel * 30);\r\n    const pitch = Math.min(basePitch, 1500);\r\n\r\n    const oscillator = this.context.createOscillator();\r\n    const gainNode = this.context.createGain();\r\n\r\n    oscillator.connect(gainNode);\r\n    gainNode.connect(this.context.destination);\r\n\r\n    oscillator.frequency.setValueAtTime(pitch, this.context.currentTime);\r\n    oscillator.frequency.exponentialRampToValueAtTime(pitch * 0.5, this.context.currentTime + 0.1);\r\n    oscillator.type = 'square';\r\n\r\n    gainNode.gain.setValueAtTime(0.3 * this.volume, this.context.currentTime);\r\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + 0.1);\r\n\r\n    oscillator.start(this.context.currentTime);\r\n    oscillator.stop(this.context.currentTime + 0.1);\r\n  }\r\n\r\n  playAchievement(): void {\r\n    // Epic achievement fanfare\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    [523, 659, 784, 1047, 1319].forEach((freq, i) => {\r\n      setTimeout(() => {\r\n        this.playTone(freq, 0.18, 'triangle', 0.25 * this.volume);\r\n      }, i * 45);\r\n    });\r\n\r\n    // Add bass \"boom\" for extra impact\r\n    setTimeout(() => {\r\n      this.playTone(130, 0.25, 'sine', 0.4 * this.volume);\r\n    }, 225);\r\n  }\r\n\r\n  playMetronomeTick(): void {\r\n    // Short tick sound for metronome\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    const oscillator = this.context.createOscillator();\r\n    const gainNode = this.context.createGain();\r\n\r\n    oscillator.connect(gainNode);\r\n    gainNode.connect(this.context.destination);\r\n\r\n    oscillator.frequency.setValueAtTime(1200, this.context.currentTime);\r\n    oscillator.type = 'sine';\r\n\r\n    gainNode.gain.setValueAtTime(0.15 * this.volume, this.context.currentTime);\r\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + 0.05);\r\n\r\n    oscillator.start(this.context.currentTime);\r\n    oscillator.stop(this.context.currentTime + 0.05);\r\n  }\r\n\r\n  playPerfectHit(): void {\r\n    // Satisfying \"ding\" for perfect rhythm hit\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    const oscillator = this.context.createOscillator();\r\n    const gainNode = this.context.createGain();\r\n\r\n    oscillator.connect(gainNode);\r\n    gainNode.connect(this.context.destination);\r\n\r\n    oscillator.frequency.setValueAtTime(1500, this.context.currentTime);\r\n    oscillator.frequency.exponentialRampToValueAtTime(2000, this.context.currentTime + 0.1);\r\n    oscillator.type = 'sine';\r\n\r\n    gainNode.gain.setValueAtTime(0.25 * this.volume, this.context.currentTime);\r\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + 0.1);\r\n\r\n    oscillator.start(this.context.currentTime);\r\n    oscillator.stop(this.context.currentTime + 0.1);\r\n  }\r\n\r\n  playMissSound(): void {\r\n    // Disappointing \"buzz\" for missed beat\r\n    if (!this.enabled || !this.context) return;\r\n\r\n    const oscillator = this.context.createOscillator();\r\n    const gainNode = this.context.createGain();\r\n\r\n    oscillator.connect(gainNode);\r\n    gainNode.connect(this.context.destination);\r\n\r\n    oscillator.frequency.setValueAtTime(200, this.context.currentTime);\r\n    oscillator.frequency.exponentialRampToValueAtTime(100, this.context.currentTime + 0.15);\r\n    oscillator.type = 'sawtooth';\r\n\r\n    gainNode.gain.setValueAtTime(0.2 * this.volume, this.context.currentTime);\r\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.context.currentTime + 0.15);\r\n\r\n    oscillator.start(this.context.currentTime);\r\n    oscillator.stop(this.context.currentTime + 0.15);\r\n  }\r\n}\r\n\r\n\r\n","/* eslint-disable @typescript-eslint/no-unsafe-return */\r\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\r\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\r\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\r\nexport class Hud {\r\n  private pointsDisplay: HTMLElement;\r\n  private levelText: HTMLElement;\r\n  private expText: HTMLElement;\r\n  private levelBarFill: HTMLElement;\r\n  private dpsDisplay: HTMLElement | null = null;\r\n  private passiveDisplay: HTMLElement | null = null;\r\n  private critDisplay: HTMLElement | null = null;\r\n  \r\n  private damageHistory: number[] = [];\r\n  private readonly DPS_WINDOW = 5000; // 5 seconds window for DPS calculation\r\n\r\n  constructor() {\r\n    const pointsEl = document.getElementById('points-display');\r\n    if (!pointsEl) throw new Error('Points display element not found');\r\n    this.pointsDisplay = pointsEl;\r\n\r\n    const levelTextEl = document.getElementById('level-text');\r\n    if (!levelTextEl) throw new Error('Level text element not found');\r\n    this.levelText = levelTextEl;\r\n\r\n    const expTextEl = document.getElementById('exp-text');\r\n    if (!expTextEl) throw new Error('Exp text element not found');\r\n    this.expText = expTextEl;\r\n\r\n    const levelBarFillEl = document.getElementById('level-bar-fill');\r\n    if (!levelBarFillEl) throw new Error('Level bar fill element not found');\r\n    this.levelBarFill = levelBarFillEl;\r\n    \r\n    this.createStatsDisplay();\r\n  }\r\n  \r\n  private createStatsDisplay(): void {\r\n    // Create stats container\r\n    const statsContainer = document.createElement('div');\r\n    statsContainer.id = 'stats-display';\r\n    statsContainer.style.cssText = `\r\n      margin-top: 15px;\r\n      background: rgba(0, 0, 0, 0.7);\r\n      padding: 10px;\r\n      border: 2px solid rgba(255, 255, 255, 0.3);\r\n      border-radius: 8px;\r\n      font-size: 14px;\r\n      max-width: 300px;\r\n    `;\r\n    \r\n    // DPS Display\r\n    this.dpsDisplay = document.createElement('div');\r\n    this.dpsDisplay.style.cssText = 'margin-bottom: 5px; color: #ff8888;';\r\n    this.dpsDisplay.textContent = '⚔️ DPS: 0';\r\n    \r\n    // Passive Display\r\n    this.passiveDisplay = document.createElement('div');\r\n    this.passiveDisplay.style.cssText = 'margin-bottom: 5px; color: #88ff88;';\r\n    this.passiveDisplay.textContent = '🏭 Passive: 0/sec';\r\n    \r\n    // Crit Display\r\n    this.critDisplay = document.createElement('div');\r\n    this.critDisplay.style.cssText = 'color: #ffff88;';\r\n    this.critDisplay.textContent = '✨ Crit: 0%';\r\n    \r\n    statsContainer.appendChild(this.dpsDisplay);\r\n    statsContainer.appendChild(this.passiveDisplay);\r\n    statsContainer.appendChild(this.critDisplay);\r\n    \r\n    const hudElement = document.getElementById('hud');\r\n    if (hudElement) {\r\n      hudElement.appendChild(statsContainer);\r\n    }\r\n  }\r\n\r\n  update(points: number): void {\r\n    this.pointsDisplay.textContent = `💰 Points: ${this.formatNumber(points)}`;\r\n  }\r\n  \r\n  updateStats(dps: number, passive: number, critChance: number): void {\r\n    if (this.dpsDisplay) {\r\n      this.dpsDisplay.textContent = `⚔️ DPS: ${this.formatNumber(dps)}`;\r\n    }\r\n    if (this.passiveDisplay) {\r\n      this.passiveDisplay.textContent = `🏭 Passive: ${this.formatNumber(passive)}/sec`;\r\n    }\r\n    if (this.critDisplay) {\r\n      this.critDisplay.textContent = `✨ Crit: ${critChance.toFixed(1)}%`;\r\n    }\r\n  }\r\n  \r\n  recordDamage(amount: number): void {\r\n    const now = Date.now();\r\n    this.damageHistory.push({ damage: amount, time: now } as any);\r\n    \r\n    // Remove old entries outside the DPS window\r\n    this.damageHistory = this.damageHistory.filter(\r\n      (entry: any) => now - entry.time < this.DPS_WINDOW\r\n    );\r\n  }\r\n  \r\n  calculateDPS(): number {\r\n    if (this.damageHistory.length === 0) return 0;\r\n    \r\n    const now = Date.now();\r\n    const windowStart = now - this.DPS_WINDOW;\r\n    const recentDamage = this.damageHistory.filter((entry: any) => entry.time >= windowStart);\r\n    \r\n    if (recentDamage.length === 0) return 0;\r\n    \r\n    const totalDamage = recentDamage.reduce((sum: number, entry: any) => sum + entry.damage, 0);\r\n    const timeSpan = (now - (recentDamage[0] as any).time) / 1000; // Convert to seconds\r\n    \r\n    return timeSpan > 0 ? totalDamage / timeSpan : 0;\r\n  }\r\n\r\n  updateLevel(level: number, experience: number, expToNext: number): void {\r\n    this.levelText.textContent = `⭐ Level ${level}`;\r\n    this.expText.textContent = `${Math.floor(experience)} / ${expToNext}`;\r\n    const percent = Math.min(100, (experience / expToNext) * 100);\r\n    this.levelBarFill.style.width = `${percent}%`;\r\n    \r\n    // Add visual feedback for milestone levels\r\n    if (level % 10 === 0 && level > 0) {\r\n      this.levelText.style.color = '#ffd700';\r\n      this.levelText.style.textShadow = '0 0 10px #ffd700';\r\n    } else if (level % 5 === 0) {\r\n      this.levelText.style.color = '#ffaa00';\r\n      this.levelText.style.textShadow = '0 0 8px #ffaa00';\r\n    } else {\r\n      this.levelText.style.color = '#fff';\r\n      this.levelText.style.textShadow = '0 0 2px rgba(255, 255, 255, 0.8)';\r\n    }\r\n  }\r\n\r\n  private formatNumber(num: number): string {\r\n    if (num >= 1e9) return `${(num / 1e9).toFixed(2)}B`;\r\n    if (num >= 1e6) return `${(num / 1e6).toFixed(2)}M`;\r\n    if (num >= 1e3) return `${(num / 1e3).toFixed(2)}K`;\r\n    return Math.floor(num).toString();\r\n  }\r\n}\r\n\r\n","export class Button {\r\n  private element: HTMLButtonElement;\r\n  private clickHandler: () => void;\r\n  private lastClickTime = 0;\r\n  private clickDelay = 100; // Minimum ms between clicks\r\n\r\n  constructor(text: string, onClick: () => void) {\r\n    this.clickHandler = onClick;\r\n    this.element = document.createElement('button');\r\n    this.element.textContent = text;\r\n    this.element.className = 'shop-button';\r\n    \r\n    // Add throttled click handler\r\n    this.element.addEventListener('click', (e) => {\r\n      e.stopPropagation();\r\n      this.handleClick();\r\n    });\r\n    \r\n    this.element.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Enter' || e.key === ' ') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.handleClick();\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleClick(): void {\r\n    const now = Date.now();\r\n    if (now - this.lastClickTime < this.clickDelay) return;\r\n    if (this.element.disabled) return;\r\n    \r\n    this.lastClickTime = now;\r\n    this.clickHandler();\r\n  }\r\n\r\n  getElement(): HTMLButtonElement {\r\n    return this.element;\r\n  }\r\n\r\n  setEnabled(enabled: boolean): void {\r\n    this.element.disabled = !enabled;\r\n  }\r\n\r\n  setText(text: string): void {\r\n    this.element.textContent = text;\r\n  }\r\n}\r\n\r\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\r\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\r\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\r\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport type { Store } from '../core/Store';\r\nimport type { UpgradeSystem } from '../systems/UpgradeSystem';\r\nimport { Button } from './Button';\r\n\r\nexport class Shop {\r\n  private container: HTMLElement;\r\n  private renderTimeout: number | null = null;\r\n  private isRendering = false;\r\n  private isProcessingPurchase = false;\r\n  private lastAffordability: Map<string, boolean> = new Map();\r\n  private currentTab: 'available' | 'owned' = 'available';\r\n  private buttonCache: Map<string, HTMLButtonElement> = new Map();\r\n  private soundManager: { playPurchase: () => void } | null = null;\r\n  private lastUpdateTime = 0;\r\n  private updateThrottle = 30; // Update at most every 30ms (much more responsive)\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private upgradeSystem: UpgradeSystem,\r\n  ) {\r\n    const element = document.getElementById('shop-content');\r\n    if (!element) throw new Error('Shop content element not found');\r\n    this.container = element;\r\n    \r\n    // Prevent shop clicks from bubbling to canvas (use bubble phase, not capture)\r\n    const shopPanel = document.getElementById('shop-panel');\r\n    if (shopPanel) {\r\n      shopPanel.addEventListener('click', (e) => { e.stopPropagation(); });\r\n      shopPanel.addEventListener('touchstart', (e) => { e.stopPropagation(); });\r\n      shopPanel.addEventListener('mousedown', (e) => { e.stopPropagation(); });\r\n    }\r\n    \r\n    this.setupTabs();\r\n    this.render();\r\n    this.store.subscribe(() => { this.scheduleRender(); });\r\n  }\r\n\r\n  setSoundManager(soundManager: { playPurchase: () => void }): void {\r\n    this.soundManager = soundManager;\r\n  }\r\n\r\n  private setupTabs(): void {\r\n    const availableTab = document.getElementById('tab-available');\r\n    const ownedTab = document.getElementById('tab-owned');\r\n\r\n    availableTab?.addEventListener('click', () => {\r\n      this.currentTab = 'available';\r\n      availableTab.classList.add('active');\r\n      ownedTab?.classList.remove('active');\r\n      this.render();\r\n    });\r\n\r\n    ownedTab?.addEventListener('click', () => {\r\n      this.currentTab = 'owned';\r\n      ownedTab.classList.add('active');\r\n      availableTab?.classList.remove('active');\r\n      this.render();\r\n    });\r\n  }\r\n\r\n  private scheduleRender(): void {\r\n    // Don't schedule renders while processing a purchase\r\n    if (this.isProcessingPurchase) return;\r\n    \r\n    const state = this.store.getState();\r\n    const currentPoints = state.points;\r\n    \r\n    // Check if we're close to affording something (within 10%)\r\n    const nearAffordable = this.isNearAffordable(currentPoints);\r\n    \r\n    // Use faster updates when close to affording something\r\n    const throttle = nearAffordable ? 10 : this.updateThrottle;\r\n    \r\n    // Throttle updates to prevent lag\r\n    const now = Date.now();\r\n    if (now - this.lastUpdateTime < throttle) {\r\n      return;\r\n    }\r\n    this.lastUpdateTime = now;\r\n    \r\n    // Use requestAnimationFrame for immediate smooth update\r\n    if (this.renderTimeout !== null) {\r\n      cancelAnimationFrame(this.renderTimeout);\r\n    }\r\n    this.renderTimeout = requestAnimationFrame(() => {\r\n      // Check if affordability changed before updating\r\n      if (this.hasAffordabilityChanged()) {\r\n        this.updateButtonStates();\r\n      }\r\n      this.renderTimeout = null;\r\n    });\r\n  }\r\n\r\n  private isNearAffordable(points: number): boolean {\r\n    const state = this.store.getState();\r\n    const upgrades = this.upgradeSystem.getUpgrades();\r\n    \r\n    // Check if we're within 10% of affording any upgrade\r\n    for (const upgrade of upgrades) {\r\n      const cost = upgrade.getCost(upgrade.getLevel(state));\r\n      if (points >= cost * 0.9 && points < cost) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    // Also check sub-upgrades\r\n    const subUpgrades = this.upgradeSystem.getSubUpgrades();\r\n    for (const upgrade of subUpgrades) {\r\n      if (!upgrade.isVisible(state) || upgrade.owned) continue;\r\n      if (points >= upgrade.cost * 0.9 && points < upgrade.cost) {\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  private hasAffordabilityChanged(): boolean {\r\n    const state = this.store.getState();\r\n    const upgrades = this.upgradeSystem.getUpgrades();\r\n    \r\n    let changed = false;\r\n    \r\n    // Check main upgrades\r\n    for (const upgrade of upgrades) {\r\n      const key = upgrade.id;\r\n      const canAfford = upgrade.canBuy(state);\r\n      const wasAffordable = this.lastAffordability.get(key);\r\n      \r\n      if (wasAffordable !== canAfford) {\r\n        changed = true;\r\n        this.lastAffordability.set(key, canAfford);\r\n      }\r\n    }\r\n    \r\n    // Always check sub-upgrades (they're important for user experience)\r\n    const subUpgrades = this.upgradeSystem.getSubUpgrades();\r\n    for (const upgrade of subUpgrades) {\r\n      if (!upgrade.isVisible(state)) continue;\r\n      const key = `sub_${upgrade.id}`;\r\n      const canAfford = !upgrade.owned && state.points >= upgrade.cost;\r\n      const wasAffordable = this.lastAffordability.get(key);\r\n      \r\n      if (wasAffordable !== canAfford) {\r\n        changed = true;\r\n        this.lastAffordability.set(key, canAfford);\r\n      }\r\n    }\r\n    \r\n    return changed;\r\n  }\r\n\r\n  private updateButtonStates(): void {\r\n    const state = this.store.getState();\r\n    \r\n    // Use requestAnimationFrame for smoother updates\r\n    requestAnimationFrame(() => {\r\n      // Update main upgrade buttons\r\n      const upgrades = this.upgradeSystem.getUpgrades();\r\n      for (const upgrade of upgrades) {\r\n        const button = this.buttonCache.get(upgrade.id);\r\n        if (button) {\r\n          const canAfford = upgrade.canBuy(state);\r\n          \r\n          // Only update if state changed\r\n          const wasDisabled = button.disabled;\r\n          if (wasDisabled === canAfford) {\r\n            button.disabled = !canAfford;\r\n            \r\n            // Use CSS classes instead of inline styles (faster)\r\n            if (canAfford) {\r\n              button.classList.remove('disabled');\r\n            } else {\r\n              button.classList.add('disabled');\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Update sub-upgrade affordability classes\r\n      const subUpgrades = this.upgradeSystem.getSubUpgrades();\r\n      for (const subUpgrade of subUpgrades) {\r\n        const card = document.querySelector(`[data-upgrade-id=\"${subUpgrade.id}\"]`) as HTMLElement;\r\n        if (card && !subUpgrade.owned) {\r\n          const canAfford = state.points >= subUpgrade.cost;\r\n          \r\n          // Always update to ensure responsiveness\r\n          card.style.opacity = canAfford ? '1' : '0.7';\r\n          card.style.cursor = canAfford ? 'pointer' : 'not-allowed';\r\n          card.style.border = canAfford ? '2px solid #fff' : '1px solid #666';\r\n          card.style.pointerEvents = 'auto';\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private render(): void {\r\n    if (this.isRendering) return;\r\n    this.isRendering = true;\r\n\r\n    this.container.innerHTML = '';\r\n    const state = this.store.getState();\r\n    this.upgradeSystem.updateSubUpgradesFromState(state);\r\n\r\n    if (this.currentTab === 'available') {\r\n      this.renderAvailableTab(state);\r\n    } else {\r\n      this.renderOwnedTab(state);\r\n    }\r\n\r\n    this.isRendering = false;\r\n  }\r\n\r\n  private renderAvailableTab(state: any): void {\r\n    const upgrades = this.upgradeSystem.getUpgrades();\r\n    const allSubUpgrades = this.upgradeSystem.getSubUpgrades();\r\n\r\n    // Clear button cache for fresh render\r\n    this.buttonCache.clear();\r\n\r\n    // Render special upgrades box at the top\r\n    const visibleSubUpgrades = allSubUpgrades.filter(sub => sub.isVisible(state) && !sub.owned);\r\n    if (visibleSubUpgrades.length > 0) {\r\n      const specialBox = document.createElement('div');\r\n      specialBox.className = 'special-upgrades-box';\r\n\r\n      const title = document.createElement('h3');\r\n      title.textContent = '⭐ SPECIAL UPGRADES ⭐';\r\n      specialBox.appendChild(title);\r\n\r\n      const grid = document.createElement('div');\r\n      grid.className = 'special-upgrades-grid';\r\n\r\n      for (const subUpgrade of visibleSubUpgrades) {\r\n        const subItem = this.createSubUpgradeCard(subUpgrade, state);\r\n        grid.appendChild(subItem);\r\n      }\r\n\r\n      specialBox.appendChild(grid);\r\n      this.container.appendChild(specialBox);\r\n    }\r\n\r\n    // Render main upgrades (exclude R&D category)\r\n    for (const upgrade of upgrades) {\r\n      if (upgrade.id === 'misc') continue;\r\n\r\n      const item = document.createElement('div');\r\n      item.className = 'upgrade-item';\r\n\r\n      const header = document.createElement('div');\r\n      header.className = 'upgrade-header';\r\n\r\n      const name = document.createElement('div');\r\n      name.className = 'upgrade-name';\r\n      name.textContent = upgrade.name;\r\n\r\n      const level = document.createElement('div');\r\n      level.className = 'upgrade-level';\r\n      level.textContent = upgrade.getDisplayText(state);\r\n\r\n      header.appendChild(name);\r\n      header.appendChild(level);\r\n\r\n      const description = document.createElement('div');\r\n      description.className = 'upgrade-description';\r\n      description.textContent = upgrade.description;\r\n\r\n      const footer = document.createElement('div');\r\n      footer.className = 'upgrade-footer';\r\n\r\n      const cost = document.createElement('div');\r\n      cost.className = 'upgrade-cost';\r\n      const currentCost = upgrade.getCost(upgrade.getLevel(state));\r\n      cost.textContent = `Cost: ${this.formatNumber(currentCost)}`;\r\n\r\n      const button = new Button('BUY', () => { this.buyUpgrade(upgrade); });\r\n      button.setEnabled(upgrade.canBuy(state));\r\n      \r\n      // Cache the button element for quick updates\r\n      const buttonElement = button.getElement();\r\n      this.buttonCache.set(upgrade.id, buttonElement);\r\n\r\n      footer.appendChild(cost);\r\n      footer.appendChild(buttonElement);\r\n\r\n      item.appendChild(header);\r\n      item.appendChild(description);\r\n      item.appendChild(footer);\r\n\r\n      this.container.appendChild(item);\r\n    }\r\n  }\r\n\r\n  private renderOwnedTab(state: any): void {\r\n    const allSubUpgrades = this.upgradeSystem.getSubUpgrades();\r\n    const ownedUpgrades = allSubUpgrades.filter(sub => sub.owned);\r\n\r\n    if (ownedUpgrades.length === 0) {\r\n      const message = document.createElement('div');\r\n      message.style.padding = '40px';\r\n      message.style.textAlign = 'center';\r\n      message.style.color = '#666';\r\n      message.textContent = 'No special upgrades owned yet.';\r\n      this.container.appendChild(message);\r\n      return;\r\n    }\r\n\r\n    const grid = document.createElement('div');\r\n    grid.className = 'special-upgrades-grid';\r\n    grid.style.padding = '10px 0';\r\n\r\n    for (const subUpgrade of ownedUpgrades) {\r\n      const card = this.createSubUpgradeCard(subUpgrade, state);\r\n      grid.appendChild(card);\r\n    }\r\n\r\n    this.container.appendChild(grid);\r\n  }\r\n\r\n  private createSubUpgradeCard(subUpgrade: any, state: any): HTMLElement {\r\n    const card = document.createElement('div');\r\n    card.className = `sub-upgrade ${subUpgrade.owned ? 'owned' : ''}`;\r\n    card.setAttribute('data-upgrade-id', subUpgrade.id);\r\n\r\n    const icon = document.createElement('div');\r\n    icon.className = 'sub-upgrade-icon';\r\n    icon.textContent = this.getUpgradeEmoji(subUpgrade.id);\r\n    card.appendChild(icon);\r\n\r\n    const name = document.createElement('div');\r\n    name.className = 'sub-upgrade-name';\r\n    name.textContent = subUpgrade.name;\r\n    card.appendChild(name);\r\n\r\n    const cost = document.createElement('div');\r\n    cost.className = 'sub-upgrade-cost';\r\n    cost.textContent = subUpgrade.owned ? '✓ OWNED' : this.formatNumber(subUpgrade.cost);\r\n    card.appendChild(cost);\r\n\r\n    // Tooltip\r\n    const tooltip = document.createElement('div');\r\n    tooltip.className = 'sub-upgrade-tooltip';\r\n    tooltip.innerHTML = `<strong>${subUpgrade.name}</strong><br>${subUpgrade.description}<br><em style=\"color: #888; font-size: 10px;\">${subUpgrade.flavor}</em>`;\r\n    card.appendChild(tooltip);\r\n\r\n    if (!subUpgrade.owned) {\r\n      // Set initial affordability state\r\n      const canAfford = state.points >= subUpgrade.cost;\r\n      card.style.opacity = canAfford ? '1' : '0.7';\r\n      card.style.cursor = canAfford ? 'pointer' : 'not-allowed';\r\n      \r\n      card.addEventListener('click', () => {\r\n        const currentState = this.store.getState();\r\n        if (currentState.points >= subUpgrade.cost) {\r\n          this.buySubUpgrade(subUpgrade);\r\n        }\r\n      });\r\n    }\r\n\r\n    return card;\r\n  }\r\n\r\n  private getUpgradeEmoji(upgradeId: string): string {\r\n    const emojiMap: Record<string, string> = {\r\n      // Original\r\n      'auto_fire': '🔥',\r\n      'death_pact': '💀',\r\n      'laser_focusing': '💎',\r\n      'quantum_targeting': '🎯',\r\n      'energy_recycling': '♻️',\r\n      'overclocked_reactors': '⚛️',\r\n      'ship_swarm': '🐝',\r\n      'neural_link': '🧠',\r\n      'antimatter_rounds': '💥',\r\n      'warp_core': '🌀',\r\n      'ai_optimizer': '🤖',\r\n      'perfect_precision': '✨',\r\n      'void_channeling': '🌌',\r\n      'temporal_acceleration': '⏰',\r\n      'singularity_core': '🕳️',\r\n      'cosmic_ascension': '🌟',\r\n      // New V1.0 Upgrades\r\n      'coffee_machine': '☕',\r\n      'lucky_dice': '🎲',\r\n      'space_pizza': '🍕',\r\n      'rubber_duck': '🦆',\r\n      'motivational_posters': '📋',\r\n      'disco_ball': '🪩',\r\n      'lucky_horseshoe': '🍀',\r\n      'arcade_machine': '🕹️',\r\n      'chaos_emeralds': '💚',\r\n      'time_machine': '⏱️',\r\n      'philosophers_stone': '🗿',\r\n      'golden_goose': '🦢',\r\n      'infinity_gauntlet': '💍',\r\n      'alien_cookbook': '📖',\r\n      'nuclear_reactor': '☢️',\r\n      'cheat_codes': '🎮',\r\n      'dragon_egg': '🥚',\r\n      'universe_map': '🗺️',\r\n      'answer_to_everything': '4️⃣2️⃣',\r\n      'heart_of_galaxy': '❤️',\r\n      'meaning_of_life': '🔮',\r\n      // Click-focused upgrades\r\n      'master_clicker': '👆',\r\n      'rapid_fire': '⚡',\r\n      'click_multiplier': '✨',\r\n      'super_clicker': '💪',\r\n      'missile_launcher': '🚀',\r\n    };\r\n    return emojiMap[upgradeId] || '⭐';\r\n  }\r\n\r\n  private buyUpgrade(upgrade: { canBuy: (state: any) => boolean; getCost: (level: number) => number; getLevel: (state: any) => number; buy: (state: any) => void }): void {\r\n    // Prevent concurrent purchases\r\n    if (this.isProcessingPurchase) return;\r\n    this.isProcessingPurchase = true;\r\n\r\n    const state = this.store.getState();\r\n    if (!upgrade.canBuy(state)) {\r\n      this.isProcessingPurchase = false;\r\n      return;\r\n    }\r\n\r\n    const price = upgrade.getCost(upgrade.getLevel(state));\r\n    if (state.points >= price) {\r\n      state.points -= price;\r\n      upgrade.buy(state);\r\n      this.store.incrementUpgrade();\r\n      this.store.setState(state);\r\n      \r\n      // Play purchase sound\r\n      if (this.soundManager) {\r\n        this.soundManager.playPurchase();\r\n      }\r\n      \r\n      // Force immediate UI update\r\n      this.lastAffordability.clear();\r\n      this.render();\r\n    }\r\n    \r\n    this.isProcessingPurchase = false;\r\n  }\r\n\r\n  private buySubUpgrade(upgrade: { owned: boolean; cost: number; buy: (state: any) => void }): void {\r\n    // Prevent concurrent purchases\r\n    if (this.isProcessingPurchase) return;\r\n    if (upgrade.owned) return;\r\n    this.isProcessingPurchase = true;\r\n\r\n    const state = this.store.getState();\r\n    if (state.points >= upgrade.cost) {\r\n      state.points -= upgrade.cost;\r\n      upgrade.buy(state);\r\n      this.store.incrementSubUpgrade();\r\n      this.store.setState(state);\r\n      \r\n      // Play purchase sound\r\n      if (this.soundManager) {\r\n        this.soundManager.playPurchase();\r\n      }\r\n      \r\n      // Force immediate UI update\r\n      this.lastAffordability.clear();\r\n      this.render();\r\n    }\r\n    \r\n    this.isProcessingPurchase = false;\r\n  }\r\n\r\n  private formatNumber(num: number): string {\r\n    if (num >= 1e9) return `${(num / 1e9).toFixed(2)}B`;\r\n    if (num >= 1e6) return `${(num / 1e6).toFixed(2)}M`;\r\n    if (num >= 1e3) return `${(num / 1e3).toFixed(1)}K`;\r\n    return Math.floor(num).toString();\r\n  }\r\n}\r\n\r\n","import type { GameState } from '../types';\r\nimport type { UpgradeSystem } from '../systems/UpgradeSystem';\r\n\r\nexport class UpgradesDisplay {\r\n  private container: HTMLElement;\r\n\r\n  constructor(private upgradeSystem: UpgradeSystem) {\r\n    const element = document.getElementById('upgrades-display');\r\n    if (!element) throw new Error('Upgrades display element not found');\r\n    this.container = element;\r\n  }\r\n\r\n  update(state: GameState): void {\r\n    this.container.innerHTML = '';\r\n    this.upgradeSystem.updateSubUpgradesFromState(state);\r\n    const allSubUpgrades = this.upgradeSystem.getSubUpgrades();\r\n    \r\n    const ownedUpgrades = allSubUpgrades.filter(upgrade => upgrade.owned);\r\n\r\n    if (ownedUpgrades.length === 0) {\r\n      return; // Container will be hidden by CSS\r\n    }\r\n\r\n    for (const upgrade of ownedUpgrades) {\r\n      const icon = document.createElement('div');\r\n      icon.className = 'upgrade-icon';\r\n      \r\n      // Add emoji icon\r\n      const emoji = this.getUpgradeEmoji(upgrade.id);\r\n      icon.textContent = emoji;\r\n\r\n      // Add tooltip on hover\r\n      const tooltip = document.createElement('div');\r\n      tooltip.className = 'tooltip';\r\n      tooltip.textContent = upgrade.name;\r\n      icon.appendChild(tooltip);\r\n\r\n      this.container.appendChild(icon);\r\n    }\r\n  }\r\n\r\n  private getUpgradeEmoji(upgradeId: string): string {\r\n    const emojiMap: Record<string, string> = {\r\n      'auto_fire': '🔥',\r\n      'death_pact': '💀',\r\n      'laser_focusing': '💎',\r\n      'quantum_targeting': '🎯',\r\n      'energy_recycling': '♻️',\r\n      'overclocked_reactors': '⚛️',\r\n      'ship_swarm': '🐝',\r\n      'neural_link': '🧠',\r\n      'antimatter_rounds': '💥',\r\n      'warp_core': '🌀',\r\n      'ai_optimizer': '🤖',\r\n      'perfect_precision': '✨',\r\n      'void_channeling': '🌌',\r\n      'temporal_acceleration': '⏰',\r\n      'singularity_core': '🕳️',\r\n      'cosmic_ascension': '🌟',\r\n    };\r\n\r\n    return emojiMap[upgradeId] || '⭐';\r\n  }\r\n}\r\n\r\n","import type { Achievement } from '../types';\r\n\r\nexport class AchievementSnackbar {\r\n  private queue: Achievement[] = [];\r\n  private currentSnackbar: HTMLElement | null = null;\r\n  private isShowing = false;\r\n\r\n  show(achievement: Achievement): void {\r\n    this.queue.push(achievement);\r\n    if (!this.isShowing) {\r\n      this.showNext();\r\n    }\r\n  }\r\n\r\n  private showNext(): void {\r\n    if (this.queue.length === 0) {\r\n      this.isShowing = false;\r\n      return;\r\n    }\r\n\r\n    this.isShowing = true;\r\n    const achievement = this.queue.shift()!;\r\n\r\n    // Create snackbar element\r\n    const snackbar = document.createElement('div');\r\n    snackbar.className = 'achievement-snackbar';\r\n    snackbar.innerHTML = `\r\n      <div class=\"achievement-icon\">${achievement.icon}</div>\r\n      <div class=\"achievement-content\">\r\n        <div class=\"achievement-title\">Achievement Unlocked!</div>\r\n        <div class=\"achievement-name\">${achievement.name}</div>\r\n        <div class=\"achievement-desc\">${achievement.description}</div>\r\n      </div>\r\n    `;\r\n\r\n    document.body.appendChild(snackbar);\r\n    this.currentSnackbar = snackbar;\r\n\r\n    // Trigger animation\r\n    setTimeout(() => {\r\n      snackbar.classList.add('show');\r\n    }, 10);\r\n\r\n    // Remove after 4 seconds\r\n    setTimeout(() => {\r\n      snackbar.classList.remove('show');\r\n      setTimeout(() => {\r\n        if (snackbar.parentElement) {\r\n          snackbar.parentElement.removeChild(snackbar);\r\n        }\r\n        this.currentSnackbar = null;\r\n        this.showNext();\r\n      }, 300);\r\n    }, 4000);\r\n  }\r\n\r\n  clear(): void {\r\n    this.queue = [];\r\n    if (this.currentSnackbar) {\r\n      if (this.currentSnackbar.parentElement) {\r\n        this.currentSnackbar.parentElement.removeChild(this.currentSnackbar);\r\n      }\r\n      this.currentSnackbar = null;\r\n    }\r\n    this.isShowing = false;\r\n  }\r\n}\r\n\r\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\r\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\r\nimport type { AchievementSystem } from '../systems/AchievementSystem';\r\n\r\nexport class AchievementsModal {\r\n  private modal: HTMLElement;\r\n  private achievementSystem: AchievementSystem;\r\n\r\n  constructor(achievementSystem: AchievementSystem) {\r\n    this.achievementSystem = achievementSystem;\r\n    this.modal = this.createModal();\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  private createModal(): HTMLElement {\r\n    const modal = document.createElement('div');\r\n    modal.id = 'achievements-modal';\r\n    modal.className = 'modal';\r\n    modal.style.display = 'none';\r\n\r\n    modal.innerHTML = `\r\n      <div class=\"modal-content achievements-content\">\r\n        <div class=\"modal-header\">\r\n          <h2>🏆 Achievements</h2>\r\n          <button class=\"modal-close\" id=\"achievements-close\">&times;</button>\r\n        </div>\r\n        <div class=\"achievements-progress\">\r\n          <div class=\"progress-text\">\r\n            <span id=\"achievements-count\">0/0</span>\r\n            <span id=\"achievements-percent\">0%</span>\r\n          </div>\r\n          <div class=\"progress-bar-container\">\r\n            <div class=\"progress-bar\" id=\"achievements-progress-bar\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"achievements-filters\">\r\n          <button class=\"filter-btn active\" data-filter=\"all\">All</button>\r\n          <button class=\"filter-btn\" data-filter=\"combat\">⚔️ Combat</button>\r\n          <button class=\"filter-btn\" data-filter=\"progression\">📈 Progression</button>\r\n          <button class=\"filter-btn\" data-filter=\"collection\">📦 Collection</button>\r\n          <button class=\"filter-btn\" data-filter=\"mastery\">👑 Mastery</button>\r\n          <button class=\"filter-btn\" data-filter=\"secret\">🔒 Secret</button>\r\n        </div>\r\n        <div class=\"achievements-grid\" id=\"achievements-grid\"></div>\r\n      </div>\r\n    `;\r\n\r\n    document.body.appendChild(modal);\r\n    return modal;\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    const closeBtn = this.modal.querySelector('#achievements-close');\r\n    if (closeBtn) {\r\n      closeBtn.addEventListener('click', () => { this.hide(); });\r\n    }\r\n\r\n    this.modal.addEventListener('click', (e) => {\r\n      if (e.target === this.modal) {\r\n        this.hide();\r\n      }\r\n    });\r\n\r\n    const filterBtns = this.modal.querySelectorAll('.filter-btn');\r\n    filterBtns.forEach(btn => {\r\n      btn.addEventListener('click', (e) => {\r\n        const target = e.target as HTMLElement;\r\n        const filter = target.dataset.filter;\r\n        \r\n        filterBtns.forEach(b => { b.classList.remove('active'); });\r\n        target.classList.add('active');\r\n        \r\n        this.applyFilter(filter || 'all');\r\n      });\r\n    });\r\n  }\r\n\r\n  private applyFilter(filter: string): void {\r\n    const grid = this.modal.querySelector('#achievements-grid');\r\n    if (!grid) return;\r\n\r\n    const items = grid.querySelectorAll('.achievement-item');\r\n    items.forEach(item => {\r\n      const htmlItem = item as HTMLElement;\r\n      if (filter === 'all' || htmlItem.dataset.category === filter) {\r\n        htmlItem.style.display = '';\r\n      } else {\r\n        htmlItem.style.display = 'none';\r\n      }\r\n    });\r\n  }\r\n\r\n  show(): void {\r\n    this.update();\r\n    this.modal.style.display = 'flex';\r\n  }\r\n\r\n  hide(): void {\r\n    this.modal.style.display = 'none';\r\n  }\r\n\r\n  update(): void {\r\n    const achievements = this.achievementSystem.getAchievements();\r\n    const grid = this.modal.querySelector('#achievements-grid');\r\n    if (!grid) return;\r\n\r\n    // Update progress\r\n    const count = this.achievementSystem.getUnlockedCount();\r\n    const total = this.achievementSystem.getTotalCount();\r\n    const percent = this.achievementSystem.getProgress();\r\n\r\n    const countEl = this.modal.querySelector('#achievements-count');\r\n    const percentEl = this.modal.querySelector('#achievements-percent');\r\n    const progressBar = this.modal.querySelector('#achievements-progress-bar') as HTMLElement;\r\n\r\n    if (countEl) countEl.textContent = `${count}/${total}`;\r\n    if (percentEl) percentEl.textContent = `${Math.floor(percent)}%`;\r\n    if (progressBar) progressBar.style.width = `${percent}%`;\r\n\r\n    // Render achievements\r\n    grid.innerHTML = achievements.map(achievement => {\r\n      const isLocked = !achievement.unlocked;\r\n      const isHidden = isLocked && achievement.hidden;\r\n      \r\n      return `\r\n        <div class=\"achievement-item ${isLocked ? 'locked' : 'unlocked'}\" data-category=\"${achievement.category}\">\r\n          <div class=\"achievement-icon-large ${isLocked ? 'grayscale' : ''}\">${achievement.icon}</div>\r\n          <div class=\"achievement-details\">\r\n            <div class=\"achievement-item-name\">${isHidden ? '???' : achievement.name}</div>\r\n            <div class=\"achievement-item-desc\">${isHidden ? 'Hidden achievement' : achievement.description}</div>\r\n            <div class=\"achievement-category-badge ${achievement.category}\">${this.getCategoryLabel(achievement.category)}</div>\r\n          </div>\r\n          ${isLocked ? '<div class=\"achievement-lock\">🔒</div>' : '<div class=\"achievement-checkmark\">✓</div>'}\r\n        </div>\r\n      `;\r\n    }).join('');\r\n  }\r\n\r\n  private getCategoryLabel(category: string): string {\r\n    const labels: Record<string, string> = {\r\n      combat: '⚔️ Combat',\r\n      progression: '📈 Progression',\r\n      collection: '📦 Collection',\r\n      mastery: '👑 Mastery',\r\n      secret: '🔒 Secret',\r\n    };\r\n    return labels[category] || category;\r\n  }\r\n}\r\n\r\n","import type { AscensionSystem } from '../systems/AscensionSystem';\r\nimport type { Store } from '../core/Store';\r\n\r\nexport class AscensionModal {\r\n  private modal: HTMLElement;\r\n  private onAscend: () => void;\r\n\r\n  constructor(\r\n    private ascensionSystem: AscensionSystem,\r\n    private store: Store,\r\n    ascendCallback: () => void,\r\n  ) {\r\n    this.onAscend = ascendCallback;\r\n    this.modal = this.createModal();\r\n    document.body.appendChild(this.modal);\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  private createModal(): HTMLElement {\r\n    const modal = document.createElement('div');\r\n    modal.className = 'modal ascension-modal';\r\n    modal.style.display = 'none';\r\n    modal.innerHTML = `\r\n      <div class=\"modal-content ascension-content\">\r\n        <div class=\"modal-header\">\r\n          <h2>🌟 ASCENSION 🌟</h2>\r\n          <button class=\"modal-close\" id=\"ascension-close\">&times;</button>\r\n        </div>\r\n        <div class=\"ascension-info\">\r\n          <div class=\"ascension-description\">\r\n            <p>Ascend to a higher plane of existence. You will lose all progress except:</p>\r\n            <ul>\r\n              <li>✓ Special Upgrades (Owned)</li>\r\n              <li>✓ Achievements</li>\r\n              <li>✓ Statistics</li>\r\n              <li>✓ Prestige Upgrades</li>\r\n            </ul>\r\n            <p style=\"margin-top: 15px;\"><strong>You will gain Prestige Points to unlock permanent bonuses!</strong></p>\r\n          </div>\r\n          <div class=\"ascension-rewards\">\r\n            <div class=\"prestige-points-display\">\r\n              <div class=\"prestige-current\">Current: <span id=\"prestige-current\">0</span> PP</div>\r\n              <div class=\"prestige-gain\">Gain on Ascension: <span id=\"prestige-gain\">0</span> PP</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"ascension-upgrades\">\r\n          <h3>Prestige Upgrades</h3>\r\n          <div id=\"prestige-upgrades-grid\" class=\"prestige-grid\"></div>\r\n        </div>\r\n        <div class=\"ascension-actions\">\r\n          <button id=\"ascend-btn\" class=\"ascension-btn ascend-confirm\">ASCEND NOW</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    return modal;\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    const closeBtn = this.modal.querySelector('#ascension-close');\r\n    closeBtn?.addEventListener('click', () => this.hide());\r\n\r\n    this.modal.addEventListener('click', (e) => {\r\n      if (e.target === this.modal) {\r\n        this.hide();\r\n      }\r\n    });\r\n\r\n    const ascendBtn = this.modal.querySelector('#ascend-btn');\r\n    ascendBtn?.addEventListener('click', () => {\r\n      if (confirm('Are you sure you want to ascend? All non-permanent progress will be reset!')) {\r\n        this.onAscend();\r\n        this.hide();\r\n      }\r\n    });\r\n\r\n    // Subscribe to store updates to refresh prestige upgrades\r\n    this.store.subscribe(() => {\r\n      if (this.modal.style.display !== 'none') {\r\n        this.updatePrestigeUpgrades();\r\n      }\r\n    });\r\n  }\r\n\r\n  show(): void {\r\n    const state = this.store.getState();\r\n    \r\n    // Update prestige points display\r\n    const currentPP = document.getElementById('prestige-current');\r\n    const gainPP = document.getElementById('prestige-gain');\r\n    \r\n    if (currentPP) {\r\n      currentPP.textContent = state.prestigePoints.toString();\r\n    }\r\n    \r\n    if (gainPP) {\r\n      const willGain = this.ascensionSystem.calculatePrestigePoints(state);\r\n      gainPP.textContent = willGain.toString();\r\n    }\r\n\r\n    // Update prestige upgrades\r\n    this.updatePrestigeUpgrades();\r\n\r\n    // Check if can ascend\r\n    const canAscend = this.ascensionSystem.canAscend(state);\r\n    const ascendBtn = this.modal.querySelector('#ascend-btn') as HTMLButtonElement;\r\n    if (ascendBtn) {\r\n      if (canAscend) {\r\n        ascendBtn.disabled = false;\r\n        ascendBtn.textContent = 'ASCEND NOW';\r\n      } else {\r\n        ascendBtn.disabled = true;\r\n        ascendBtn.textContent = `REACH LEVEL 100 TO ASCEND (Current: ${state.level})`;\r\n      }\r\n    }\r\n\r\n    this.modal.style.display = 'flex';\r\n  }\r\n\r\n  hide(): void {\r\n    this.modal.style.display = 'none';\r\n  }\r\n\r\n  private updatePrestigeUpgrades(): void {\r\n    const state = this.store.getState();\r\n    \r\n    // Update current PP display\r\n    const currentPP = document.getElementById('prestige-current');\r\n    if (currentPP) {\r\n      currentPP.textContent = state.prestigePoints.toString();\r\n    }\r\n    \r\n    const grid = this.modal.querySelector('#prestige-upgrades-grid');\r\n    if (!grid) return;\r\n\r\n    grid.innerHTML = '';\r\n    const upgrades = this.ascensionSystem.getUpgrades();\r\n\r\n    for (const upgrade of upgrades) {\r\n      const currentLevel = upgrade.getCurrentLevel(state);\r\n      const canAfford = state.prestigePoints >= upgrade.cost;\r\n      const maxed = currentLevel >= upgrade.maxLevel;\r\n\r\n      const card = document.createElement('div');\r\n      card.className = `prestige-upgrade-card ${maxed ? 'maxed' : ''} ${!canAfford && !maxed ? 'locked' : ''}`;\r\n      \r\n      card.innerHTML = `\r\n        <div class=\"prestige-upgrade-name\">${upgrade.name}</div>\r\n        <div class=\"prestige-upgrade-level\">Level: ${currentLevel} / ${upgrade.maxLevel}</div>\r\n        <div class=\"prestige-upgrade-desc\">${upgrade.description}</div>\r\n        <div class=\"prestige-upgrade-effect\">${upgrade.effect}</div>\r\n        <div class=\"prestige-upgrade-cost\">\r\n          ${maxed ? 'MAX' : `Cost: ${upgrade.cost} PP`}\r\n        </div>\r\n      `;\r\n\r\n      if (!maxed) {\r\n        card.addEventListener('click', () => {\r\n          if (this.ascensionSystem.buyPrestigeUpgrade(state, upgrade.id)) {\r\n            this.store.setState(state);\r\n            this.updatePrestigeUpgrades();\r\n          }\r\n        });\r\n      }\r\n\r\n      grid.appendChild(card);\r\n    }\r\n  }\r\n}\r\n\r\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\r\nimport type { GameState } from '../types';\r\n\r\nexport class StatsPanel {\r\n  private modalElement: HTMLElement | null = null;\r\n  private isOpen = false;\r\n\r\n  constructor() {\r\n    this.createModal();\r\n    this.setupButton();\r\n  }\r\n\r\n  private setupButton(): void {\r\n    const statsBtn = document.getElementById('stats-btn');\r\n    if (statsBtn) {\r\n      statsBtn.addEventListener('click', () => {\r\n        this.toggle();\r\n      });\r\n    }\r\n  }\r\n\r\n  private createModal(): void {\r\n    // Create modal\r\n    this.modalElement = document.createElement('div');\r\n    this.modalElement.className = 'modal stats-modal';\r\n    this.modalElement.style.display = 'none';\r\n    \r\n    // Close on background click\r\n    this.modalElement.addEventListener('click', (e) => {\r\n      if (e.target === this.modalElement) {\r\n        this.hide();\r\n      }\r\n    });\r\n\r\n    // Modal content\r\n    const content = document.createElement('div');\r\n    content.className = 'modal-content stats-content';\r\n    \r\n    // Header\r\n    const header = document.createElement('div');\r\n    header.className = 'modal-header';\r\n    \r\n    const title = document.createElement('h2');\r\n    title.textContent = '📊 Statistics';\r\n    \r\n    const closeBtn = document.createElement('button');\r\n    closeBtn.className = 'modal-close';\r\n    closeBtn.textContent = '×';\r\n    closeBtn.addEventListener('click', () => { this.hide(); });\r\n    \r\n    header.appendChild(title);\r\n    header.appendChild(closeBtn);\r\n    \r\n    // Stats container\r\n    const statsContainer = document.createElement('div');\r\n    statsContainer.id = 'stats-container';\r\n    statsContainer.className = 'stats-container';\r\n    \r\n    content.appendChild(header);\r\n    content.appendChild(statsContainer);\r\n    this.modalElement.appendChild(content);\r\n    \r\n    document.body.appendChild(this.modalElement);\r\n  }\r\n\r\n  public toggle(): void {\r\n    if (this.isOpen) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  public show(): void {\r\n    if (this.modalElement) {\r\n      this.modalElement.style.display = 'flex';\r\n      this.isOpen = true;\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  public hide(): void {\r\n    if (this.modalElement) {\r\n      this.modalElement.style.display = 'none';\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n\r\n  public update(_state: GameState): void {\r\n    if (this.isOpen) {\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  private render(): void {\r\n    const container = document.getElementById('stats-container');\r\n    if (!container) return;\r\n\r\n    // Get state from somewhere - for now we'll get it from the game\r\n    const stateStr = localStorage.getItem('alien-clicker-save');\r\n    if (!stateStr) return;\r\n    \r\n    const state = JSON.parse(stateStr) as GameState;\r\n\r\n    container.innerHTML = '';\r\n\r\n    // Create stats categories\r\n    const categories = [\r\n      {\r\n        title: '⚔️ Combat Stats',\r\n        stats: [\r\n          { label: 'Total Clicks', value: this.formatNumber(state.stats.totalClicks) },\r\n          { label: 'Total Damage', value: this.formatNumber(state.stats.totalDamage) },\r\n          { label: 'Aliens Killed', value: this.formatNumber(state.stats.aliensKilled) },\r\n          { label: 'Bosses Defeated', value: this.formatNumber(state.stats.bossesKilled) },\r\n          { label: 'Critical Hits', value: this.formatNumber(state.stats.criticalHits) },\r\n        ],\r\n      },\r\n      {\r\n        title: '📈 Progression Stats',\r\n        stats: [\r\n          { label: 'Current Level', value: state.level.toString() },\r\n          { label: 'Max Level Reached', value: state.stats.maxLevel.toString() },\r\n          { label: 'Total Experience', value: this.formatNumber(Math.floor(state.experience)) },\r\n          { label: 'Play Time', value: this.formatTime(state.stats.playTime) },\r\n        ],\r\n      },\r\n      {\r\n        title: '🛸 Fleet Stats',\r\n        stats: [\r\n          { label: 'Ships', value: state.shipsCount.toString() },\r\n          { label: 'Attack Speed Level', value: state.attackSpeedLevel.toString() },\r\n          { label: 'Damage Level', value: state.pointMultiplierLevel.toString() },\r\n          { label: 'Crit Level', value: state.critChanceLevel.toString() },\r\n          { label: 'Passive Gen Level', value: state.resourceGenLevel.toString() },\r\n          { label: 'XP Boost Level', value: state.xpBoostLevel.toString() },\r\n        ],\r\n      },\r\n      {\r\n        title: '🔬 Technology Stats',\r\n        stats: [\r\n          { label: 'Total Upgrades', value: this.formatNumber(state.stats.totalUpgrades) },\r\n          { label: 'Special Technologies', value: `${state.stats.totalSubUpgrades} / 33` },\r\n          { label: 'Technology Progress', value: `${Math.floor((state.stats.totalSubUpgrades / 33) * 100)}%` },\r\n        ],\r\n      },\r\n      {\r\n        title: '💰 Wealth Stats',\r\n        stats: [\r\n          { label: 'Current Points', value: this.formatNumber(state.points) },\r\n          { label: 'Total Points Earned', value: this.formatNumber(state.stats.totalDamage) },\r\n        ],\r\n      },\r\n    ];\r\n\r\n    // Render each category\r\n    for (const category of categories) {\r\n      const categoryEl = document.createElement('div');\r\n      categoryEl.className = 'stats-category';\r\n\r\n      const categoryTitle = document.createElement('h3');\r\n      categoryTitle.className = 'stats-category-title';\r\n      categoryTitle.textContent = category.title;\r\n      categoryEl.appendChild(categoryTitle);\r\n\r\n      const statsGrid = document.createElement('div');\r\n      statsGrid.className = 'stats-grid';\r\n\r\n      for (const stat of category.stats) {\r\n        const statItem = document.createElement('div');\r\n        statItem.className = 'stat-item';\r\n\r\n        const label = document.createElement('div');\r\n        label.className = 'stat-label';\r\n        label.textContent = stat.label;\r\n\r\n        const value = document.createElement('div');\r\n        value.className = 'stat-value';\r\n        value.textContent = stat.value;\r\n\r\n        statItem.appendChild(label);\r\n        statItem.appendChild(value);\r\n        statsGrid.appendChild(statItem);\r\n      }\r\n\r\n      categoryEl.appendChild(statsGrid);\r\n      container.appendChild(categoryEl);\r\n    }\r\n  }\r\n\r\n  private formatNumber(num: number): string {\r\n    if (num >= 1e9) return `${(num / 1e9).toFixed(2)}B`;\r\n    if (num >= 1e6) return `${(num / 1e6).toFixed(2)}M`;\r\n    if (num >= 1e3) return `${(num / 1e3).toFixed(2)}K`;\r\n    return Math.floor(num).toString();\r\n  }\r\n\r\n  private formatTime(seconds: number): string {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    \r\n    if (hours > 0) {\r\n      return `${hours}h ${minutes}m ${secs}s`;\r\n    } else if (minutes > 0) {\r\n      return `${minutes}m ${secs}s`;\r\n    } else {\r\n      return `${secs}s`;\r\n    }\r\n  }\r\n}\r\n\r\n","import type { SoundManager } from '../systems/SoundManager';\r\n\r\nexport class SettingsModal {\r\n  private modal: HTMLElement | null = null;\r\n  private soundManager: SoundManager;\r\n  private volumeSlider: HTMLInputElement | null = null;\r\n  private volumeValue: HTMLSpanElement | null = null;\r\n  private graphicsCallback: ((enabled: boolean) => void) | null = null;\r\n  private shipLasersCallback: ((enabled: boolean) => void) | null = null;\r\n  private ripplesCallback: ((enabled: boolean) => void) | null = null;\r\n  private damageNumbersCallback: ((enabled: boolean) => void) | null = null;\r\n  private soundCallback: ((enabled: boolean) => void) | null = null;\r\n  private volumeCallback: ((volume: number) => void) | null = null;\r\n  private graphicsToggle: HTMLButtonElement | null = null;\r\n  private shipLasersToggle: HTMLButtonElement | null = null;\r\n  private ripplesToggle: HTMLButtonElement | null = null;\r\n  private damageNumbersToggle: HTMLButtonElement | null = null;\r\n\r\n  constructor(soundManager: SoundManager) {\r\n    this.soundManager = soundManager;\r\n    this.createModal();\r\n  }\r\n\r\n  setGraphicsCallback(callback: (enabled: boolean) => void): void {\r\n    this.graphicsCallback = callback;\r\n  }\r\n\r\n  setShipLasersCallback(callback: (enabled: boolean) => void): void {\r\n    this.shipLasersCallback = callback;\r\n  }\r\n\r\n  setRipplesCallback(callback: (enabled: boolean) => void): void {\r\n    this.ripplesCallback = callback;\r\n  }\r\n\r\n  setDamageNumbersCallback(callback: (enabled: boolean) => void): void {\r\n    this.damageNumbersCallback = callback;\r\n  }\r\n\r\n  setSoundCallback(callback: (enabled: boolean) => void): void {\r\n    this.soundCallback = callback;\r\n  }\r\n\r\n  setVolumeCallback(callback: (volume: number) => void): void {\r\n    this.volumeCallback = callback;\r\n  }\r\n\r\n  updateGraphicsToggles(graphics: boolean, shipLasers: boolean, ripples: boolean, damageNumbers: boolean): void {\r\n    if (this.graphicsToggle) {\r\n      this.graphicsToggle.textContent = graphics ? 'ON' : 'OFF';\r\n      this.graphicsToggle.style.backgroundColor = graphics ? '#4CAF50' : '#666';\r\n    }\r\n    if (this.shipLasersToggle) {\r\n      this.shipLasersToggle.textContent = shipLasers ? 'ON' : 'OFF';\r\n      this.shipLasersToggle.style.backgroundColor = shipLasers ? '#4CAF50' : '#666';\r\n    }\r\n    if (this.ripplesToggle) {\r\n      this.ripplesToggle.textContent = ripples ? 'ON' : 'OFF';\r\n      this.ripplesToggle.style.backgroundColor = ripples ? '#4CAF50' : '#666';\r\n    }\r\n    if (this.damageNumbersToggle) {\r\n      this.damageNumbersToggle.textContent = damageNumbers ? 'ON' : 'OFF';\r\n      this.damageNumbersToggle.style.backgroundColor = damageNumbers ? '#4CAF50' : '#666';\r\n    }\r\n  }\r\n\r\n  private createModal(): void {\r\n    // Create modal container\r\n    this.modal = document.createElement('div');\r\n    this.modal.id = 'settings-modal';\r\n    this.modal.className = 'modal';\r\n    this.modal.style.display = 'none';\r\n\r\n    // Modal content\r\n    const content = document.createElement('div');\r\n    content.className = 'modal-content';\r\n    content.style.maxWidth = '600px';\r\n    content.style.maxHeight = '85vh';\r\n    content.style.overflowY = 'auto';\r\n\r\n    // Title\r\n    const title = document.createElement('h2');\r\n    title.textContent = '⚙️ Settings';\r\n    title.style.marginBottom = '20px';\r\n    title.style.textAlign = 'center';\r\n    content.appendChild(title);\r\n\r\n    // Sound section\r\n    const soundSection = document.createElement('div');\r\n    soundSection.style.marginBottom = '25px';\r\n\r\n    const soundTitle = document.createElement('h3');\r\n    soundTitle.textContent = 'Sound Settings';\r\n    soundTitle.style.marginBottom = '15px';\r\n    soundSection.appendChild(soundTitle);\r\n\r\n    // Sound enabled toggle\r\n    const soundToggleContainer = document.createElement('div');\r\n    soundToggleContainer.style.marginBottom = '15px';\r\n    soundToggleContainer.style.display = 'flex';\r\n    soundToggleContainer.style.alignItems = 'center';\r\n    soundToggleContainer.style.justifyContent = 'space-between';\r\n\r\n    const soundLabel = document.createElement('label');\r\n    soundLabel.textContent = 'Sound Enabled:';\r\n    soundLabel.style.fontSize = '16px';\r\n\r\n    const soundToggle = document.createElement('button');\r\n    soundToggle.className = 'modal-button';\r\n    soundToggle.textContent = this.soundManager.isEnabled() ? 'ON' : 'OFF';\r\n    soundToggle.style.width = '80px';\r\n    soundToggle.addEventListener('click', () => {\r\n      const newState = !this.soundManager.isEnabled();\r\n      this.soundManager.setEnabled(newState);\r\n      soundToggle.textContent = newState ? 'ON' : 'OFF';\r\n      soundToggle.style.backgroundColor = newState ? '#4CAF50' : '#666';\r\n      if (this.soundCallback) {\r\n        this.soundCallback(newState);\r\n      }\r\n    });\r\n    soundToggle.style.backgroundColor = this.soundManager.isEnabled() ? '#4CAF50' : '#666';\r\n\r\n    soundToggleContainer.appendChild(soundLabel);\r\n    soundToggleContainer.appendChild(soundToggle);\r\n    soundSection.appendChild(soundToggleContainer);\r\n\r\n    const soundHint = document.createElement('div');\r\n    soundHint.textContent = 'Enable or disable all game sounds';\r\n    soundHint.style.fontSize = '12px';\r\n    soundHint.style.color = '#888';\r\n    soundHint.style.marginTop = '5px';\r\n    soundHint.style.marginBottom = '15px';\r\n    soundSection.appendChild(soundHint);\r\n\r\n    // Volume slider\r\n    const volumeContainer = document.createElement('div');\r\n    volumeContainer.style.marginBottom = '15px';\r\n\r\n    const volumeLabel = document.createElement('label');\r\n    volumeLabel.textContent = 'Volume:';\r\n    volumeLabel.style.display = 'block';\r\n    volumeLabel.style.marginBottom = '8px';\r\n    volumeLabel.style.fontSize = '16px';\r\n    volumeContainer.appendChild(volumeLabel);\r\n\r\n    const sliderRow = document.createElement('div');\r\n    sliderRow.style.display = 'flex';\r\n    sliderRow.style.alignItems = 'center';\r\n    sliderRow.style.gap = '10px';\r\n\r\n    this.volumeSlider = document.createElement('input');\r\n    this.volumeSlider.type = 'range';\r\n    this.volumeSlider.min = '0';\r\n    this.volumeSlider.max = '100';\r\n    this.volumeSlider.value = String(Math.round(this.soundManager.getVolume() * 100));\r\n    this.volumeSlider.style.flex = '1';\r\n    this.volumeSlider.style.cursor = 'pointer';\r\n\r\n    this.volumeValue = document.createElement('span');\r\n    this.volumeValue.textContent = `${this.volumeSlider.value}%`;\r\n    this.volumeValue.style.minWidth = '45px';\r\n    this.volumeValue.style.textAlign = 'right';\r\n    this.volumeValue.style.fontSize = '14px';\r\n\r\n    // Store reference to this for the event listener\r\n    const self = this;\r\n    this.volumeSlider.addEventListener('input', function() {\r\n      const value = parseInt(this.value) / 100;\r\n      self.soundManager.setVolume(value);\r\n      if (self.volumeValue) {\r\n        self.volumeValue.textContent = String(this.value) + '%';\r\n      }\r\n      if (self.volumeCallback) {\r\n        self.volumeCallback(value);\r\n      }\r\n      // Play a test sound to hear the volume change\r\n      self.soundManager.playClick();\r\n    });\r\n\r\n    sliderRow.appendChild(this.volumeSlider);\r\n    sliderRow.appendChild(this.volumeValue);\r\n    volumeContainer.appendChild(sliderRow);\r\n    soundSection.appendChild(volumeContainer);\r\n\r\n    content.appendChild(soundSection);\r\n\r\n    // Graphics section\r\n    const graphicsSection = document.createElement('div');\r\n    graphicsSection.style.marginBottom = '25px';\r\n\r\n    const graphicsTitle = document.createElement('h3');\r\n    graphicsTitle.textContent = 'Graphics Settings';\r\n    graphicsTitle.style.marginBottom = '15px';\r\n    graphicsSection.appendChild(graphicsTitle);\r\n\r\n    // High graphics toggle\r\n    const graphicsToggleContainer = document.createElement('div');\r\n    graphicsToggleContainer.style.marginBottom = '10px';\r\n    graphicsToggleContainer.style.display = 'flex';\r\n    graphicsToggleContainer.style.alignItems = 'center';\r\n    graphicsToggleContainer.style.justifyContent = 'space-between';\r\n\r\n    const graphicsLabel = document.createElement('label');\r\n    graphicsLabel.textContent = 'High Graphics (Particles):';\r\n    graphicsLabel.style.fontSize = '16px';\r\n\r\n    this.graphicsToggle = document.createElement('button');\r\n    this.graphicsToggle.className = 'modal-button';\r\n    this.graphicsToggle.textContent = 'ON';\r\n    this.graphicsToggle.style.width = '80px';\r\n    this.graphicsToggle.style.backgroundColor = '#4CAF50';\r\n    \r\n    this.graphicsToggle.addEventListener('click', () => {\r\n      if (!this.graphicsToggle) return;\r\n      const newState = this.graphicsToggle.textContent === 'OFF';\r\n      this.graphicsToggle.textContent = newState ? 'ON' : 'OFF';\r\n      this.graphicsToggle.style.backgroundColor = newState ? '#4CAF50' : '#666';\r\n      if (this.graphicsCallback) {\r\n        this.graphicsCallback(newState);\r\n      }\r\n    });\r\n\r\n    graphicsToggleContainer.appendChild(graphicsLabel);\r\n    graphicsToggleContainer.appendChild(this.graphicsToggle);\r\n    graphicsSection.appendChild(graphicsToggleContainer);\r\n\r\n    const graphicsHint = document.createElement('div');\r\n    graphicsHint.textContent = 'Disable particles for better performance';\r\n    graphicsHint.style.fontSize = '12px';\r\n    graphicsHint.style.color = '#888';\r\n    graphicsHint.style.marginTop = '5px';\r\n    graphicsSection.appendChild(graphicsHint);\r\n\r\n    // Ship lasers toggle\r\n    const shipLasersContainer = document.createElement('div');\r\n    shipLasersContainer.style.marginBottom = '10px';\r\n    shipLasersContainer.style.display = 'flex';\r\n    shipLasersContainer.style.alignItems = 'center';\r\n    shipLasersContainer.style.justifyContent = 'space-between';\r\n\r\n    const shipLasersLabel = document.createElement('label');\r\n    shipLasersLabel.textContent = 'Ship Auto-Fire Lasers:';\r\n    shipLasersLabel.style.fontSize = '16px';\r\n\r\n    this.shipLasersToggle = document.createElement('button');\r\n    this.shipLasersToggle.className = 'modal-button';\r\n    this.shipLasersToggle.textContent = 'ON';\r\n    this.shipLasersToggle.style.width = '80px';\r\n    this.shipLasersToggle.style.backgroundColor = '#4CAF50';\r\n    \r\n    this.shipLasersToggle.addEventListener('click', () => {\r\n      if (!this.shipLasersToggle) return;\r\n      const newState = this.shipLasersToggle.textContent === 'OFF';\r\n      this.shipLasersToggle.textContent = newState ? 'ON' : 'OFF';\r\n      this.shipLasersToggle.style.backgroundColor = newState ? '#4CAF50' : '#666';\r\n      if (this.shipLasersCallback) {\r\n        this.shipLasersCallback(newState);\r\n      }\r\n    });\r\n\r\n    shipLasersContainer.appendChild(shipLasersLabel);\r\n    shipLasersContainer.appendChild(this.shipLasersToggle);\r\n    graphicsSection.appendChild(shipLasersContainer);\r\n\r\n    const shipLasersHint = document.createElement('div');\r\n    shipLasersHint.textContent = 'Disable to reduce lag (only your clicks will fire lasers)';\r\n    shipLasersHint.style.fontSize = '12px';\r\n    shipLasersHint.style.color = '#888';\r\n    shipLasersHint.style.marginTop = '5px';\r\n    graphicsSection.appendChild(shipLasersHint);\r\n\r\n    // Ripples toggle\r\n    const ripplesContainer = document.createElement('div');\r\n    ripplesContainer.style.marginBottom = '10px';\r\n    ripplesContainer.style.marginTop = '15px';\r\n    ripplesContainer.style.display = 'flex';\r\n    ripplesContainer.style.alignItems = 'center';\r\n    ripplesContainer.style.justifyContent = 'space-between';\r\n\r\n    const ripplesLabel = document.createElement('label');\r\n    ripplesLabel.textContent = 'Click Ripples:';\r\n    ripplesLabel.style.fontSize = '16px';\r\n\r\n    this.ripplesToggle = document.createElement('button');\r\n    this.ripplesToggle.className = 'modal-button';\r\n    this.ripplesToggle.textContent = 'ON';\r\n    this.ripplesToggle.style.width = '80px';\r\n    this.ripplesToggle.style.backgroundColor = '#4CAF50';\r\n    \r\n    this.ripplesToggle.addEventListener('click', () => {\r\n      if (!this.ripplesToggle) return;\r\n      const newState = this.ripplesToggle.textContent === 'OFF';\r\n      this.ripplesToggle.textContent = newState ? 'ON' : 'OFF';\r\n      this.ripplesToggle.style.backgroundColor = newState ? '#4CAF50' : '#666';\r\n      if (this.ripplesCallback) {\r\n        this.ripplesCallback(newState);\r\n      }\r\n    });\r\n\r\n    ripplesContainer.appendChild(ripplesLabel);\r\n    ripplesContainer.appendChild(this.ripplesToggle);\r\n    graphicsSection.appendChild(ripplesContainer);\r\n\r\n    const ripplesHint = document.createElement('div');\r\n    ripplesHint.textContent = 'Disable for minimal visual clutter';\r\n    ripplesHint.style.fontSize = '12px';\r\n    ripplesHint.style.color = '#888';\r\n    ripplesHint.style.marginTop = '5px';\r\n    graphicsSection.appendChild(ripplesHint);\r\n\r\n    // Damage numbers toggle\r\n    const damageNumbersContainer = document.createElement('div');\r\n    damageNumbersContainer.style.marginBottom = '10px';\r\n    damageNumbersContainer.style.marginTop = '15px';\r\n    damageNumbersContainer.style.display = 'flex';\r\n    damageNumbersContainer.style.alignItems = 'center';\r\n    damageNumbersContainer.style.justifyContent = 'space-between';\r\n\r\n    const damageNumbersLabel = document.createElement('label');\r\n    damageNumbersLabel.textContent = 'Damage Numbers:';\r\n    damageNumbersLabel.style.fontSize = '16px';\r\n\r\n    this.damageNumbersToggle = document.createElement('button');\r\n    this.damageNumbersToggle.className = 'modal-button';\r\n    this.damageNumbersToggle.textContent = 'ON';\r\n    this.damageNumbersToggle.style.width = '80px';\r\n    this.damageNumbersToggle.style.backgroundColor = '#4CAF50';\r\n    \r\n    this.damageNumbersToggle.addEventListener('click', () => {\r\n      if (!this.damageNumbersToggle) return;\r\n      const newState = this.damageNumbersToggle.textContent === 'OFF';\r\n      this.damageNumbersToggle.textContent = newState ? 'ON' : 'OFF';\r\n      this.damageNumbersToggle.style.backgroundColor = newState ? '#4CAF50' : '#666';\r\n      if (this.damageNumbersCallback) {\r\n        this.damageNumbersCallback(newState);\r\n      }\r\n    });\r\n\r\n    damageNumbersContainer.appendChild(damageNumbersLabel);\r\n    damageNumbersContainer.appendChild(this.damageNumbersToggle);\r\n    graphicsSection.appendChild(damageNumbersContainer);\r\n\r\n    const damageNumbersHint = document.createElement('div');\r\n    damageNumbersHint.textContent = 'Disable to improve performance (damage still applies)';\r\n    damageNumbersHint.style.fontSize = '12px';\r\n    damageNumbersHint.style.color = '#888';\r\n    damageNumbersHint.style.marginTop = '5px';\r\n    graphicsSection.appendChild(damageNumbersHint);\r\n\r\n    content.appendChild(graphicsSection);\r\n\r\n    // Close button\r\n    const closeButton = document.createElement('button');\r\n    closeButton.className = 'modal-button';\r\n    closeButton.textContent = 'Close';\r\n    closeButton.style.width = '100%';\r\n    closeButton.style.marginTop = '20px';\r\n    closeButton.addEventListener('click', () => {\r\n      this.hide();\r\n    });\r\n    content.appendChild(closeButton);\r\n\r\n    this.modal.appendChild(content);\r\n    document.body.appendChild(this.modal);\r\n\r\n    // Close on background click\r\n    this.modal.addEventListener('click', (e) => {\r\n      if (e.target === this.modal) {\r\n        this.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  show(): void {\r\n    if (this.modal) {\r\n      // Update slider to current volume when opening\r\n      if (this.volumeSlider && this.volumeValue) {\r\n        const currentVolume = Math.round(this.soundManager.getVolume() * 100);\r\n        this.volumeSlider.value = String(currentVolume);\r\n        this.volumeValue.textContent = String(currentVolume) + '%';\r\n      }\r\n      this.modal.style.display = 'flex';\r\n    }\r\n  }\r\n\r\n  hide(): void {\r\n    if (this.modal) {\r\n      this.modal.style.display = 'none';\r\n    }\r\n  }\r\n}\r\n\r\n","export class Layout {\r\n  static setupResetButton(onReset: () => void): void {\r\n    const resetBtn = document.getElementById('reset-btn');\r\n    if (resetBtn) {\r\n      resetBtn.addEventListener('click', () => {\r\n        if (\r\n          confirm(\r\n            'Are you sure you want to reset all progress? This cannot be undone.',\r\n          )\r\n        ) {\r\n          onReset();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","import type { BallColor } from '../types';\r\n\r\nexport class ColorManager {\r\n  private static colors: BallColor[] = [\r\n    { fill: '#fff', stroke: '#ccc', hp: 10 },\r\n    { fill: '#ddd', stroke: '#aaa', hp: 20 },\r\n    { fill: '#bbb', stroke: '#888', hp: 35 },\r\n    { fill: '#999', stroke: '#666', hp: 55 },\r\n    { fill: '#ff4444', stroke: '#cc0000', hp: 120 },\r\n    { fill: '#ff8800', stroke: '#cc6600', hp: 180 },\r\n    { fill: '#ffdd00', stroke: '#ccaa00', hp: 260 },\r\n    { fill: '#88ff00', stroke: '#66cc00', hp: 360 },\r\n    { fill: '#00ff88', stroke: '#00cc66', hp: 480 },\r\n    { fill: '#0088ff', stroke: '#0066cc', hp: 620 },\r\n    { fill: '#8800ff', stroke: '#6600cc', hp: 780 },\r\n    { fill: '#ff0088', stroke: '#cc0066', hp: 960 },\r\n    { fill: '#ff6600', stroke: '#cc4400', hp: 1160 },\r\n    { fill: '#ffaa00', stroke: '#cc8800', hp: 1380 },\r\n    { fill: '#00ffff', stroke: '#00cccc', hp: 1620 },\r\n    { fill: '#ff00ff', stroke: '#cc00cc', hp: 1880 },\r\n    { fill: '#66ff66', stroke: '#44cc44', hp: 2160 },\r\n    { fill: '#ff6666', stroke: '#cc4444', hp: 2460 },\r\n    { fill: '#6666ff', stroke: '#4444cc', hp: 2780 },\r\n    { fill: '#ffff00', stroke: '#cccc00', hp: 3120 },\r\n  ];\r\n\r\n  static getColorForLevel(level: number): BallColor {\r\n    const index = Math.min(level - 1, this.colors.length - 1);\r\n    return this.colors[index] ?? this.colors[this.colors.length - 1]!;\r\n  }\r\n\r\n  static getExpRequired(level: number): number {\r\n    // Smoother exponential XP requirements - balanced for better progression\r\n    // Changed from 1.15 to 1.12 and added logarithmic damping for high levels\r\n    const baseXP = 10 * Math.pow(1.12, level);\r\n    const dampingFactor = Math.max(1, Math.log10(level + 1));\r\n    return Math.floor(baseXP / dampingFactor);\r\n  }\r\n\r\n  static isBossLevel(level: number): boolean {\r\n    // Boss battles only at levels 50 and 100\r\n    return level === 50 || level === 100;\r\n  }\r\n\r\n  static getBossHp(level: number): number {\r\n    return Math.floor(5000 * Math.pow(1.5, (level / 5) - 1));\r\n  }\r\n}\r\n\r\n","export interface UserSettings {\r\n  soundEnabled: boolean;\r\n  volume: number;\r\n  highGraphics: boolean;\r\n  showShipLasers: boolean;\r\n  showRipples: boolean;\r\n  showDamageNumbers: boolean;\r\n}\r\n\r\nconst SETTINGS_KEY = 'alien-clicker-settings';\r\n\r\nexport class Settings {\r\n  static save(settings: UserSettings): void {\r\n    try {\r\n      localStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));\r\n    } catch (error) {\r\n      console.error('Failed to save settings:', error);\r\n    }\r\n  }\r\n\r\n  static load(): UserSettings {\r\n    try {\r\n      const saved = localStorage.getItem(SETTINGS_KEY);\r\n      if (saved) {\r\n        const data = JSON.parse(saved) as UserSettings;\r\n        return {\r\n          soundEnabled: data.soundEnabled ?? true,\r\n          volume: data.volume ?? 0.3,\r\n          highGraphics: data.highGraphics ?? true,\r\n          showShipLasers: data.showShipLasers ?? true,\r\n          showRipples: data.showRipples ?? true,\r\n          showDamageNumbers: data.showDamageNumbers ?? true,\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load settings:', error);\r\n    }\r\n    return Settings.getDefault();\r\n  }\r\n\r\n  static getDefault(): UserSettings {\r\n    return {\r\n      soundEnabled: true,\r\n      volume: 0.3,\r\n      highGraphics: true,\r\n      showShipLasers: true,\r\n      showRipples: true,\r\n      showDamageNumbers: true,\r\n    };\r\n  }\r\n}\r\n\r\n","import { AlienBall } from './entities/AlienBall';\nimport { BossBall } from './entities/BossBall';\nimport { BossProjectile } from './entities/BossProjectile';\nimport { Ship } from './entities/Ship';\nimport { PlayerShip } from './entities/PlayerShip';\nimport { Canvas } from './render/Canvas';\nimport { Draw } from './render/Draw';\nimport { Loop } from './core/Loop';\nimport { Input } from './core/Input';\nimport { Store } from './core/Store';\nimport { Save } from './core/Save';\nimport { LaserSystem } from './systems/LaserSystem';\nimport { RippleSystem } from './systems/RippleSystem';\nimport { UpgradeSystem } from './systems/UpgradeSystem';\nimport { AutoFireSystem } from './systems/AutoFireSystem';\nimport { AchievementSystem } from './systems/AchievementSystem';\nimport { AscensionSystem } from './systems/AscensionSystem';\nimport { ParticleSystem } from './entities/Particle';\nimport { DamageNumberSystem } from './systems/DamageNumberSystem';\nimport { ComboSystem } from './systems/ComboSystem';\nimport { SoundManager } from './systems/SoundManager';\nimport { Hud } from './ui/Hud';\nimport { Shop } from './ui/Shop';\nimport { UpgradesDisplay } from './ui/UpgradesDisplay';\nimport { AchievementSnackbar } from './ui/AchievementSnackbar';\nimport { AchievementsModal } from './ui/AchievementsModal';\nimport { AscensionModal } from './ui/AscensionModal';\nimport { StatsPanel } from './ui/StatsPanel';\nimport { SettingsModal } from './ui/SettingsModal';\nimport { Layout } from './ui/Layout';\nimport { ColorManager } from './math/ColorManager';\nimport { Settings } from './core/Settings';\nimport type { Vec2, GameMode } from './types';\nimport type { UserSettings } from './core/Settings';\n\nexport class Game {\n  private canvas: Canvas;\n  private draw: Draw;\n  private loop: Loop;\n  private input: Input;\n  private store: Store;\n  private ball: AlienBall | null = null;\n  private bossBall: BossBall | null = null;\n  private ships: Ship[] = [];\n  private playerShip: PlayerShip | null = null;\n  private bossProjectiles: BossProjectile[] = [];\n  private laserSystem: LaserSystem;\n  private rippleSystem: RippleSystem;\n  private particleSystem: ParticleSystem;\n  private damageNumberSystem: DamageNumberSystem;\n  private comboSystem: ComboSystem;\n  private soundManager: SoundManager;\n  private upgradeSystem: UpgradeSystem;\n  private autoFireSystem: AutoFireSystem;\n  private achievementSystem: AchievementSystem;\n  private ascensionSystem: AscensionSystem;\n  private achievementSnackbar: AchievementSnackbar;\n  private achievementsModal: AchievementsModal;\n  private ascensionModal: AscensionModal;\n  private statsPanel: StatsPanel;\n  private settingsModal: SettingsModal;\n  private hud: Hud;\n  private upgradesDisplay: UpgradesDisplay;\n  private saveTimer = 0;\n  private saveInterval = 3;\n  private playTimeAccumulator = 0;\n  private passiveGenAccumulator = 0;\n  private shakeTime = 0;\n  private shakeAmount = 0;\n  private mode: GameMode = 'normal';\n  private transitionTime = 0;\n  private transitionDuration = 2;\n  private keys: Set<string> = new Set();\n  private shootCooldown = 0;\n  private shootCooldownMax = 0.2;\n  private userSettings: UserSettings = Settings.getDefault();\n  \n  // Boss clicking competition\n  private bossClickProgress = 0; // 0-100\n  private bossProgressDecayRate = 5; // Progress lost per second\n  private bossClickIncrement = 2; // Progress gained per click\n  \n  // Damage batching for performance\n  private damageBatch = 0;\n  private critBatch = false;\n  private batchTimer = 0;\n  private batchInterval = 0.05; // Apply damage every 50ms\n\n  constructor() {\n    const canvasElement = document.getElementById(\n      'game-canvas',\n    ) as HTMLCanvasElement | null;\n    if (!canvasElement) {\n      throw new Error('Canvas not found');\n    }\n\n    this.canvas = new Canvas(canvasElement);\n    this.draw = new Draw(this.canvas.getContext());\n    this.store = new Store(Save.load());\n    \n    // Load user settings\n    this.userSettings = Settings.load();\n    \n    // Handle window resize to reposition game elements\n    window.addEventListener('resize', () => {\n      this.handleResize();\n    });\n    this.upgradeSystem = new UpgradeSystem();\n    this.laserSystem = new LaserSystem();\n    this.rippleSystem = new RippleSystem();\n    this.particleSystem = new ParticleSystem();\n    this.damageNumberSystem = new DamageNumberSystem();\n    this.comboSystem = new ComboSystem();\n    this.soundManager = new SoundManager();\n    this.soundManager.setEnabled(this.userSettings.soundEnabled);\n    this.soundManager.setVolume(this.userSettings.volume);\n    this.autoFireSystem = new AutoFireSystem();\n    this.achievementSystem = new AchievementSystem();\n    this.ascensionSystem = new AscensionSystem();\n    this.upgradeSystem.setAscensionSystem(this.ascensionSystem);\n    this.achievementSnackbar = new AchievementSnackbar();\n    this.achievementsModal = new AchievementsModal(this.achievementSystem);\n    this.ascensionModal = new AscensionModal(this.ascensionSystem, this.store, () => { this.performAscension(); });\n    this.statsPanel = new StatsPanel();\n    this.settingsModal = new SettingsModal(this.soundManager);\n    \n    // Connect settings modal to callbacks and save on change\n    this.settingsModal.setGraphicsCallback((enabled: boolean) => {\n      this.userSettings.highGraphics = enabled;\n      if (!enabled) {\n        this.particleSystem.clear();\n      }\n      Settings.save(this.userSettings);\n    });\n    this.settingsModal.setShipLasersCallback((enabled: boolean) => {\n      this.userSettings.showShipLasers = enabled;\n      this.laserSystem.setShowShipLasers(enabled);\n      Settings.save(this.userSettings);\n    });\n    this.settingsModal.setRipplesCallback((enabled: boolean) => {\n      this.userSettings.showRipples = enabled;\n      if (!enabled) {\n        this.rippleSystem.clear();\n      }\n      Settings.save(this.userSettings);\n    });\n    this.settingsModal.setDamageNumbersCallback((enabled: boolean) => {\n      this.userSettings.showDamageNumbers = enabled;\n      this.damageNumberSystem.setEnabled(enabled);\n      if (!enabled) {\n        this.damageNumberSystem.clear();\n      }\n      Settings.save(this.userSettings);\n    });\n    this.settingsModal.setSoundCallback((enabled: boolean) => {\n      this.userSettings.soundEnabled = enabled;\n      Settings.save(this.userSettings);\n    });\n    this.settingsModal.setVolumeCallback((volume: number) => {\n      this.userSettings.volume = volume;\n      Settings.save(this.userSettings);\n    });\n    \n    // Apply loaded settings\n    this.laserSystem.setShowShipLasers(this.userSettings.showShipLasers);\n    this.damageNumberSystem.setEnabled(this.userSettings.showDamageNumbers);\n    this.settingsModal.updateGraphicsToggles(\n      this.userSettings.highGraphics,\n      this.userSettings.showShipLasers,\n      this.userSettings.showRipples,\n      this.userSettings.showDamageNumbers\n    );\n    // Setup stats panel button\n    const statsBtn = document.getElementById('stats-btn');\n    if (statsBtn) {\n      statsBtn.addEventListener('click', () => {\n        this.statsPanel.show();\n      });\n    }\n    this.hud = new Hud();\n    this.upgradesDisplay = new UpgradesDisplay(this.upgradeSystem);\n    const shop = new Shop(this.store, this.upgradeSystem);\n    shop.setSoundManager(this.soundManager);\n\n    this.achievementSystem.setOnUnlock((achievement) => {\n      this.achievementSnackbar.show(achievement);\n      this.soundManager.playAchievement();\n    });\n    this.achievementSystem.updateFromState(this.store.getState());\n\n    this.input = new Input(canvasElement);\n    this.loop = new Loop(\n      (dt) => {\n        this.update(dt);\n      },\n      () => {\n        this.render();\n      },\n    );\n\n    this.initGame();\n    this.setupInput();\n    this.setupKeyboard();\n    this.setupAutoSave();\n    this.setupBossDialog();\n    this.setupAchievementsButton();\n    this.setupAscensionButton();\n    this.setupSettingsButton();\n    this.setupGraphicsToggle();\n    Layout.setupResetButton(() => {\n      this.resetGame();\n    });\n  }\n\n  private setupGraphicsToggle(): void {\n    // Graphics and sound toggles are now in the Settings modal\n    // This method is kept for backwards compatibility but does nothing\n  }\n\n  private setupBossDialog(): void {\n    const startBtn = document.getElementById('boss-start-btn');\n    if (startBtn) {\n      startBtn.addEventListener('click', () => {\n        const dialog = document.getElementById('boss-dialog');\n        if (dialog) {\n          dialog.style.display = 'none';\n        }\n        this.startBossFight();\n      });\n    }\n  }\n\n  private setupAchievementsButton(): void {\n    const achievementsBtn = document.getElementById('achievements-btn');\n    if (achievementsBtn) {\n      achievementsBtn.addEventListener('click', () => {\n        this.achievementsModal.show();\n      });\n    }\n  }\n\n  private setupAscensionButton(): void {\n    // Create ascension button dynamically\n    const hudElement = document.getElementById('hud');\n    if (hudElement) {\n      const ascensionBtn = document.createElement('button');\n      ascensionBtn.id = 'ascension-btn';\n      ascensionBtn.className = 'hud-button ascension-hud-btn';\n      ascensionBtn.textContent = '🌟 Ascend';\n      ascensionBtn.addEventListener('click', () => {\n        this.ascensionModal.show();\n      });\n      \n      // Update button visibility based on whether ascension is unlocked\n      const updateAscensionBtn = () => {\n        const state = this.store.getState();\n        const canAscend = this.ascensionSystem.canAscend(state);\n        ascensionBtn.style.display = canAscend || state.prestigeLevel > 0 ? 'block' : 'none';\n      };\n      \n      this.store.subscribe(updateAscensionBtn);\n      updateAscensionBtn();\n      \n      hudElement.appendChild(ascensionBtn);\n    }\n  }\n\n  private setupSettingsButton(): void {\n    const hudElement = document.getElementById('hud');\n    if (hudElement) {\n      const settingsBtn = document.createElement('button');\n      settingsBtn.id = 'settings-btn';\n      settingsBtn.className = 'hud-button';\n      settingsBtn.textContent = '⚙️ Settings';\n      settingsBtn.addEventListener('click', () => {\n        this.settingsModal.show();\n      });\n      hudElement.appendChild(settingsBtn);\n    }\n  }\n\n  private performAscension(): void {\n    const state = this.store.getState();\n    \n    // Calculate prestige points to gain\n    const prestigeGain = this.ascensionSystem.calculatePrestigePoints(state);\n    \n    // Save what we're keeping\n    const keepSubUpgrades = { ...state.subUpgrades };\n    const keepAchievements = { ...state.achievements };\n    const keepStats = { ...state.stats };\n    const keepPrestigeUpgrades = { ...state.prestigeUpgrades };\n    const newPrestigePoints = state.prestigePoints + prestigeGain;\n    const newPrestigeLevel = state.prestigeLevel + 1;\n    \n    // Update prestige stats\n    keepStats.totalPrestige = newPrestigeLevel;\n    \n    // Get starting level from prestige upgrades\n    const startingLevel = this.ascensionSystem.getStartingLevel(state);\n    \n    // Create a completely fresh state (NOT from save file)\n    const freshState: import('./types').GameState = {\n      points: 0,\n      shipsCount: 1,\n      attackSpeedLevel: 0,\n      autoFireUnlocked: false,\n      pointMultiplierLevel: 0,\n      critChanceLevel: 0,\n      resourceGenLevel: 0,\n      xpBoostLevel: 0,\n      level: startingLevel,\n      experience: 0,\n      subUpgrades: keepSubUpgrades, // Keep special upgrades\n      achievements: keepAchievements, // Keep achievements\n      stats: keepStats, // Keep stats\n      prestigeLevel: newPrestigeLevel,\n      prestigePoints: newPrestigePoints,\n      prestigeUpgrades: keepPrestigeUpgrades, // Keep prestige upgrades\n      harmonicState: {\n        streak: 0,\n        harmonicCores: 0,\n        tuningForkLevel: 0,\n        metronomePurchased: false,\n        chorusLevel: 0,\n        quantizedRipplesLevel: 0,\n        sigils: {\n          tempo: 0,\n          echo: 0,\n          focus: 0,\n        },\n        echoAccumulator: 0,\n      },\n    };\n    \n    this.store.setState(freshState);\n    Save.save(this.store.getState());\n    \n    // Reinitialize game\n    this.mode = 'normal';\n    this.createBall();\n    this.createShips();\n    this.laserSystem.clear();\n    this.rippleSystem.clear();\n    this.particleSystem.clear();\n    this.damageNumberSystem.clear();\n    this.comboSystem.reset();\n    this.autoFireSystem.reset();\n    this.saveTimer = 0;\n  }\n\n  private setupKeyboard(): void {\n    window.addEventListener('keydown', (event) => {\n      this.keys.add(event.key.toLowerCase());\n      if (event.key === ' ' && this.mode === 'boss') {\n        event.preventDefault();\n      }\n    });\n    window.addEventListener('keyup', (event) => {\n      this.keys.delete(event.key.toLowerCase());\n    });\n  }\n\n  private initGame(): void {\n    this.createBall();\n    this.createShips();\n    const state = this.store.getState();\n    this.hud.update(state.points);\n    this.hud.updateLevel(\n      state.level,\n      state.experience,\n      ColorManager.getExpRequired(state.level),\n    );\n    this.upgradesDisplay.update(state);\n  }\n\n  private createBall(): void {\n    const cx = this.canvas.getCenterX();\n    const cy = this.canvas.getCenterY();\n    const radius =\n      Math.min(this.canvas.getWidth(), this.canvas.getHeight()) * 0.08;\n    const state = this.store.getState();\n    this.ball = AlienBall.createRandom(cx, cy, radius, state.level);\n    this.bossBall = null;\n  }\n\n  private createBoss(): void {\n    const cx = this.canvas.getCenterX();\n    const cy = this.canvas.getCenterY();\n    const radius =\n      Math.min(this.canvas.getWidth(), this.canvas.getHeight()) * 0.12;\n    const state = this.store.getState();\n    const hp = ColorManager.getBossHp(state.level);\n    this.bossBall = new BossBall(cx, cy, radius, hp);\n    this.ball = null;\n    this.playerShip = new PlayerShip(cx, this.canvas.getHeight() - 100);\n  }\n\n  private createShips(): void {\n    const state = this.store.getState();\n    const cx = this.canvas.getCenterX();\n    const cy = this.canvas.getCenterY();\n    const orbitRadius =\n      Math.min(this.canvas.getWidth(), this.canvas.getHeight()) * 0.4;\n\n    this.ships = [];\n    for (let i = 0; i < state.shipsCount; i++) {\n      // Random angle for each ship instead of perfect circle\n      const angle = Math.random() * Math.PI * 2;\n      const isMain = i === 0;\n      // Random radius for each ship\n      const randomRadius = orbitRadius * (0.7 + Math.random() * 0.6); // 70% to 130% of base radius\n      this.ships.push(new Ship(angle, cx, cy, randomRadius, isMain));\n    }\n    this.autoFireSystem.setShipCount(state.shipsCount);\n  }\n\n  private setupInput(): void {\n    this.input.onClick((pos) => {\n      this.handleClick(pos);\n    });\n    this.store.subscribe(() => {\n      const state = this.store.getState();\n      if (this.ships.length !== state.shipsCount) {\n        this.createShips();\n      }\n      this.hud.update(state.points);\n      this.hud.updateLevel(\n        state.level,\n        state.experience,\n        ColorManager.getExpRequired(state.level),\n      );\n      this.upgradesDisplay.update(state);\n    });\n  }\n\n  private setupAutoSave(): void {\n    window.addEventListener('beforeunload', () => {\n      const state = this.store.getState();\n      Save.save(state);\n    });\n  }\n\n  private handleClick(pos: Vec2): void {\n    if (this.mode === 'transition') return;\n\n    if (this.mode === 'normal' && this.ball?.isPointInside(pos) && this.ball.currentHp > 0) {\n      this.store.incrementClick();\n      this.soundManager.playClick();\n      this.fireVolley();\n    } else if (this.mode === 'boss' && this.bossBall?.isPointInside(pos)) {\n      // Boss clicking competition\n      this.store.incrementClick();\n      this.soundManager.playClick();\n      this.bossClickProgress = Math.min(100, this.bossClickProgress + this.bossClickIncrement);\n      this.updateBossProgressBar();\n      \n      // Check if won\n      if (this.bossClickProgress >= 100) {\n        this.onBossDefeated();\n      }\n    }\n  }\n\n  private fireVolley(): void {\n    const state = this.store.getState();\n    const damage = this.upgradeSystem.getPointsPerHit(state);\n    const target = { x: this.ball?.x ?? 0, y: this.ball?.y ?? 0 };\n    const laserVisuals = this.getLaserVisuals(state);\n\n    // Only fire from the main ship (index 0) when clicking\n    if (this.ships[0]) {\n      this.laserSystem.spawnLaser(this.ships[0].getFrontPosition(), target, damage, laserVisuals);\n      \n      // Rapid fire upgrade: fire additional lasers\n      if (state.subUpgrades['rapid_fire']) {\n        // Fire from 2 random other ships\n        const otherShips = this.ships.slice(1);\n        for (let i = 0; i < Math.min(2, otherShips.length); i++) {\n          const randomShip = otherShips[Math.floor(Math.random() * otherShips.length)];\n          if (randomShip) {\n            // These are from the player's click, so not marked as isFromShip\n            this.laserSystem.spawnLaser(randomShip.getFrontPosition(), target, damage, laserVisuals);\n          }\n        }\n      }\n    }\n\n    // Spawn visual ripple\n    const rippleRadius = this.ball ? this.ball.radius * 2 : 100;\n    this.rippleSystem.spawnRipple(target, rippleRadius);\n  }\n\n  private shootLaser(): void {\n    if (!this.playerShip) return;\n    if (this.shootCooldown > 0) return;\n\n    const state = this.store.getState();\n    const damage = this.upgradeSystem.getPointsPerHit(state);\n    const origin = this.playerShip.getFrontPosition();\n    const angle = this.playerShip.getAngle();\n    const laserVisuals = this.getLaserVisuals(state);\n    \n    // Shoot in the direction the ship is facing, not at the boss\n    const laserRange = 2000;\n    const target = {\n      x: origin.x + Math.cos(angle) * laserRange,\n      y: origin.y + Math.sin(angle) * laserRange,\n    };\n    \n    this.laserSystem.spawnLaser(origin, target, damage, laserVisuals);\n    this.shootCooldown = this.shootCooldownMax;\n  }\n\n  private fireSingleShip(shipIndex: number): void {\n    const ship = this.ships[shipIndex];\n    if (!ship) return;\n\n    const state = this.store.getState();\n    const damage = this.upgradeSystem.getPointsPerHit(state);\n    const target = { x: this.ball?.x ?? 0, y: this.ball?.y ?? 0 };\n    const laserVisuals = this.getLaserVisuals(state);\n\n    // Mark laser as from ship so it can be hidden for performance\n    this.laserSystem.spawnLaser(ship.getFrontPosition(), target, damage, { \n      ...laserVisuals, \n      isFromShip: true\n    });\n  }\n\n  // Debug method to check laser statistics\n  private debugLaserStats(): void {\n    const stats = this.laserSystem.getLaserStats();\n    if (stats.total > 200) {\n      console.log(`Lasers: ${stats.total.toString()} total (${stats.playerLasers.toString()} player, ${stats.shipLasers.toString()} ship)`);\n    }\n  }\n\n  private getLaserVisuals(state: import('./types').GameState): { isCrit: boolean; color: string; width: number } {\n    let color = '#fff';\n    let width = 1.5; // Thin lasers\n    let isCrit = false;\n\n    // Check for critical hit\n    const critChance = this.upgradeSystem.getCritChance(state);\n    if (Math.random() * 100 < critChance) {\n      isCrit = true;\n      color = '#ffff00'; // Yellow for crit\n      width = 2; // Thin even for crits\n      this.store.getState().stats.criticalHits++;\n      return { isCrit, color, width };\n    }\n\n    // Check for perfect precision super crit\n    if (state.subUpgrades['perfect_precision']) {\n      if (Math.random() < 0.05) {\n        isCrit = true;\n        color = '#ff00ff'; // Magenta for super crit\n        width = 2; // Thin even for super crits\n        this.store.getState().stats.criticalHits++;\n        return { isCrit, color, width };\n      }\n    }\n\n    // Laser color based on damage upgrades (all thin)\n    if (state.subUpgrades['cosmic_ascension']) {\n      color = '#ff00ff'; // Magenta for cosmic\n      width = 2;\n    } else if (state.subUpgrades['singularity_core']) {\n      color = '#8800ff'; // Purple for singularity\n      width = 2;\n    } else if (state.subUpgrades['heart_of_galaxy']) {\n      color = '#ff0044'; // Red for heart of galaxy\n      width = 2;\n    } else if (state.subUpgrades['antimatter_rounds']) {\n      color = '#ff0088'; // Pink for antimatter\n      width = 1.5;\n    } else if (state.subUpgrades['chaos_emeralds']) {\n      color = '#00ff88'; // Emerald green\n      width = 1.5;\n    } else if (state.subUpgrades['overclocked_reactors']) {\n      color = '#ff6600'; // Orange for overclocked\n      width = 1.5;\n    } else if (state.subUpgrades['laser_focusing']) {\n      color = '#00ffff'; // Cyan for focusing\n      width = 1.5;\n    } else if (state.pointMultiplierLevel >= 10) {\n      color = '#88ff88'; // Light green for high level\n      width = 1.5;\n    }\n\n    return { isCrit, color, width };\n  }\n\n  private handleDamage(damage: number, isCrit: boolean = false): void {\n    let finalDamage = damage;\n    \n    // Apply critical damage multiplier\n    if (isCrit) {\n      const state = this.store.getState();\n      const critMultiplier = this.upgradeSystem.getCritMultiplier(state);\n      finalDamage = damage * critMultiplier;\n    }\n    \n    // Apply combo multiplier (boss mode only)\n    if (this.mode === 'boss') {\n      const comboMult = this.comboSystem.getMultiplier();\n      finalDamage *= comboMult;\n      const oldCombo = this.comboSystem.getCombo();\n      this.comboSystem.hit();\n      const newCombo = this.comboSystem.getCombo();\n      \n      // Play combo sound on milestone combos\n      if (newCombo % 10 === 0 && newCombo > oldCombo) {\n        this.soundManager.playCombo(newCombo / 10);\n      }\n    }\n    \n    // Record damage for DPS calculation\n    this.hud.recordDamage(finalDamage);\n    \n    // Batch damage instead of applying immediately\n    this.damageBatch += finalDamage;\n    if (isCrit) {\n      this.critBatch = true;\n    }\n  }\n\n  private applyDamageBatch(): void {\n    if (this.damageBatch <= 0) return;\n    \n    const finalDamage = this.damageBatch;\n    const isCrit = this.critBatch;\n    \n    if (this.mode === 'normal' && this.ball) {\n      const broken = this.ball.takeDamage(finalDamage);\n      this.store.addPoints(finalDamage);\n      \n      // Spawn one damage number for the batched damage\n      this.damageNumberSystem.spawnDamageNumber(\n        this.ball.x,\n        this.ball.y - this.ball.radius - 20,\n        finalDamage,\n        isCrit\n      );\n      \n      if (broken) {\n        this.onBallDestroyed();\n      }\n    } else if (this.mode === 'boss' && this.bossBall) {\n      const broken = this.bossBall.takeDamage(finalDamage);\n      const state = this.store.getState();\n      const bossBonus = state.subUpgrades['alien_cookbook'] ? 2 : 1;\n      this.store.addPoints(finalDamage * 2 * bossBonus);\n      \n      // Spawn one damage number for the batched damage\n      const bossPos = this.bossBall.getPosition();\n      this.damageNumberSystem.spawnDamageNumber(\n        bossPos.x,\n        bossPos.y - this.bossBall.radius - 40,\n        finalDamage,\n        isCrit\n      );\n      \n      // Spawn hit particles occasionally (only if high graphics)\n      if (this.userSettings.highGraphics && Math.random() < 0.3) {\n        const hitColor = isCrit ? '#ffff00' : '#ffffff';\n        this.particleSystem.spawnParticles({\n          x: bossPos.x + (Math.random() - 0.5) * this.bossBall.radius,\n          y: bossPos.y + (Math.random() - 0.5) * this.bossBall.radius,\n          count: isCrit ? 10 : 5,\n          color: hitColor,\n          spread: Math.PI,\n          speed: 150,\n          size: isCrit ? 4 : 3,\n          life: 0.6,\n          glow: false, // No glow for performance\n        });\n      }\n      \n      if (broken) {\n        this.onBossDestroyed();\n        // Epic explosion (only if high graphics)\n        if (this.userSettings.highGraphics) {\n          this.particleSystem.spawnExplosion(bossPos.x, bossPos.y, '#ff0000');\n        }\n      }\n    }\n    \n    // Reset batch\n    this.damageBatch = 0;\n    this.critBatch = false;\n  }\n\n  private onBallDestroyed(): void {\n    // Apply any remaining batched damage before destroying\n    if (this.damageBatch > 0) {\n      this.applyDamageBatch();\n    }\n    \n    const state = this.store.getState();\n    this.store.incrementAlienKill();\n    \n    // XP scales with level to match increased alien difficulty\n    // Increased base XP gain significantly for better progression\n    const baseXP = Math.floor(5 + state.level * 2);\n    const bonusXP = this.upgradeSystem.getBonusXP(state) * baseXP;\n    state.experience += bonusXP;\n\n    const expRequired = ColorManager.getExpRequired(state.level);\n    if (state.experience >= expRequired) {\n      state.experience -= expRequired;\n      state.level++;\n      this.store.updateMaxLevel();\n      this.soundManager.playLevelUp();\n\n      if (ColorManager.isBossLevel(state.level)) {\n        this.showBossDialog();\n      } else {\n        setTimeout(() => {\n          this.createBall();\n        }, 400);\n      }\n    } else {\n      setTimeout(() => {\n        this.createBall();\n      }, 400);\n    }\n\n    this.store.setState(state);\n  }\n\n  private onBossDefeated(): void {\n    const state = this.store.getState();\n    this.store.incrementBossKill();\n    \n    // Grant massive points for boss defeat\n    const bossReward = Math.floor(state.level * 10000);\n    this.store.addPoints(bossReward);\n    \n    state.experience = 0;\n    state.level++;\n    this.store.updateMaxLevel();\n    this.store.setState(state);\n    this.soundManager.playBossDefeat();\n\n    // Hide boss progress bar\n    const bossBar = document.getElementById('boss-progress-container');\n    if (bossBar) {\n      bossBar.style.display = 'none';\n    }\n\n    setTimeout(() => {\n      this.startTransitionToNormal();\n    }, 600);\n  }\n\n  private onBossDestroyed(): void {\n    // Legacy method - redirects to onBossDefeated\n    this.onBossDefeated();\n  }\n\n  private showBossDialog(): void {\n    const dialog = document.getElementById('boss-dialog');\n    if (dialog) {\n      dialog.style.display = 'flex';\n      this.soundManager.playBossAppear();\n    }\n  }\n\n  private startBossFight(): void {\n    this.startTransitionToBoss();\n  }\n\n  private startTransitionToBoss(): void {\n    this.mode = 'transition';\n    this.transitionTime = 0;\n    this.comboSystem.reset();\n    this.bossClickProgress = 0;\n    const bossControls = document.getElementById('boss-controls');\n    if (bossControls) bossControls.style.display = 'none';\n    setTimeout(() => {\n      this.createBoss();\n      this.mode = 'boss';\n      if (bossControls) bossControls.style.display = 'block';\n      \n      // Show boss progress bar\n      const bossBar = document.getElementById('boss-progress-container');\n      if (bossBar) {\n        bossBar.style.display = 'block';\n      }\n      this.updateBossProgressBar();\n    }, this.transitionDuration * 500);\n  }\n\n  private updateBossProgressBar(): void {\n    const fill = document.getElementById('boss-progress-fill');\n    const text = document.getElementById('boss-progress-text');\n    if (fill) {\n      fill.style.width = `${this.bossClickProgress.toString()}%`;\n    }\n    if (text) {\n      text.textContent = `${Math.floor(this.bossClickProgress).toString()}%`;\n    }\n  }\n\n  private startTransitionToNormal(): void {\n    this.mode = 'transition';\n    this.transitionTime = 0;\n    this.playerShip = null;\n    this.bossProjectiles = [];\n    const bossControls = document.getElementById('boss-controls');\n    if (bossControls) bossControls.style.display = 'none';\n    setTimeout(() => {\n      this.createBall();\n      this.mode = 'normal';\n    }, this.transitionDuration * 500);\n  }\n\n  private triggerShake(amount: number, duration: number): void {\n    this.shakeAmount = amount;\n    this.shakeTime = duration;\n  }\n\n  private spawnBossProjectiles(): void {\n    if (!this.bossBall || !this.playerShip) return;\n\n    const bossPos = this.bossBall.getPosition();\n    const playerPos = this.playerShip.getPosition();\n    const pattern = this.bossBall.getAttackPattern();\n    const projectileSpeed = 200;\n\n    if (pattern === 'single') {\n      // Single projectile aimed at player\n      this.bossProjectiles.push(\n        new BossProjectile(bossPos.x, bossPos.y, playerPos.x, playerPos.y, projectileSpeed)\n      );\n    } else if (pattern === 'spread') {\n      // 3 projectiles in a spread pattern\n      const angleToPlayer = Math.atan2(playerPos.y - bossPos.y, playerPos.x - bossPos.x);\n      const spreadAngle = Math.PI / 6; // 30 degrees spread\n      \n      for (let i = -1; i <= 1; i++) {\n        const angle = angleToPlayer + (i * spreadAngle);\n        const targetX = bossPos.x + Math.cos(angle) * 1000;\n        const targetY = bossPos.y + Math.sin(angle) * 1000;\n        this.bossProjectiles.push(\n          new BossProjectile(bossPos.x, bossPos.y, targetX, targetY, projectileSpeed)\n        );\n      }\n    } else {\n      // 8 projectiles in all directions (spiral pattern)\n      const numProjectiles = 8;\n      for (let i = 0; i < numProjectiles; i++) {\n        const angle = (i / numProjectiles) * Math.PI * 2;\n        const targetX = bossPos.x + Math.cos(angle) * 1000;\n        const targetY = bossPos.y + Math.sin(angle) * 1000;\n        this.bossProjectiles.push(\n          new BossProjectile(bossPos.x, bossPos.y, targetX, targetY, projectileSpeed * 1.2)\n        );\n      }\n    }\n  }\n\n  private update(dt: number): void {\n    const state = this.store.getState();\n\n    // Track play time\n    this.playTimeAccumulator += dt;\n    if (this.playTimeAccumulator >= 1) {\n      this.store.addPlayTime(Math.floor(this.playTimeAccumulator));\n      this.playTimeAccumulator = this.playTimeAccumulator % 1;\n    }\n\n    // Passive point generation\n    this.passiveGenAccumulator += dt;\n    if (this.passiveGenAccumulator >= 1) {\n      const passiveGen = this.upgradeSystem.getPassiveGen(state);\n      if (passiveGen > 0) {\n        this.store.addPoints(passiveGen);\n      }\n      this.passiveGenAccumulator = this.passiveGenAccumulator % 1;\n    }\n\n    // Update HUD stats\n    try {\n      const dps = this.hud.calculateDPS();\n      const passiveGen = this.upgradeSystem.getPassiveGen(state);\n      const critChance = this.upgradeSystem.getCritChance(state);\n      this.hud.updateStats(dps, passiveGen, critChance);\n    } catch {\n      // Ignore errors in stat updates\n    }\n\n    // Check achievements every frame\n    this.achievementSystem.checkAchievements(state);\n\n    if (this.mode === 'transition') {\n      this.transitionTime += dt;\n      if (this.transitionTime >= this.transitionDuration) {\n        this.transitionTime = 0;\n      }\n    }\n\n    this.ball?.update(dt);\n    this.bossBall?.update(dt, this.canvas.getWidth(), this.canvas.getHeight());\n    \n    this.laserSystem.update(dt, (damage, isCrit) => {\n      this.handleDamage(damage, isCrit);\n    });\n    this.rippleSystem.update(dt);\n    this.particleSystem.update(dt);\n    this.damageNumberSystem.update(dt);\n    this.comboSystem.update(dt);\n    \n    // Debug laser stats occasionally\n    if (Math.random() < 0.01) { // 1% chance per frame\n      this.debugLaserStats();\n    }\n    \n    // Apply damage batches periodically\n    this.batchTimer += dt;\n    if (this.batchTimer >= this.batchInterval) {\n      this.applyDamageBatch();\n      this.batchTimer = 0;\n    }\n    \n    // Add boss trail particles (only if high graphics)\n    if (this.userSettings.highGraphics && this.mode === 'boss' && this.bossBall) {\n      const bossPos = this.bossBall.getPosition();\n      const phase = this.bossBall.getPhase();\n      let trailColor = '#ffffff';\n      if (phase === 3) trailColor = '#ff0000';\n      else if (phase === 2) trailColor = '#ffaa00';\n      \n      this.particleSystem.spawnTrail(bossPos.x, bossPos.y, trailColor);\n    }\n\n    // Rotate ships around the alien (uses each ship's own fixed rotation speed)\n    if (this.mode === 'normal') {\n      for (const ship of this.ships) {\n        ship.rotate(dt); // Uses ship's fixed rotation speed\n      }\n    }\n\n    if (this.mode === 'boss') {\n      // Boss clicking competition - decay progress over time\n      if (this.bossClickProgress > 0) {\n        this.bossClickProgress = Math.max(0, this.bossClickProgress - (this.bossProgressDecayRate * dt));\n        this.updateBossProgressBar();\n      }\n      \n      // Original boss projectile logic (keeping for visual effects)\n      if (this.playerShip) {\n        if (this.keys.has('arrowleft') || this.keys.has('a')) {\n          this.playerShip.rotate(-1, dt);\n        }\n        if (this.keys.has('arrowright') || this.keys.has('d')) {\n          this.playerShip.rotate(1, dt);\n        }\n        if (this.keys.has('arrowup') || this.keys.has('w')) {\n          this.playerShip.thrust(dt);\n        }\n        if (this.keys.has(' ') || this.keys.has('spacebar')) {\n          this.shootLaser();\n        }\n\n        this.playerShip.update(dt, this.canvas.getWidth(), this.canvas.getHeight());\n\n        if (this.shootCooldown > 0) {\n          this.shootCooldown = Math.max(0, this.shootCooldown - dt);\n        }\n\n        // Boss attacks\n        if (this.bossBall && this.bossBall.shouldAttack()) {\n          this.spawnBossProjectiles();\n        }\n\n        // Update boss projectiles\n        this.bossProjectiles = this.bossProjectiles.filter(proj => {\n          const shouldRemove = proj.update(dt);\n          \n          // Check collision with player\n          if (!shouldRemove && this.playerShip) {\n            const playerPos = this.playerShip.getPosition();\n            if (proj.checkCollision(playerPos, 15)) {\n              // Hit player - small damage feedback\n              this.triggerShake(3, 0.1);\n              return true; // Remove projectile\n            }\n          }\n          \n          return !shouldRemove;\n        });\n      }\n    } else if (this.mode === 'normal') {\n      // Auto-fire for all ships except the main ship (index 0)\n      // Always fire (for damage), but may not render visually\n      this.autoFireSystem.update(\n        dt,\n        true, // Auto-fire always enabled for non-main ships\n        this.upgradeSystem.getFireCooldown(state),\n        (shipIndex) => {\n          if (shipIndex > 0) {\n            this.fireSingleShip(shipIndex);\n          }\n        }\n      );\n    }\n\n    this.saveTimer += dt;\n    if (this.saveTimer >= this.saveInterval) {\n      Save.save(state);\n      this.saveTimer = 0;\n    }\n\n    if (this.shakeTime > 0) {\n      this.shakeTime = Math.max(0, this.shakeTime - dt);\n    }\n  }\n\n  private render(): void {\n    this.canvas.clear();\n    const ctx = this.canvas.getContext();\n\n    ctx.save();\n\n    if (this.shakeTime > 0) {\n      const intensity = this.shakeAmount * (this.shakeTime / 0.1);\n      const offsetX = (Math.random() - 0.5) * intensity;\n      const offsetY = (Math.random() - 0.5) * intensity;\n      ctx.translate(offsetX, offsetY);\n    }\n\n    if (this.mode === 'transition') {\n      this.renderTransition();\n    } else {\n      // Layer 1: Background effects\n      if (this.userSettings.highGraphics) {\n        this.particleSystem.draw(this.draw);\n      }\n      if (this.userSettings.showRipples) {\n        this.rippleSystem.draw(this.draw);\n      }\n      \n      // Layer 2: Lasers (behind the ball for 3D depth effect)\n      this.laserSystem.draw(this.draw);\n      \n      // Layer 3: Main entities (ball appears in front of lasers)\n      this.ball?.draw(this.draw);\n      this.bossBall?.draw(this.draw);\n\n      // Layer 4: Ships and projectiles\n      if (this.mode === 'boss') {\n        this.playerShip?.draw(this.draw);\n        // Draw boss projectiles\n        for (const proj of this.bossProjectiles) {\n          proj.draw(this.draw);\n        }\n      } else {\n        for (const ship of this.ships) {\n          ship.draw(this.draw);\n        }\n      }\n\n      // Layer 5: UI elements on top\n      this.damageNumberSystem.draw(this.draw);\n      \n      // Draw combo in boss mode\n      if (this.mode === 'boss') {\n        this.comboSystem.draw(this.draw, this.canvas.getWidth());\n      }\n    }\n\n    ctx.restore();\n  }\n\n  private renderTransition(): void {\n    const progress = this.transitionTime / this.transitionDuration;\n    const alpha = Math.sin(progress * Math.PI);\n\n    this.draw.setAlpha(alpha);\n    const cx = this.canvas.getCenterX();\n    const cy = this.canvas.getCenterY();\n    const maxRadius = Math.max(\n      this.canvas.getWidth(),\n      this.canvas.getHeight(),\n    );\n\n    for (let i = 0; i < 5; i++) {\n      const radius = maxRadius * (progress + i * 0.2);\n      this.draw.setStroke('#fff', 2);\n      this.draw.circle(cx, cy, radius, false);\n    }\n\n    this.draw.resetAlpha();\n  }\n\n  start(): void {\n    this.loop.start();\n  }\n\n  private resetGame(): void {\n    Save.clear();\n    this.store.setState(Save.load());\n    this.mode = 'normal';\n    this.createBall();\n    this.createShips();\n    this.laserSystem.clear();\n    this.rippleSystem.clear();\n    this.particleSystem.clear();\n    this.damageNumberSystem.clear();\n    this.comboSystem.reset();\n    this.autoFireSystem.reset();\n    this.saveTimer = 0;\n  }\n\n  private handleResize(): void {\n    // Reposition ball to center\n    if (this.ball) {\n      this.ball.x = this.canvas.getCenterX();\n      this.ball.y = this.canvas.getCenterY();\n    }\n    \n    // Reposition boss ball\n    if (this.bossBall) {\n      const cx = this.canvas.getCenterX();\n      const cy = this.canvas.getCenterY();\n      this.bossBall.x = cx;\n      this.bossBall.y = cy;\n    }\n    \n    // Recreate ships with new positions\n    if (this.ships.length > 0 && this.mode === 'normal') {\n      this.createShips();\n    }\n    \n    // Reposition player ship if in boss mode\n    if (this.playerShip) {\n      this.playerShip.x = this.canvas.getCenterX();\n      this.playerShip.y = this.canvas.getHeight() - 100;\n    }\n  }\n}\n\n\n\n","import { Game } from './Game';\r\nimport '../styles.css';\r\n\r\nfunction init(): void {\r\n  const game = new Game();\r\n  game.start();\r\n}\r\n\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', init);\r\n} else {\r\n  init();\r\n}\r\n\r\n"],"names":["AlienBall","x","y","radius","color","baseHp","colors","level","scalingFactor","levelScaledColor","point","dx","dy","amount","wasAlive","dt","drawer","progress","alpha","scale","hpBarWidth","hpBarHeight","hpBarY","hpPercent","flashAlpha","flashRadius","BossBall","hp","angle","canvasWidth","canvasHeight","mainColor","accentColor","pulse","glowIntensity","i","ringAlpha","chargeAlpha","ctx","x1","y1","x2","y2","eyeOffset","eyeSize","BossProjectile","targetX","targetY","speed","dist","draw","targetRadius","Ship","centerX","centerY","orbitRadius","isMainShip","actualSpeed","size","tipX","tipY","left","right","smallSize","innerTipX","innerTipY","innerLeft","innerRight","PlayerShip","direction","flameLength","flameX","flameY","flameEndX","flameEndY","Canvas","canvasElement","context","rect","Draw","fill","width","blur","p1","p2","p3","text","font","align","Loop","update","render","currentTime","deltaTime","Input","canvas","pos","handler","touch","clientX","clientY","scaleX","scaleY","Store","initialState","updates","seconds","listener","l","clamp","value","min","max","SAVE_KEY","Save","state","saveData","error","saved","data","defaultStats","defaultHarmonicState","Laser","origin","target","damage","upgrades","current","fadeInAlpha","colorRgba","colorTransparent","gradient","hex","r","g","b","LaserSystem","show","youngestIndex","youngestAge","laser","onHit","shipLasers","playerLasers","Ripple","center","maxRadius","grayValue","RippleSystem","ripple","UpgradeSystem","ascensionSystem","upgrade","shipSubUpgrades","u","attackSpeedSubUpgrades","pointMultiplierSubUpgrades","critSubUpgrades","resourceSubUpgrades","xpSubUpgrades","miscSubUpgrades","cost","cooldown","suffix","discount","multiplier","chance","gen","speedMult","bonus","AutoFireSystem","count","randomDelay","autoFireUnlocked","cooldownMs","onFire","cooldownSec","AchievementSystem","callback","achievement","a","AscensionSystem","levelPast100","levelBonus","bossBonus","upgradeId","currentLevel","Particle","config","ParticleSystem","spread","life","glow","velocity","p","particle","DamageNumberSystem","enabled","isCrit","num","n","fontSize","ComboSystem","mult","timeoutPercent","SoundManager","volume","frequency","duration","type","oscillator","gainNode","freq","comboLevel","basePitch","pitch","Hud","pointsEl","levelTextEl","expTextEl","levelBarFillEl","statsContainer","hudElement","points","dps","passive","critChance","now","entry","windowStart","recentDamage","totalDamage","sum","timeSpan","experience","expToNext","percent","Button","onClick","e","Shop","store","upgradeSystem","element","shopPanel","soundManager","availableTab","ownedTab","currentPoints","throttle","subUpgrades","changed","key","canAfford","button","subUpgrade","card","allSubUpgrades","visibleSubUpgrades","sub","specialBox","title","grid","subItem","item","header","name","description","footer","currentCost","buttonElement","ownedUpgrades","message","icon","tooltip","price","UpgradesDisplay","emoji","AchievementSnackbar","snackbar","AchievementsModal","achievementSystem","modal","closeBtn","filterBtns","btn","filter","htmlItem","achievements","total","countEl","percentEl","progressBar","isLocked","isHidden","category","AscensionModal","ascendCallback","currentPP","gainPP","willGain","canAscend","ascendBtn","maxed","StatsPanel","statsBtn","content","_state","container","stateStr","categories","categoryEl","categoryTitle","statsGrid","stat","statItem","label","hours","minutes","secs","SettingsModal","graphics","ripples","damageNumbers","soundSection","soundTitle","soundToggleContainer","soundLabel","soundToggle","newState","soundHint","volumeContainer","volumeLabel","sliderRow","self","graphicsSection","graphicsTitle","graphicsToggleContainer","graphicsLabel","graphicsHint","shipLasersContainer","shipLasersLabel","shipLasersHint","ripplesContainer","ripplesLabel","ripplesHint","damageNumbersContainer","damageNumbersLabel","damageNumbersHint","closeButton","currentVolume","Layout","onReset","resetBtn","ColorManager","index","baseXP","dampingFactor","SETTINGS_KEY","Settings","settings","Game","startBtn","dialog","achievementsBtn","ascensionBtn","updateAscensionBtn","settingsBtn","prestigeGain","keepSubUpgrades","keepAchievements","keepStats","keepPrestigeUpgrades","newPrestigePoints","newPrestigeLevel","freshState","event","cx","cy","isMain","randomRadius","laserVisuals","otherShips","randomShip","rippleRadius","laserRange","shipIndex","ship","stats","finalDamage","critMultiplier","comboMult","oldCombo","newCombo","broken","bossPos","hitColor","bonusXP","expRequired","bossReward","bossBar","bossControls","playerPos","pattern","projectileSpeed","angleToPlayer","spreadAngle","passiveGen","phase","trailColor","proj","shouldRemove","intensity","offsetX","offsetY","init"],"mappings":"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"}